{"version":3,"sources":["global/containers/common/PageHeading/style.js","global/containers/common/PageHeading/index.js","global/containers/common/PageHeading/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Box/index.js","global/utils/getContentType.js"],"names":["useStyles","makeStyles","theme","eventListingLogoWrapper","display","justifyContent","position","top","pxToRem","breakpoints","up","imageWrapper","down","paddingBottom","withErrorBoundary","withSitecoreContext","withNamespaces","sitecoreContext","classes","contentType","pageContentType","toLowerCase","eventListingTemplateId","get","eventAdCalenderLogo","eventAdCalenderLogoMobile","title","ATTRIBUTE_TYPE","value","Grid","data-locator","container","spacing","item","xs","className","EVENT_TYPE","EVENT_LISTING_TEMPLATE_ID","Box","pb","Typography","variant","component","gutterBottom","field","Hidden","mdDown","implementation","Picture","media","image","src","renditionNeeded","fallbackBackgroundNeeded","alternateAltText","lgUp","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","root","marginLeft","marginRight","boxSizing","flexWrap","width","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","Object","assign","generateGrid","name","styleFunction","css","compose","borders","flexbox","positions","palette","shadows","sizing","typography","styled","props"],"mappings":"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","file":"static/js/PageHeading.8b83b18b.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  eventListingLogoWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    '& img': {\r\n      position: 'relative',\r\n      top: pxToRem(-38),\r\n      [theme.breakpoints.up('lg')]: {\r\n        top: pxToRem(-40),\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        top: pxToRem(-50),\r\n      },\r\n    },\r\n  },\r\n  imageWrapper: {\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { get } from 'lodash';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Box from '../../../components/molecules/Box';\r\nimport Picture from '../../../components/atoms/Picture';\r\nimport { pageContentType } from '../../../utils/getContentType';\r\nimport { ATTRIBUTE_TYPE, EVENT_LISTING_TEMPLATE_ID, EVENT_TYPE } from '../../../../constants/index';\r\nimport useStyles from './style';\r\n\r\nconst PageHeading = ({ sitecoreContext }) => {\r\n  const classes = useStyles();\r\n  const contentType = pageContentType({ sitecoreContext }).toLowerCase();\r\n  const eventListingTemplateId = get(sitecoreContext, 'route.templateId', '');\r\n  const eventAdCalenderLogo = get(sitecoreContext, 'route.fields.eventAdCalenderLogo.value.src', '');\r\n  const eventAdCalenderLogoMobile = get(sitecoreContext, 'route.fields.eventAdCalenderLogoMobile.value.src', '');\r\n  let title =\r\n    get(sitecoreContext, 'route.fields.pageHeading.value', '') ? get(sitecoreContext, 'route.fields.pageHeading', '') : get(sitecoreContext, 'route.fields.name', '');\r\n  if (contentType === ATTRIBUTE_TYPE) {\r\n    title = { value: get(sitecoreContext, 'tag', '') };\r\n  }\r\n\r\n  return (\r\n    <Grid data-locator={COMPONENT_NAME}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} className={contentType === EVENT_TYPE && eventListingTemplateId === EVENT_LISTING_TEMPLATE_ID && classes.eventListingLogoWrapper}>\r\n          <Box pb={{ xs: 5 }}>\r\n            <Typography variant=\"h2\" component=\"h1\" gutterBottom={false}>\r\n              {title && <Text field={title} />}\r\n            </Typography>\r\n          </Box>\r\n          {eventListingTemplateId === EVENT_LISTING_TEMPLATE_ID && contentType === EVENT_TYPE &&\r\n            <>\r\n              <Hidden mdDown implementation=\"css\">\r\n                <Box pb={{ xs: 5 }} className={classes.imageWrapper}>\r\n                  <Picture\r\n                    media={{\r\n                      image: {\r\n                        value: {\r\n                          src: eventAdCalenderLogo,\r\n                        },\r\n                      },\r\n                      renditionNeeded: false,\r\n                      fallbackBackgroundNeeded: false,\r\n                    }}\r\n                    alternateAltText={title && title.value}\r\n                  />\r\n                </Box>\r\n              </Hidden>\r\n              <Hidden lgUp implementation=\"css\">\r\n                <Box pb={{ xs: 5 }} className={classes.imageWrapper}>\r\n                  <Picture\r\n                    media={{\r\n                      image: {\r\n                        value: {\r\n                          src: eventAdCalenderLogoMobile,\r\n                        },\r\n                      },\r\n                      renditionNeeded: false,\r\n                      fallbackBackgroundNeeded: false,\r\n                    }}\r\n                    alternateAltText={title && title.value}\r\n                  />\r\n                </Box>\r\n              </Hidden>\r\n            </>\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(PageHeading))\r\n);\r\n","export const COMPONENT_NAME = 'PageHeading';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import {\r\n  borders,\r\n  compose,\r\n  display,\r\n  flexbox,\r\n  palette,\r\n  positions,\r\n  shadows,\r\n  sizing,\r\n  spacing,\r\n  typography,\r\n  css,\r\n} from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\n\r\nexport const styleFunction = css(\r\n  compose(\r\n    borders,\r\n    display,\r\n    flexbox,\r\n    positions,\r\n    palette,\r\n    shadows,\r\n    sizing,\r\n    spacing,\r\n    typography\r\n  )\r\n);\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst Box = styled('div')(styleFunction, { name: 'MuiBox' });\r\n\r\nexport default Box;\r\n","// As we have some component variations based on the pageContentType, This is shared place to access the same\r\nimport get from 'lodash/get';\r\nexport const pageContentType = props => {\r\n  const contentType = get(\r\n    props,\r\n    'sitecoreContext.route.fields.contentType.fields.taxonomyKey.value',\r\n    ''\r\n  );\r\n  return contentType;\r\n};\r\n"],"sourceRoot":""}