{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","global/containers/common/Breadcrumb/style.js","global/containers/common/Breadcrumb/index.js","global/containers/common/Breadcrumb/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","makeStyles","marginTop","marginBottom","breakpoints","up","breadcrumbs","down","breadcrumbLink","textDecoration","mixins","AbuDhabiRed","lastBreadcrumb","text","tertiary","withErrorBoundary","withSitecoreContext","withNamespaces","BreadcrumbList","fields","customContentList","useStyles","BreadcrumbListLength","Grid","data-locator","container","item","xs","aria-label","variant","displayName","link","id","customHref","isCustom","hoverColor","data-id","get","analyticsData","data-link","createDynamicLabels","getPageName","getComponentName","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","boxSizing","zeroMinWidth","minWidth","flexDirection","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","Object","assign","generateGrid","arguments","undefined","_props$alignContent","_props$alignItems","classNameProp","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth"],"mappings":"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","file":"static/js/Breadcrumb.f05ede61.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  breadcrumbs: {\r\n    [theme.breakpoints.down('md')]: {\r\n      '& li:nth-last-child(2)': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    '& .MuiBreadcrumbs-separator': {\r\n      display: 'initial',\r\n    },\r\n  },\r\n  breadcrumbLink: {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      color: theme.mixins.AbuDhabiRed(),\r\n    },\r\n  },\r\n  lastBreadcrumb: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('lg')]: {\r\n      display: 'inline',\r\n      color: theme.palette.text.tertiary,\r\n    },\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { analyticsData } from '../../../../constants/Analytics/analytics-data';\r\nimport { Breadcrumbs as MuiBreadcrumb } from '@material-ui/core';\r\nimport { get } from 'lodash';\r\nimport {\r\n  COMPONENT_GRID_CONTAINER,\r\n  COMPONENT_GRID_BLOCK,\r\n  COMPONENT_NAME,\r\n} from './locators';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport CustomLink from '../../../components/atoms/Link';\r\nimport {\r\n  getComponentName,\r\n  getPageName,\r\n} from '../../../utils/getPageComponentInfo';\r\nimport { createDynamicLabels } from '../../../../../src/utils/analytics';\r\nimport useStyles from './style';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\n\r\nconst Breadcrumbs = props => {\r\n  const { customContentList: BreadcrumbList } = props.fields;\r\n  const SEPERATOR = '/';\r\n  const classes = useStyles();\r\n\r\n  const BreadcrumbListLength = BreadcrumbList ? BreadcrumbList.length : 0;\r\n\r\n  return (\r\n    <div className=\"breadcrumbWrapper\">\r\n      <Grid className={classes.root} data-locator={COMPONENT_GRID_BLOCK}>\r\n        <Grid container spacing={0} data-locator={COMPONENT_GRID_CONTAINER}>\r\n          <Grid item xs={12}>\r\n            <MuiBreadcrumb\r\n              aria-label=\"breadcrumb\"\r\n              color=\"primary\"\r\n              separator={\r\n                <Typography variant=\"body2\" component=\"span\">\r\n                  {SEPERATOR}\r\n                </Typography>\r\n              }\r\n              className={classes.breadcrumbs}\r\n              data-locator={COMPONENT_NAME}\r\n            >\r\n              {BreadcrumbList &&\r\n                BreadcrumbList.length > 0 &&\r\n                BreadcrumbList.map((item, index) => {\r\n                  const { displayName, link } = item;\r\n                  if (index < BreadcrumbListLength - 1) {\r\n                    return (\r\n                      <CustomLink\r\n                        key={index}\r\n                        id={index}\r\n                        customHref={link}\r\n                        isCustom={true}\r\n                        hoverColor={'#C2002F'}\r\n                        aria-label={displayName}\r\n                        data-id={get(\r\n                          analyticsData,\r\n                          'dataIds.pageBodyNavLinkClick',\r\n                          ''\r\n                        )}\r\n                        data-link={createDynamicLabels([\r\n                          getPageName(props),\r\n                          getComponentName(props),\r\n                          `${get(\r\n                            analyticsData,\r\n                            'dataLinksText.breadCrumbLink',\r\n                            ''\r\n                          )}-${displayName}`,\r\n                        ])}\r\n                      >\r\n                        {displayName && (\r\n                          <Typography variant=\"body2\" component=\"span\">\r\n                            {displayName}\r\n                          </Typography>\r\n                        )}\r\n                      </CustomLink>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      displayName && (\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          component=\"span\"\r\n                          className={classes.lastBreadcrumb}\r\n                        >\r\n                          {displayName}\r\n                        </Typography>\r\n                      )\r\n                    );\r\n                  }\r\n                })}\r\n            </MuiBreadcrumb>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(Breadcrumbs))\r\n);\r\n","export const COMPONENT_NAME = 'Breadcrumb';\r\nexport const COMPONENT_GRID_CONTAINER = 'Breadcrumb-GridContainer';\r\nexport const COMPONENT_GRID_BLOCK = 'Breadcrumb-GridBlock';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}