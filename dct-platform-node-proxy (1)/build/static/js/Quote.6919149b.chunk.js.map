{"version":3,"sources":["styles/svgIcons/QuoteIcon.js","global/containers/common/Quote/style.js","global/containers/common/Quote/index.js","global/containers/common/Quote/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["QuoteIcon","width","height","viewBox","version","xmlns","xlink","id","stroke","strokeWidth","fill","fillRule","opacity","transform","d","useStyles","makeStyles","theme","root","shape","componentSpacing","title","paddingBottom","pxToRem","breakpoints","up","description","color","palette","text","darkGrey","author","quoteIcon","display","marginBottom","Quote","fields","classes","isEmpty","authorName","authorDesignation","className","Grid","data-locator","container","spacing","item","xs","lg","Typography","variant","component","field","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","marginLeft","marginRight","boxSizing","flexWrap","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","Object","assign","generateGrid","name","arguments","length","undefined","concat","React","props","ref","_props$alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","other","_objectWithoutProperties","clsx","_extends"],"mappings":"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","file":"static/js/Quote.6919149b.chunk.js","sourcesContent":["/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\nconst QuoteIcon = (\r\n  <svg width=\"65px\" height=\"48px\" viewBox=\"0 0 65 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\r\n    <title>â€œ@1.5x</title>\r\n    <g id=\"Long_Page_Desktop\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" opacity=\"0.0653831845\">\r\n      <g id=\"01_DCT_Long_Page_desk\" transform=\"translate(-92.000000, -16936.000000)\" fill=\"#000000\" fillRule=\"nonzero\">\r\n        <g id=\"10.-Quote-Component\" transform=\"translate(0.000000, 16656.000000)\">\r\n          <g transform=\"translate(0.000000, 64.000000)\">\r\n            <g id=\"Qoute\" transform=\"translate(92.000000, 216.000000)\">\r\n              <path d=\"M14.9568345,48 C18.323741,48 21.1726619,46.9800797 23.5035971,44.940239 C25.8345324,42.9003984 27,40.1593625 27,36.7171315 C27,33.4023904 25.8021583,30.6613546 23.4064748,28.4940239 C21.0107914,26.3266932 18.323741,25.2430279 15.3453237,25.2430279 C14.3093525,25.2430279 13.5323741,25.3067729 13.0143885,25.4342629 C13.0143885,21.0996016 14.3417266,17.5298805 16.9964029,14.7250996 C19.6510791,11.9203187 22.7913669,9.62549801 26.4172662,7.84063745 L26.4172662,7.84063745 L20.5899281,0 C18.7769784,0.637450199 16.705036,1.68924303 14.3741007,3.15537849 C12.0431655,4.62151394 9.80935252,6.62948207 7.67266187,9.17928287 C5.53597122,11.7290837 3.72302158,14.8844622 2.23381295,18.6454183 C0.744604317,22.4063745 0,26.8366534 0,31.936255 C0,37.2908367 1.35971223,41.3067729 4.07913669,43.9840637 C6.79856115,46.6613546 10.4244604,48 14.9568345,48 Z M52.9568345,48 C56.323741,48 59.1726619,46.9800797 61.5035971,44.940239 C63.8345324,42.9003984 65,40.1593625 65,36.7171315 C65,33.4023904 63.8021583,30.6613546 61.4064748,28.4940239 C59.0107914,26.3266932 56.323741,25.2430279 53.3453237,25.2430279 C52.3093525,25.2430279 51.5323741,25.3067729 51.0143885,25.4342629 C51.0143885,21.0996016 52.3417266,17.5298805 54.9964029,14.7250996 C57.6510791,11.9203187 60.7913669,9.62549801 64.4172662,7.84063745 L64.4172662,7.84063745 L58.5899281,0 C56.7769784,0.637450199 54.705036,1.68924303 52.3741007,3.15537849 C50.0431655,4.62151394 47.8093525,6.62948207 45.6726619,9.17928287 C43.5359712,11.7290837 41.7230216,14.8844622 40.2338129,18.6454183 C38.7446043,22.4063745 38,26.8366534 38,31.936255 C38,37.2908367 39.3597122,41.3067729 42.0791367,43.9840637 C44.7985612,46.6613546 48.4244604,48 52.9568345,48 Z\" id=\"â€œ\"></path>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default QuoteIcon;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n  },\r\n  title: {\r\n    paddingBottom: pxToRem(40),\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingBottom: pxToRem(80),\r\n    },\r\n  },\r\n  description: {\r\n    color: theme.palette.text.darkGrey,\r\n    paddingBottom: pxToRem(44),\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingBottom: pxToRem(73),\r\n    },\r\n  },\r\n  author: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingBottom: pxToRem(8),\r\n    },\r\n  },\r\n  quoteIcon: {\r\n    display: 'block',\r\n    marginBottom: pxToRem(15),\r\n\r\n    '& svg': {\r\n      height: pxToRem(40),\r\n      width: pxToRem(54),\r\n      [theme.breakpoints.up('lg')]: {\r\n        height: pxToRem(48),\r\n        width: pxToRem(65),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport useStyles from './style';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport QuoteIcon from '../../../../styles/svgIcons/QuoteIcon';\r\n\r\nconst Quote = ({ fields }) => {\r\n  const classes = useStyles();\r\n  if (isEmpty(fields)) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    authorName,\r\n    authorDesignation,\r\n  } = fields;\r\n\r\n  return (\r\n    <div className=\"quoteComponentWrapper\">\r\n      <Grid className={classes.root} data-locator={COMPONENT_NAME}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n          <Grid item xs={12} lg={10}>\r\n            {\r\n              title &&\r\n              <Typography variant=\"h4\" component=\"h2\" className={classes.title}>\r\n                <Text field={title} />\r\n              </Typography>\r\n            }\r\n            {\r\n              description &&\r\n              <Typography variant=\"h5\" component=\"p\" className={classes.description}>\r\n                <i className={classes.quoteIcon}>{QuoteIcon}</i>\r\n                <Text field={description} />\r\n              </Typography>\r\n            }\r\n            {\r\n              authorName &&\r\n              <Typography variant=\"body1Bold\" component=\"p\" className={classes.author}>\r\n                <Text field={authorName} />\r\n              </Typography>\r\n            }\r\n            {\r\n              authorDesignation &&\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                <Text field={authorDesignation} />\r\n              </Typography>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","export const COMPONENT_NAME = 'QuoteComponent';","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}