{"version":3,"sources":["global/containers/common/ItineraryMap/style.js","global/containers/common/ItineraryMap/index.js","global/containers/common/ItineraryMap/locators.js","global/components/molecules/Container/index.js","global/components/molecules/Container/Container.style.js","../node_modules/@material-ui/core/esm/utils/debounce.js","global/components/molecules/Tabs/Tab/style.js","global/components/molecules/Tabs/Tab/index.js","global/components/molecules/Tabs/TabPanel/index.js","global/components/molecules/Tabs/style.js","global/components/molecules/Tabs/index.js"],"names":["useStyles","makeStyles","theme","root","shape","componentSpacing","tabsContainer","marginTop","pxToRem","breakpoints","up","title","marginBottom","spacing","withSitecoreContext","withNamespaces","props","sitecoreContext","t","classes","componentName","getComponentName","pageName","getPageName","language","get","LANGUAGE_CODE","DEFAULT","helperKeys","getHelperKeysFromDictionary","dictionaryKeys","undefined","highlightsTabTitle","value","iteneraries","apiKey","getAPIKey","collageTabs","fields","getMarkers","index","getAllMarkers","getMarkersForDay","stops","map","stop","i","isLatLngAvailable","getMarkerFormated","allStops","forEach","itr","j","push","idText","id","name","lat","parseFloat","lng","address","createTabs","collageTab","tabTitle","data","MapViewer","markers","isRouteDirection","isPolyline","showLegend","isItinerary","labels","isRedMarker","itineraryMapUrl","label","evalConditionForInsideChina","className","data-locator","Container","NoSsr","length","Grid","Typography","variant","component","field","Tabs","tabs","React","forwardRef","ref","Component","fixed","maxWidth","useContainer","overflowHidden","other","container","clsx","capitalize","String","children","withStyles","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","overflow","debounce","func","timeout","wait","arguments","debounced","_len","args","Array","_key","that","this","later","apply","clearTimeout","setTimeout","clear","mixins","minWidth","padding","color","palette","text","tertiary","minHeight","position","Black","TabMUI","isExperienceEditorActive","typography","Tab","defaultProps","disableRipple","TabPanel","role","hidden","aria-labelledby","backgroundColor","background","transparent","alignItems","AbuDhabiRed","height","transitionDuration","borderBottom","borders","divider","transition","display","borderColor","CustomTabs","tabsApperanceAnim","useTheme","useState","setValue","textColor","tabIcon","onTabChange","animateSettings","willAnimate","delay","customTabsElem","useRef","tabsWrapperRef","useImperativeHandle","animPlay","play","animReverse","reverse","useEffect","gsap","registerPlugin","ScrollTrigger","haveAnimatedOnce","current","fromTo","opacity","y","ease","paused","pause","timeline","scrollTrigger","trigger","start","end","window","innerHeight","scrub","once","onUpdate","self","progress","tabIdArr","tab","toLowerCase","replace","ConditionalWrapper","condition","wrapper","onChange","event","newValue","scrollButtons","key","aria-controls","icon","dir","direction","displayName"],"mappings":"gMAqBeA,EAlBGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,eACAD,EAAME,MAAMC,kBAEjBC,cAAc,aACZC,UAAWC,YAAQ,KAClBN,EAAMO,YAAYC,GAAG,MAAQ,CAC5BH,UAAWC,YAAQ,MAGvBG,MAAM,aACJC,aAAcV,EAAMW,QAAQ,IAC3BX,EAAMO,YAAYC,GAAG,MAAQ,CAC5BE,aAAcV,EAAMW,QAAQ,S,6GCkInBC,0CAAsBC,eA/HhB,SAACC,GAAW,IACvBC,EAAuBD,EAAvBC,gBAAiBC,EAAMF,EAANE,EACnBC,EAAUnB,IACVoB,EAAgBC,YAAiBL,GACjCM,EAAWC,YAAYP,GACvBQ,EAAWC,IAAIR,EAAiB,WAAYS,IAAcC,SAG1DC,EAAaC,YAA4BX,EAAGY,KAE5CnB,EAAQc,IAAIR,EAAiB,6BAAyBc,GACtDC,EAAqBP,IAAIR,EAAiB,0BAA2B,CACzEgB,MAAO,eAGHC,EAAcT,IAAIR,EAAiB,8BAA+B,IAClEkB,EAASC,YAAUZ,EAAUP,GAE7BoB,EAAW,CACf,CAAEC,OAAQ,CAAE3B,MAAO,CAAEsB,MAAOD,EAAmBC,UADhC,mBAEZC,IAGCK,EAAa,SAAAC,GACjB,OAAiB,IAAVA,EAAcC,IAAkBC,EAAiBF,IAGpDE,EAAmB,SAAAF,GACvB,OAAOH,EAAYG,GAAOF,OAAOK,MAAMC,KAAI,SAACC,EAAMC,GAChD,OAAIC,EAAkBF,EAAKP,QAClBU,EAAkBH,EAAKP,OAAN,UAAiBQ,EAAI,IACjC,SAIZC,EAAoB,SAAAT,GACxB,OACEb,IAAIa,EAAQ,mBAAmB,IAC/Bb,IAAIa,EAAQ,kBAAkB,IAI5BG,EAAgB,WACpB,IAAMQ,EAAW,GASjB,OARAf,EAAYgB,SAAQ,SAACC,EAAKL,GACxBK,EAAIb,OAAOK,MAAMO,SAAQ,SAACL,EAAMO,GAC1BL,EAAkBF,EAAKP,SACzBW,EAASI,KAAKL,EAAkBH,EAAKP,OAAN,UAAiBQ,EAAI,GAArB,OAAyBM,EAAI,WAK3DH,GAGHD,EAAoB,SAACV,EAAQgB,GACjC,MAAO,CACLC,GAAID,EACJE,KAAM/B,IAAIa,EAAQ,oBAAqB,IACvCmB,IAAKC,WAAWjC,IAAIa,EAAQ,iBAAkB,IAC9CqB,IAAKD,WAAWjC,IAAIa,EAAQ,kBAAmB,IAC/CsB,QAASnC,IAAIa,EAAQ,iBAAkB,MAyBrCuB,EAAaxB,EAAYO,KAAI,SAACkB,EAAYhB,GAC9C,IAtBwBN,EAsBlBuB,EAAWtC,IAAIqC,EAAY,qBAAsB,IACvD,MAAO,CACLE,MAxBsBxB,EAwBEM,EAtBxB,kBAACmB,EAAA,EAAD,cACM,CACFzC,WACA0C,QAAS3B,EAAWC,GACpB2B,iBAA4B,IAAV3B,EAClB4B,YAAY,EACZC,WAAsB,IAAV7B,EACZ8B,aAAa,EACbC,OAAQ3C,EACR4C,YAAuB,IAAVhC,EACbL,SACAsC,gBAAiBhD,IAAIR,EAAiB,4CAX1C,CAaEG,cAAeA,EACfE,SAAUA,MASZoD,MAAOX,MAIX,OAAIY,YAA4BnD,GACvB,KAeP,yBAAKoD,UAAWzD,EAAQhB,KAAM0E,eCjIJ,gBDkIxB,kBAACC,EAAA,EAAD,CAAWD,eClIa,gBDmItB,kBAACE,EAAA,EAAD,KACG7C,EAAY8C,OAAS,GAAK3C,EAAY2C,OAAS,GAAK7C,GAAU,kBAAC8C,EAAA,EAAD,KAC5DtE,GACC,kBAACuE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKR,UAAWzD,EAAQR,OACzD,kBAAC,OAAD,CAAM0E,MAAO1E,KAGjB,kBAAC2E,EAAA,EAAD,CAAMC,KAAM1B,EAAYe,UAAWzD,EAAQb,yB,8GEnIjDwE,EAAYU,IAAMC,YAAW,SAAmBzE,EAAO0E,GAAM,IAAD,EAE9DvE,EAQEH,EARFG,QAF8D,EAU5DH,EAPF4D,iBAH8D,MAGlD,GAHkD,IAU5D5D,EANFoE,UAAWO,OAJmD,MAIvC,MAJuC,IAU5D3E,EALF4E,aAL8D,WAU5D5E,EAJF6E,gBAN8D,MAMnD,KANmD,IAU5D7E,EAHF8E,oBAP8D,WAU5D9E,EAFF+E,sBAR8D,SAS3DC,EAT2D,YAU5DhF,EAV4D,wFAY1DiF,EACJ,kBAACN,EAAD,eACEf,UAAWsB,YACT/E,EAAQhB,MADK,mBAGVgB,EAAQyE,MAAQA,GAHN,cAIVzE,EAAQ,WAAD,OAAYgF,IAAWC,OAAOP,OACvB,IAAbA,GALS,GAObjB,GAEFc,IAAKA,GACDM,IAIR,OAAKF,EAKH,6BACElB,UAAWsB,YAAK/E,EAAQhB,KAAT,eACZgB,EAAQ4E,eAAiBA,KAG3BE,GATIjF,EAAMqF,YA+CFC,iBCnFO,SAAApG,GAGpB,OAAO,yBAELC,KAAM,CACJoG,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAa,IACbC,aAAc,MAVD,IAEjB,IAYEhB,MAAOiB,OAAOC,KAAK5G,EAAMO,YAAYsG,QAAQC,QAAO,SAACC,EAAKC,GACxD,IAAMjF,EAAQ/B,EAAMO,YAAYsG,OAAOG,GAOvC,OALc,IAAVjF,IACFgF,EAAI/G,EAAMO,YAAYC,GAAGwG,IAAe,CACtCrB,SAAU5D,IAGPgF,IACN,IAEHE,WAAW,eACRjH,EAAMO,YAAYC,GAAG,MAAQ,CAC5BmF,SAAUuB,KAAKC,IAAInH,EAAMO,YAAYsG,OAAOO,GAAI,OAIpDC,WAAW,eACRrH,EAAMO,YAAYC,GAAG,MAAQ,CAC5BmF,SAAU3F,EAAMO,YAAYsG,OAAOS,KAIvCC,WAAW,eACRvH,EAAMO,YAAYC,GAAG,MAAQ,CAC5BmF,SAAU3F,EAAMO,YAAYsG,OAAOW,KAIvCC,WAAW,eACRzH,EAAMO,YAAYC,GAAG,MAAQ,CAC5BmF,SAAU3F,EAAMO,YAAYsG,OAAOa,KAIvCC,WAAW,eACR3H,EAAMO,YAAYC,GAAG,MAAQ,CAE5BmF,SAAU,SAGdE,eAAgB,CACd+B,SAAU,cD0BkB,CAAEtE,KAAM,gBAA3B8C,CAA6CxB,I,iCEjF7C,SAASiD,EAASC,GAC/B,IACIC,EADAC,EAAOC,UAAUnD,OAAS,QAAsBjD,IAAjBoG,UAAU,GAAmBA,UAAU,GAAK,IAG/E,SAASC,IACP,IAAK,IAAIC,EAAOF,UAAUnD,OAAQsD,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQL,UAAUK,GAIzB,IAAIC,EAAOC,KAEPC,EAAQ,WACVX,EAAKY,MAAMH,EAAMH,IAGnBO,aAAaZ,GACbA,EAAUa,WAAWH,EAAOT,GAO9B,OAJAE,EAAUW,MAAQ,WAChBF,aAAaZ,IAGRG,EA1BT,mC,qLCyBepI,EAtBGC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJ,gBAAgB,2BACXD,EAAM8I,OAAOtC,YAAYlG,YAAQ,MADtC,OAEEyI,SAAU,OACVC,QAAS,EACTC,MAAOjJ,EAAMkJ,QAAQC,KAAKC,SAC1BC,UAAW/I,YAAQ,KALrB,cAMGN,EAAMO,YAAYC,GAAG,MANxB,2BAOOR,EAAM8I,OAAOtC,YAAYlG,YAAQ,MAPxC,IAQIgJ,SAAU,cARd,cAUE,0BAA2B,CACzBL,MAAOjJ,EAAM8I,OAAOS,UAXxB,cAaE,eAbF,eAcOvJ,EAAM8I,OAAOtC,YAAY,KAdhC,SCKEgD,EAAS,SAAC,GAAyB,IAAvBhF,EAAsB,EAAtBA,MAAUsB,EAAY,yBAGhC7E,GAFWwI,qCAED3J,KACV4J,EACJ,kBAAC1E,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,QACxC,kBAAC,OAAD,CAAMC,MAAO,CAAEpD,MAAOyC,MAI1B,OAAO,kBAACmF,EAAA,EAAD,eAAKjF,UAAWzD,EAAQhB,KAAMuE,MAAOkF,GAAgB5D,KAQ9D0D,EAAOI,aAAe,CACpBC,eAAe,GAGFL,QC7BTM,EAAW,SAAC,GAA0C,IAAxC3D,EAAuC,EAAvCA,SAAUpE,EAA6B,EAA7BA,MAAOO,EAAsB,EAAtBA,MAAUwD,EAAY,4CACzD,OACE,uCACEpB,UAAU,oBACVqF,KAAK,WACLC,OAAQjI,IAAUO,EAClBe,GAAE,8BAAyBf,GAC3B2H,kBAAA,yBAAmC3H,IAC/BwD,GAEH/D,IAAUO,GAAS6D,IAY1B2D,EAASF,aAAe,CACtB7B,QAAS,KAGI+B,QCUAhK,EApCGC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJiK,gBAAiBlK,EAAMkJ,QAAQiB,WAAWC,YAE1C,sBACE/J,UAAWC,YAAQ,IACnBI,aAAcJ,YAAQ,IACtB+I,UAAW/I,YAAQ,IACnB+J,WAAY,UAJd,cAMGrK,EAAMO,YAAYC,GAAG,MAAQ,CAC5BH,UAAWC,YAAQ,IACnBI,aAAcJ,YAAQ,MAR1B,cAWE,uBAAwB,CACtB6J,WAAYnK,EAAM8I,OAAOwB,cACzBC,OAAQjK,YAAQ,GAChBkK,mBAAoB,UAdxB,GAkBA,2BAA4B,CAC1BC,aAAczK,EAAM0K,QAAQC,QAC5BC,WAAY,wBACZC,QAAS,eACTxE,MAAO,cACP,UAAW,CACT,kBAAmB,CACjByE,YAAa,sB,iBCpBjBC,EAAaxF,sBAAW,SAC5BzE,EACA0E,GAEA,IAqBIwF,EArBE/J,EAAUnB,IACVE,EAAQiL,cAFX,EAGuB3F,IAAM4F,SAAS,GAHtC,mBAGInJ,EAHJ,KAGWoJ,EAHX,KAWD9F,EAQEvE,EARFuE,KACAX,EAOE5D,EAPF4D,UACA0G,EAMEtK,EANFsK,UACAC,EAKEvK,EALFuK,QACApG,EAIEnE,EAJFmE,QACAqG,EAGExK,EAHFwK,YAhBC,EAmBCxK,EAFFyK,uBAjBC,MAiBiB,GAjBjB,EAkBEzF,EAlBF,YAmBChF,EAnBD,wFAqBuCyK,EAAlCC,mBArBL,WAqBuCD,EAAdE,aArBzB,MAqBiC,EArBjC,EAuBGC,EAAiBC,iBAAO,MAC5BC,EAAiBD,iBAAO,MAiD1B,GAhDAE,8BAAoBrG,GAAK,iBAAO,CAC9BsG,SAD8B,WAE5Bd,GAAqBA,EAAkBe,QAEzCC,YAJ8B,WAK5BhB,GAAqBA,EAAkBiB,eAG3CC,qBAAU,WACRC,IAAKC,eAAeC,KACpBzD,YAAW,WACT,IAAI0D,GAAmB,EACnBZ,EAAea,SAAWf,KAC5BR,EAAoBmB,IAAKK,OACvBd,EAAea,QACf,CACEE,QAAS,EACTC,EAAG,OACHC,KAAM,aACNC,QAAQ,GAEV,CACEF,EAAG,MACHD,QAAS,GAVO,YAYbhB,KAEWoB,QAClBV,IAAKW,SAAS,CACZC,cAAe,CACbC,QAASpB,EAAeW,QACxBU,MAAO,aACPC,IAAI,KAAD,OAA4B,GAArBC,OAAOC,YAAd,aACHC,OAAO,EACPC,MAAM,EACNC,SAAU,SAAAC,GACJA,EAAKC,SAAW,KAClBzC,GAAqBA,EAAkBe,OACvCO,GAAmB,GACVA,GACTtB,GAAqBA,EAAkBiB,iBAMhD,OACF,KACE5G,EACH,OAAO,KAET,IAAMqI,EACJrI,GACAA,EAAK3C,KAAI,SAAAiL,GAAG,OACVpM,IAAIoM,EAAK,QAAS,IACfC,cACAC,QAAQ,MAAO,OAEtB,OACE,yBAAKnJ,UAAWsB,YAAK/E,EAAQhB,KAAMyE,GAAYc,IAAKoG,GAClD,kBAACkC,EAAD,CACEC,UAAWvC,EACXwC,QAAS,SAAA7H,GAAQ,OACf,yBAAKX,IAAKkG,GAAiBvF,KAG7B,kBAACf,EAAA,EAAD,eACErD,MAAOA,EACPkM,SAxFa,SAACC,EAAOC,GAC3BhD,EAASgD,GACT7C,EAAY6C,IAuFN/C,UAAWA,EACXnG,QAASA,EACTmJ,cAAc,QACVtI,GAEHT,GACCA,EAAK3C,KAAI,SAACiL,EAAKrL,GAAN,OACP,kBAAC,EAAD,CACE+L,IAAK/L,EACLkC,MAAOmJ,EAAInJ,MACXnB,GAAE,cAASqK,EAASpL,GAAlB,YAA4BA,GAC9BgM,gBAAA,mBAA2BZ,EAASpL,GAApC,YAA8CA,GAC9CiM,KAAMlD,SAKfhG,GACCA,EAAK3C,KAAI,SAACiL,EAAKrL,GAAN,OACP,kBAAC,EAAD,CACE+L,IAAK/L,EACLP,MAAOA,EACPO,MAAOA,EACPkM,IAAKxO,EAAMyO,UACXpL,GAAE,mBAAcqK,EAASpL,GAAvB,YAAiCA,GACnC2H,kBAAA,cAAwByD,EAASpL,GAAjC,YAA2CA,IAE1CqL,EAAI7J,aAOjBiH,EAAW2D,YAAc,aAQzB3D,EAAWnB,aAAe,CACxBwB,UAAW,UACX1G,UAAW,GACXO,QAAS,aACTqG,YAAa,cAGf,IAAMwC,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAAS7H,EAAvB,EAAuBA,SAAvB,OACzB4H,EAAYC,EAAQ7H,GAAYA,GAEnB4E","file":"static/js/ItineraryMap.7af881bb.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n  },\r\n  tabsContainer: {\r\n    marginTop: pxToRem(24),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: pxToRem(30),\r\n    },\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(4),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginBottom: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport useStyles from './style';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Tabs from '../../../components/molecules/Tabs';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport Container from '../../../components/molecules/Container';\r\nimport MapViewer from '../../../components/molecules/MapViewer';\r\nimport { getHelperKeysFromDictionary } from '../../../../utils/utility';\r\nimport { dictionaryKeys } from '../BranchesMap/BranchesMap';\r\nimport { evalConditionForInsideChina } from '../../../utils/cookie';\r\nimport { LANGUAGE_CODE } from '../../../../constants';\r\nimport { getComponentName, getPageName } from '../../../utils/getPageComponentInfo';\r\nimport { NoSsr } from '@material-ui/core';\r\nimport { getAPIKey } from '../../../utils/getApiKey';\r\n\r\nconst ItineraryMap = (props) => {\r\n  const { sitecoreContext, t } = props;\r\n  const classes = useStyles();\r\n  const componentName = getComponentName(props);\r\n  const pageName = getPageName(props);\r\n  const language = get(sitecoreContext, 'language', LANGUAGE_CODE.DEFAULT);\r\n  //const [isMapLoaded, setIsMapLoaded] = useState(true);\r\n\r\n  const helperKeys = getHelperKeysFromDictionary(t, dictionaryKeys);\r\n\r\n  const title = get(sitecoreContext, 'route.fields.mapTitle', undefined);\r\n  const highlightsTabTitle = get(sitecoreContext, 'route.fields.mapTabName', {\r\n    value: 'HIGHLIGHTS',\r\n  });\r\n\r\n  const iteneraries = get(sitecoreContext, 'route.fields.dayItineraries', []);\r\n  const apiKey = getAPIKey(language, sitecoreContext);\r\n\r\n  const collageTabs = [\r\n    { fields: { title: { value: highlightsTabTitle.value } } },\r\n    ...iteneraries,\r\n  ];\r\n\r\n  const getMarkers = index => {\r\n    return index === 0 ? getAllMarkers() : getMarkersForDay(index);\r\n  };\r\n\r\n  const getMarkersForDay = index => {\r\n    return collageTabs[index].fields.stops.map((stop, i) => {\r\n      if (isLatLngAvailable(stop.fields)) {\r\n        return getMarkerFormated(stop.fields, `${i + 1}`);\r\n      } else return null;\r\n    });\r\n  };\r\n\r\n  const isLatLngAvailable = fields => {\r\n    return (\r\n      get(fields, 'longitude.value', false) &&\r\n      get(fields, 'latitude.value', false)\r\n    );\r\n  };\r\n\r\n  const getAllMarkers = () => {\r\n    const allStops = [];\r\n    iteneraries.forEach((itr, i) => {\r\n      itr.fields.stops.forEach((stop, j) => {\r\n        if (isLatLngAvailable(stop.fields)) {\r\n          allStops.push(getMarkerFormated(stop.fields, `${i + 1}${j + 1}`));\r\n        }\r\n      });\r\n    });\r\n\r\n    return allStops;\r\n  };\r\n\r\n  const getMarkerFormated = (fields, idText) => {\r\n    return {\r\n      id: idText,\r\n      name: get(fields, 'stopHeading.value', ''),\r\n      lat: parseFloat(get(fields, 'latitude.value', 0)),\r\n      lng: parseFloat(get(fields, 'longitude.value', 0)),\r\n      address: get(fields, 'location.value', ''),\r\n    };\r\n  };\r\n\r\n  const tabData = (tabText, index) => {\r\n    return (\r\n      <MapViewer\r\n        {...{\r\n          language,\r\n          markers: getMarkers(index),\r\n          isRouteDirection: index === 0 ? false : true,\r\n          isPolyline: false,\r\n          showLegend: index === 0 ? false : true,\r\n          isItinerary: true,\r\n          labels: helperKeys,\r\n          isRedMarker: index === 0 ? true : false,\r\n          apiKey,\r\n          itineraryMapUrl: get(sitecoreContext, 'route.fields.itineraryMapUrl.value.href'),\r\n        }}\r\n        componentName={componentName}\r\n        pageName={pageName}\r\n      />\r\n    );\r\n  };\r\n\r\n  const createTabs = collageTabs.map((collageTab, i) => {\r\n    const tabTitle = get(collageTab, 'fields.title.value', '');\r\n    return {\r\n      data: tabData(tabTitle, i),\r\n      label: tabTitle,\r\n    };\r\n  });\r\n\r\n  if (evalConditionForInsideChina(language)) {\r\n    return null;\r\n  }\r\n\r\n  // if (isMapLoaded && isLanguageEqual(language, LANGUAGE_CODE.CHINESE)) {\r\n  //   fetch(modifyApi(BAIDU_MAP_API_URL, { apiKey }))\r\n  //     .catch(err => {\r\n  //       console.log(\"Map is not loading due to: \", err);\r\n  //       setIsMapLoaded(false);\r\n  //     });\r\n  // }\r\n  // if (!isMapLoaded) {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.root} data-locator={COMPONENT_NAME}>\r\n      <Container data-locator={COMPONENT_NAME}>\r\n        <NoSsr>\r\n          {iteneraries.length > 0 && collageTabs.length > 0 && apiKey && <Grid>\r\n            {title && (\r\n              <Typography variant=\"h4\" component=\"h2\" className={classes.title}>\r\n                <Text field={title} />\r\n              </Typography>\r\n            )}\r\n            <Tabs tabs={createTabs} className={classes.tabsContainer} />\r\n          </Grid>}\r\n        </NoSsr>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withSitecoreContext()(withNamespaces()(ItineraryMap));\r\n","export const COMPONENT_NAME = 'ItineraryMap';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport capitalize from '@material-ui/core/utils/capitalize';\r\nimport { styles } from './Container.style';\r\n\r\nconst Container = React.forwardRef(function Container(props, ref) {\r\n  const {\r\n    classes,\r\n    className = '',\r\n    component: Component = 'div',\r\n    fixed = false,\r\n    maxWidth = 'xl',\r\n    useContainer = true,\r\n    overflowHidden = false,\r\n    ...other\r\n  } = props;\r\n\r\n  const container = (\r\n    <Component\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.fixed]: fixed,\r\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]:\r\n            maxWidth !== false,\r\n        },\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...other}\r\n    />\r\n  );\r\n\r\n  if (!useContainer) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.overflowHidden]: overflowHidden,\r\n      })}\r\n    >\r\n      {container}\r\n    </section>\r\n  );\r\n});\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Set the max-width to match the min-width of the current breakpoint.\r\n   * This is useful if you'd prefer to design for a fixed set of sizes\r\n   * instead of trying to accommodate a fully fluid viewport.\r\n   * It's fluid by default.\r\n   */\r\n  fixed: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the container.\r\n   * The container width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\r\n\r\n  useContainer: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\r\n","export const styles = theme => {\r\n  const paddings = {};\r\n\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      width: '100%',\r\n      marginLeft: 'auto',\r\n      boxSizing: 'border-box',\r\n      marginRight: 'auto',\r\n      paddingLeft: '0',\r\n      paddingRight: '0',\r\n    },\r\n    ...paddings,\r\n    /* Styles applied to the root element if `fixed={true}`. */\r\n    fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\r\n      const value = theme.breakpoints.values[breakpoint];\r\n\r\n      if (value !== 0) {\r\n        acc[theme.breakpoints.up(breakpoint)] = {\r\n          maxWidth: value,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {}),\r\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\r\n    maxWidthXs: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\r\n    maxWidthSm: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: theme.breakpoints.values.sm,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\r\n    maxWidthMd: {\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: theme.breakpoints.values.md,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\r\n    maxWidthLg: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\r\n    maxWidthXl: {\r\n      [theme.breakpoints.up('xl')]: {\r\n        // maxWidth: theme.breakpoints.values.xl,\r\n        maxWidth: '100%',\r\n      },\r\n    },\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n  };\r\n};\r\n","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '&.MuiTab-root': {\r\n      ...theme.mixins.marginRight(pxToRem(20)),\r\n      minWidth: 'auto',\r\n      padding: 0,\r\n      color: theme.palette.text.tertiary,\r\n      minHeight: pxToRem(30),\r\n      [theme.breakpoints.up('lg')]: {\r\n        ...theme.mixins.marginRight(pxToRem(40)),\r\n        position: 'relative',\r\n      },\r\n      '&.Mui-selected, &:hover': {\r\n        color: theme.mixins.Black(),\r\n      },\r\n      '&:last-child': {\r\n        ...theme.mixins.marginRight(0),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '../../../atoms/Typography';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport useStyles from './style';\r\n\r\nconst TabMUI = ({ label, ...other }) => {\r\n  const isEditor = isExperienceEditorActive();\r\n\r\n  const classes = useStyles();\r\n  const typography = (\r\n    <Typography variant=\"body2Bold\" component=\"span\">\r\n      <Text field={{ value: label }} />\r\n    </Typography>\r\n  );\r\n\r\n  return <Tab className={classes.root} label={typography} {...other} />;\r\n};\r\n\r\nTabMUI.propTypes = {\r\n  label: PropTypes.node.isRequired,\r\n  disableRipple: PropTypes.bool,\r\n};\r\n\r\nTabMUI.defaultProps = {\r\n  disableRipple: true,\r\n};\r\n\r\nexport default TabMUI;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <div\r\n      className=\"tabPanelContainer\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  timeout: PropTypes.number,\r\n};\r\n\r\nTabPanel.defaultProps = {\r\n  timeout: 800,\r\n};\r\n\r\nexport default TabPanel;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.transparent,\r\n\r\n    '& .MuiTabs-root': {\r\n      marginTop: pxToRem(24),\r\n      marginBottom: pxToRem(24),\r\n      minHeight: pxToRem(30),\r\n      alignItems: 'center',\r\n\r\n      [theme.breakpoints.up('lg')]: {\r\n        marginTop: pxToRem(48),\r\n        marginBottom: pxToRem(32),\r\n      },\r\n\r\n      '& .MuiTabs-indicator': {\r\n        background: theme.mixins.AbuDhabiRed(),\r\n        height: pxToRem(4),\r\n        transitionDuration: '500ms',\r\n      },\r\n    },\r\n\r\n    '& .MuiTabs-flexContainer': {\r\n      borderBottom: theme.borders.divider,\r\n      transition: 'border-color .5s ease',\r\n      display: 'inline-block',\r\n      width: 'max-content',\r\n      '&:hover': {\r\n        '& .Mui-selected': {\r\n          borderColor: 'transparent',\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { forwardRef, useRef, useImperativeHandle, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport get from 'lodash/get';\r\nimport TabMUI from './Tab';\r\nimport TabPanel from './TabPanel';\r\nimport useStyles from './style';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\nconst CustomTabs = forwardRef((\r\n  props,\r\n  ref,\r\n) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    onTabChange(newValue);\r\n  };\r\n\r\n  const {\r\n    tabs,\r\n    className,\r\n    textColor,\r\n    tabIcon,\r\n    variant,\r\n    onTabChange,\r\n    animateSettings = {},\r\n    ...other\r\n  } = props;\r\n\r\n  const { willAnimate = true, delay = 0 } = animateSettings;\r\n  let tabsApperanceAnim;\r\n  const customTabsElem = useRef(null),\r\n    tabsWrapperRef = useRef(null);\r\n  useImperativeHandle(ref, () => ({\r\n    animPlay() {\r\n      tabsApperanceAnim && tabsApperanceAnim.play();\r\n    },\r\n    animReverse() {\r\n      tabsApperanceAnim && tabsApperanceAnim.reverse();\r\n    },\r\n  }));\r\n  useEffect(() => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    setTimeout(() => {\r\n      let haveAnimatedOnce = false;\r\n      if (customTabsElem.current && willAnimate) {\r\n        tabsApperanceAnim = gsap.fromTo(\r\n          customTabsElem.current,\r\n          {\r\n            opacity: 0,\r\n            y: '16px',\r\n            ease: 'power1.out',\r\n            paused: true,\r\n          },\r\n          {\r\n            y: '0px',\r\n            opacity: 1,\r\n          },\r\n          `+=${delay}`\r\n        );\r\n        tabsApperanceAnim.pause();\r\n        gsap.timeline({\r\n          scrollTrigger: {\r\n            trigger: tabsWrapperRef.current,\r\n            start: 'top bottom',\r\n            end: `+=${window.innerHeight * 0.2}px bottom`,\r\n            scrub: true,\r\n            once: true,\r\n            onUpdate: self => {\r\n              if (self.progress > 0.15) {\r\n                tabsApperanceAnim && tabsApperanceAnim.play();\r\n                haveAnimatedOnce = true;\r\n              } else if (haveAnimatedOnce) {\r\n                tabsApperanceAnim && tabsApperanceAnim.reverse();\r\n              }\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }, 100);\r\n  }, []);\r\n  if (!tabs) {\r\n    return null;\r\n  }\r\n  const tabIdArr =\r\n    tabs &&\r\n    tabs.map(tab =>\r\n      get(tab, 'label', '')\r\n        .toLowerCase()\r\n        .replace(/\\s/g, '')\r\n    );\r\n  return (\r\n    <div className={clsx(classes.root, className)} ref={tabsWrapperRef}>\r\n      <ConditionalWrapper\r\n        condition={willAnimate}\r\n        wrapper={children => (\r\n          <div ref={customTabsElem}>{children}</div>\r\n        )}\r\n      >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          textColor={textColor}\r\n          variant={variant}\r\n          scrollButtons=\"auto\"\r\n          {...other}\r\n        >\r\n          {tabs &&\r\n            tabs.map((tab, index) => (\r\n              <TabMUI\r\n                key={index}\r\n                label={tab.label}\r\n                id={`tab-${tabIdArr[index]}-${index}`}\r\n                aria-controls={`tabpanel-${tabIdArr[index]}-${index}`}\r\n                icon={tabIcon}\r\n              />\r\n            ))}\r\n        </Tabs>\r\n      </ConditionalWrapper>\r\n      {tabs &&\r\n        tabs.map((tab, index) => (\r\n          <TabPanel\r\n            key={index}\r\n            value={value}\r\n            index={index}\r\n            dir={theme.direction}\r\n            id={`tabpanel-${tabIdArr[index]}-${index}`}\r\n            aria-labelledby={`tab-${tabIdArr[index]}-${index}`}\r\n          >\r\n            {tab.data}\r\n          </TabPanel>\r\n        ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nCustomTabs.displayName = 'CustomTabs';\r\n\r\nCustomTabs.propTypes = {\r\n  textColor: PropTypes.string,\r\n  className: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nCustomTabs.defaultProps = {\r\n  textColor: 'primary',\r\n  className: '',\r\n  variant: 'scrollable',\r\n  onTabChange: () => { },\r\n};\r\n\r\nconst ConditionalWrapper = ({ condition, wrapper, children }) =>\r\n  condition ? wrapper(children) : children;\r\n\r\nexport default CustomTabs;\r\n"],"sourceRoot":""}