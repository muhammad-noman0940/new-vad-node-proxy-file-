{"version":3,"sources":["global/containers/common/Notification/style.js","global/containers/common/Notification/index.js","global/containers/common/Notification/locators.js","global/components/molecules/Container/index.js","global/components/molecules/Container/Container.style.js","global/utils/cookie.js"],"names":["useStyles","makeStyles","theme","notificationWrapper","position","zIndex","root","width","breakpoints","up","display","down","color","mixins","Black","backgroundColor","palette","background","yellow10","padding","pxToRem","alignItems","primary","contrastText","message","fontFamily","typography","primaryBold","Notification","props","pageName","getPageName","expiryDate","startDate","get","endDate","componentName","getComponentName","React","useEffect","isActive","hideNotification","canUseDOM","cookie","writeSessionCookie","headerAppBar","document","querySelector","classList","add","fields","isEmpty","StartDate","currentTime","Date","getTimeFromTimezone","_startDate","_endDate","getTime","addAnalyticsInfo","obj","analyticsData","pageBodyInteraction","readMoreBtnClick","label","createDynamicLabels","pushAnaylyticsData","classes","styles","value","handleClose","isReadMoreClick","Boolean","read","fallbackUI","className","NoSsr","fallback","Container","data-locator","Alert","ariaLabel","t","CLOSE_ICON_TEXT","handleCloseAlert","heading","Typography","variant","component","gutterBottom","field","Button","buttonType","hasBorder","isStartIcon","size","link","onClick","mobileLink","text","withErrorBoundary","withSitecoreContext","withNamespaces","forwardRef","ref","Component","fixed","maxWidth","useContainer","overflowHidden","other","container","clsx","capitalize","String","children","withStyles","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","overflow","name","cname","cvalue","write","exdays","d","setTime","expires","toUTCString","indexOf","split","substr","delete","cookiesList","isInsideChina","sitecoreContext","countryCode","toLocaleLowerCase","language","LANGUAGE_CODE","DEFAULT","INSIDE_CHINA_COUNTRY_CODE","isLanguageEqual","CHINESE","isDomainCN","locationHostArr","window","location","hostname","domainCode","length","toLowerCase","evalConditionForInsideChina","evalConditionForSocialShare","evalConditionForIcpLicense","domainName","lastIndexOf","DOMAIN_SUFFIX","CHINA","selectedLanguage","checkLanguage"],"mappings":"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","file":"static/js/Notification.7a985447.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  notificationWrapper: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& .mobileNotification': {\r\n      [theme.breakpoints.up('lg')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    '& .desktopNotification': {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    '& .MuiAlert-root': {\r\n      color: theme.mixins.Black(),\r\n      backgroundColor: theme.palette.background.yellow10,\r\n      [theme.breakpoints.up('lg')]: {\r\n        padding: `${pxToRem(32)} ${pxToRem(92)} ${pxToRem(30)}`,\r\n      },\r\n\r\n      '& > .MuiAlert-icon': {\r\n        color: theme.mixins.Black(),\r\n        [theme.breakpoints.up('lg')]: {\r\n          padding: `${pxToRem(10)} 0`,\r\n        },\r\n      },\r\n      '& .MuiAlert-action': {\r\n        [theme.breakpoints.down('md')]: {\r\n          alignItems: 'baseline',\r\n        },\r\n        '& button:hover svg': {\r\n          color: theme.palette.primary.contrastText,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  message: {\r\n    [theme.breakpoints.down('md')]: {\r\n      fontFamily: theme.typography.fontFamily.primaryBold,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport get from 'lodash/get';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Container from '../../../components/molecules/Container';\r\nimport Alert from '../../../components/atoms/Alert';\r\nimport Button from '../../../components/atoms/Button';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport styles from './style';\r\nimport { canUseDOM } from '../../../utils/canUseDOM';\r\nimport { CLOSE_ICON_TEXT } from '../../../../constants';\r\nimport { cookie } from '../../../utils/cookie';\r\nimport CustomLink from '../../../components/atoms/Link';\r\nimport {\r\n  pushAnaylyticsData,\r\n  createDynamicLabels,\r\n} from '../../../../utils/analytics';\r\nimport { analyticsData } from '../../../../constants/Analytics/analytics-data';\r\nimport {\r\n  getComponentName,\r\n  getPageName,\r\n} from '../../../utils/getPageComponentInfo';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport { getTimeFromTimezone } from '../../../../utils/utility';\r\nimport moment from 'moment';\r\n\r\n// #TODO: Needs to check export.\r\nexport const Notification = props => {\r\n  const pageName = getPageName(props);\r\n  const expiryDate = {\r\n    startDate: get(props, 'fields.startDate.value', ''),\r\n    endDate: get(props, 'fields.expiryDate.value', ''),\r\n  };\r\n  const componentName = getComponentName(props);\r\n  // set notificationBar to 1 to set header's position\r\n  // 1 = 'absolute' else 'fixed'\r\n  React.useEffect(() => {\r\n    if (isActive && !hideNotification) {\r\n      if (canUseDOM) {\r\n        cookie.writeSessionCookie('notificationBar', 1);\r\n        let headerAppBar = document.querySelector('[role=\"banner\"] > .MuiContainer-root .MuiContainer-root');\r\n        headerAppBar && headerAppBar.classList.add('page-has-notification-bar');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const { fields } = props;\r\n  if (isEmpty(fields)) {\r\n    return '';\r\n  }\r\n\r\n  if (expiryDate.startDate && expiryDate.endDate && (expiryDate.StartDate !== '0001-01-01T00:00:00Z' || expiryDate.endDate !== '0001-01-01T00:00:00Z')) {\r\n    const currentTime = new Date();\r\n\r\n    // case when no end date is provided\r\n    // case when start date is after current days\r\n    if (expiryDate.startDate && expiryDate.endDate === '0001-01-01T00:00:00Z') {\r\n      expiryDate.endDate = getTimeFromTimezone(+4, 90); // for infinite tomorrow\r\n    }\r\n    // case when no start date is provided\r\n    if (expiryDate.endDate && expiryDate.startDate === '0001-01-01T00:00:00Z') {\r\n      expiryDate.startDate = getTimeFromTimezone(+4, -90); // for infinite past\r\n    }\r\n    let _startDate = new Date(expiryDate.startDate);\r\n    let _endDate = new Date(expiryDate.endDate);\r\n    if (!(currentTime.getTime() > _startDate.getTime() && currentTime.getTime() < _endDate.getTime())) {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  const addAnalyticsInfo = () => {\r\n    const obj = {\r\n      ...analyticsData.pageBodyInteraction.readMoreBtnClick,\r\n      ...{\r\n        label: createDynamicLabels([\r\n          pageName,\r\n          componentName,\r\n          `${get(props, 'fields.heading.value', '')} - ${get(\r\n            props,\r\n            'fields.link.value.text',\r\n            ''\r\n          )}`,\r\n        ]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n\r\n  const classes = styles();\r\n  const isActive = fields && fields.isActive && fields.isActive.value;\r\n  const handleClose = (isReadMoreClick = false) => {\r\n    canUseDOM && cookie.writeSessionCookie('notificationBar', 0);\r\n    canUseDOM && cookie.writeSessionCookie('crisesNotification', true);\r\n    if (isReadMoreClick) {\r\n      addAnalyticsInfo(isReadMoreClick);\r\n    }\r\n  };\r\n\r\n  /*\r\n  if hideNotification is true that means user already closed the notificaiton\r\n  message. Hence no need to show it again\r\n  */\r\n  const hideNotification =\r\n    canUseDOM && Boolean(cookie.read('crisesNotification'));\r\n\r\n  const fallbackUI = <div className=\"notificationWrapper\"></div>;\r\n  return (\r\n    <NoSsr fallback={fallbackUI}>\r\n      <div className={`${classes.notificationWrapper} notificationWrapper`}>\r\n        {isActive && !hideNotification && (\r\n          <Container className={classes.root} data-locator={COMPONENT_NAME}>\r\n            <Alert\r\n              ariaLabel={(props.t && props.t('close')) || CLOSE_ICON_TEXT}\r\n              handleCloseAlert={handleClose}\r\n              className=\"desktopNotification\"\r\n            >\r\n              {fields.heading && (\r\n                <Typography\r\n                  variant=\"body2Bold\"\r\n                  component={'span'}\r\n                  gutterBottom={false}\r\n                >\r\n                  <Text field={fields.heading} />:{' '}\r\n                </Typography>\r\n              )}\r\n              {\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component={'span'}\r\n                  gutterBottom={false}\r\n                >\r\n                  {fields.message && <Text field={fields.message} />}\r\n                  <Button\r\n                    component=\"span\"\r\n                    buttonType=\"secondary\"\r\n                    hasBorder={false}\r\n                    isStartIcon={true}\r\n                    size=\"small\"\r\n                    field={fields.link}\r\n                    onClick={() => handleClose(true)} // Sending here true which will identify in knowing is it readMore click or cross icon icon, usefull in analytics\r\n                    className=\"ctaBtn\"\r\n                  />\r\n                </Typography>\r\n              }\r\n            </Alert>\r\n            <Alert\r\n              ariaLabel={(props.t && props.t('close')) || CLOSE_ICON_TEXT}\r\n              handleCloseAlert={handleClose}\r\n              className=\"mobileNotification\"\r\n            >\r\n              <CustomLink\r\n                className=\"ctaBtn\"\r\n                field={fields.link}\r\n                onClick={() => handleClose(true)}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component={'span'}\r\n                  gutterBottom={false}\r\n                  className={classes.message}\r\n                >\r\n                  {fields &&\r\n                    fields.mobileLink &&\r\n                    fields.mobileLink.value &&\r\n                    fields.mobileLink.value.text}\r\n                </Typography>\r\n              </CustomLink>\r\n            </Alert>\r\n          </Container>\r\n        )}\r\n      </div>\r\n    </NoSsr>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(Notification))\r\n);\r\n","export const COMPONENT_NAME = 'Notification';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport capitalize from '@material-ui/core/utils/capitalize';\r\nimport { styles } from './Container.style';\r\n\r\nconst Container = React.forwardRef(function Container(props, ref) {\r\n  const {\r\n    classes,\r\n    className = '',\r\n    component: Component = 'div',\r\n    fixed = false,\r\n    maxWidth = 'xl',\r\n    useContainer = true,\r\n    overflowHidden = false,\r\n    ...other\r\n  } = props;\r\n\r\n  const container = (\r\n    <Component\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.fixed]: fixed,\r\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]:\r\n            maxWidth !== false,\r\n        },\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...other}\r\n    />\r\n  );\r\n\r\n  if (!useContainer) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.overflowHidden]: overflowHidden,\r\n      })}\r\n    >\r\n      {container}\r\n    </section>\r\n  );\r\n});\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Set the max-width to match the min-width of the current breakpoint.\r\n   * This is useful if you'd prefer to design for a fixed set of sizes\r\n   * instead of trying to accommodate a fully fluid viewport.\r\n   * It's fluid by default.\r\n   */\r\n  fixed: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the container.\r\n   * The container width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\r\n\r\n  useContainer: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\r\n","export const styles = theme => {\r\n  const paddings = {};\r\n\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      width: '100%',\r\n      marginLeft: 'auto',\r\n      boxSizing: 'border-box',\r\n      marginRight: 'auto',\r\n      paddingLeft: '0',\r\n      paddingRight: '0',\r\n    },\r\n    ...paddings,\r\n    /* Styles applied to the root element if `fixed={true}`. */\r\n    fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\r\n      const value = theme.breakpoints.values[breakpoint];\r\n\r\n      if (value !== 0) {\r\n        acc[theme.breakpoints.up(breakpoint)] = {\r\n          maxWidth: value,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {}),\r\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\r\n    maxWidthXs: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\r\n    maxWidthSm: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: theme.breakpoints.values.sm,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\r\n    maxWidthMd: {\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: theme.breakpoints.values.md,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\r\n    maxWidthLg: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\r\n    maxWidthXl: {\r\n      [theme.breakpoints.up('xl')]: {\r\n        // maxWidth: theme.breakpoints.values.xl,\r\n        maxWidth: '100%',\r\n      },\r\n    },\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n  };\r\n};\r\n","import { canUseDOM } from './canUseDOM';\r\nimport {\r\n  INSIDE_CHINA_COUNTRY_CODE,\r\n  LANGUAGE_CODE,\r\n  DOMAIN_SUFFIX,\r\n} from '../../constants';\r\nimport { get } from 'lodash';\r\n\r\nexport const cookie = {\r\n  writeSessionCookie: function(cname, cvalue) {\r\n    canUseDOM &&\r\n      (document.cookie = cname + '=' + cvalue + '; path=/' + '; secure;');\r\n  },\r\n  write: function(cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n    var expires = 'expires=' + d.toUTCString();\r\n    canUseDOM &&\r\n      (document.cookie =\r\n        cname + '=' + cvalue + '; ' + expires + '; path=/' + '; secure;');\r\n  },\r\n  read: function(name) {\r\n    if (canUseDOM && document.cookie.indexOf(name) > -1) {\r\n      return document.cookie\r\n        .split(name)[1]\r\n        .split('; ')[0]\r\n        .substr(1);\r\n    } else {\r\n      return '';\r\n    }\r\n  },\r\n  delete: function(cname) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() - 1000);\r\n    var expires = 'expires=' + d.toUTCString();\r\n    canUseDOM && (document.cookie = cname + '=; ' + expires);\r\n  },\r\n};\r\n\r\nexport default cookie;\r\n\r\nexport const cookiesList = {\r\n  _Country: '_country',\r\n};\r\n\r\n//inside china OR browsing chinese site\r\nexport const isInsideChina = sitecoreContext => {\r\n  const countryCode =\r\n    cookie.read(cookiesList._Country) &&\r\n    cookie.read(cookiesList._Country).toLocaleLowerCase();\r\n  const language = get(sitecoreContext, 'language', LANGUAGE_CODE.DEFAULT);\r\n  return (\r\n    countryCode === INSIDE_CHINA_COUNTRY_CODE ||\r\n    isLanguageEqual(language, LANGUAGE_CODE.CHINESE)\r\n  );\r\n};\r\n\r\n// is china domain e.g. visitabudhabi.cn\r\nexport const isDomainCN = () => {\r\n  const locationHostArr = canUseDOM && window.location.hostname.split('.');\r\n  const domainCode =\r\n    locationHostArr && locationHostArr[locationHostArr.length - 1];\r\n  return domainCode && domainCode.toLowerCase() === 'cn';\r\n};\r\n\r\n//inside china AND not browsing site in chinese\r\nexport const evalConditionForInsideChina = language => {\r\n  const countryCode =\r\n    cookie.read(cookiesList._Country) &&\r\n    cookie.read(cookiesList._Country).toLocaleLowerCase();\r\n  return (\r\n    countryCode === INSIDE_CHINA_COUNTRY_CODE &&\r\n    !isLanguageEqual(language, LANGUAGE_CODE.CHINESE)\r\n  );\r\n};\r\n\r\n//outside china AND not browsing site in chinese\r\nexport const evalConditionForSocialShare = language => {\r\n  const countryCode =\r\n    cookie.read(cookiesList._Country) &&\r\n    cookie.read(cookiesList._Country).toLocaleLowerCase();\r\n  return !(\r\n    countryCode !== INSIDE_CHINA_COUNTRY_CODE &&\r\n    !isLanguageEqual(language, LANGUAGE_CODE.CHINESE)\r\n  );\r\n};\r\n\r\nexport const evalConditionForIcpLicense = language => {\r\n  if (isLanguageEqual(language, LANGUAGE_CODE.CHINESE)) {\r\n    return true;\r\n  } else {\r\n    const domainName = canUseDOM && window.location.hostname;\r\n    const domainSuffix =\r\n      domainName && domainName.substr(domainName.lastIndexOf('.'));\r\n    return domainSuffix === DOMAIN_SUFFIX.CHINA;\r\n  }\r\n};\r\n\r\nexport const isLanguageEqual = (selectedLanguage, checkLanguage) => {\r\n  const selectedLanguageLowerCase =\r\n    selectedLanguage && selectedLanguage.toLowerCase();\r\n  const checkLanguageLowerCase = checkLanguage && checkLanguage.toLowerCase();\r\n  return selectedLanguageLowerCase === checkLanguageLowerCase;\r\n};\r\n"],"sourceRoot":""}