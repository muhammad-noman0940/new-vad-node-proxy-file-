{"version":3,"sources":["global/utils/setEqualHeight.js","global/utils/getCardCategoryTags.js","global/utils/getPriceRange.js","global/utils/getRedirectionUrl.js","global/containers/common/SmartList/style.js","global/containers/common/SmartList/SmartList.js","global/containers/common/SmartList/locators.js","global/containers/common/SmartList/redux/selectors.js","global/containers/common/SmartList/index.js","global/utils/getCurrentLanguage.js"],"names":["setEqualHeight","topDiv","botDivQuery","botArea","querySelectorAll","forEach","el","style","height","heights","Array","prototype","slice","call","map","offsetHeight","maxHeight","Math","max","apply","getCardCategoryTags","item","dictionaryTags","tags","split","length","tag","push","getPriceRange","expenseValues","expenseRange","expenseRangeParam","expenseRangeSigns","eachHighestNumb","value","breakVal","numbers","val","isNumVal","parseInt","indexOf","overAllHighest","range","index","getRedirectionUrl","language","eventListingPageUrl","getDictionaryText","canUseDOM","window","location","origin","toLowerCase","urlSlug","useStyles","makeStyles","theme","root","marginBottom","pxToRem","breakpoints","up","fontFamily","typography","secondaryBoldCapt","letterSpacing","borderBottom","boxShadow","shadows","backgroundColor","pageContentType","EVENT_TYPE","SIMILAR_SEARCH_EVENT_TAG_COLOR","spacing","margin","width","padding","down","flex","maxWidth","flexWrap","overflowX","paddingTop","paddingBottom","mixins","paddingLR","alignRight","textAlign","textRight","display","bottomSpacing","whiteSpace","withSitecoreContext","withNamespaces","props","isEditor","getSmartListStart","updateMultipleFiltersData","resetSmartList","contentListData","fields","sitecoreContext","appConfig","get","smartListWrapper","useRef","classes","useState","identifier","setIdentifier","title","filterType","seeMore","contentType","limit","disableSmartList","result","sitecoreResults","results","isSitecoreResultsAvailable","defaultGooglePlaceId","route","googlePlaceId","previewMode","pageState","isExperienceEditorActive","useEffect","uid","min","floor","random","filterArray","filter","key","category","facetFields","offset","filters","isPreviewMode","queryObject","seeAllBtn","document","btn","addEventListener","scroll","top","left","behavior","current","cardKeys","ratingOutOf","getCurrentLanguage","consolidateData","data","id","totalResults","showViewAll","getResults","obj","analyticsData","label","createDynamicLabels","getPageName","getComponentName","pushAnaylyticsData","addAnalyticsInfo","className","data-locator","ref","Grid","container","xs","lg","Typography","variant","component","field","Button","buttonType","hasBorder","size","onClick","i","TAGS","priceTagData","priceTags","dymnamicProps","thumbnailSrc","src","alt","thumbnailImage","CarouselCard","desktopImage","mobileImage","aspectRatioNeeded","imageCtaUrl","ctaLink","cardType","LISTING_TYPE","sectionTitle","pageName","componentName","featuredEvent","other","isFeatured","startDate","endDate","openTime","closeTime","umbrellaEventCount","isEventListing","peopleInterested","interestedCount","eventType","featured","isPaid","locationTitle","location_Titles","region","location_Regions","getAdditionalCardAttributes","viewsCount","num_reviews","rating_image_url","Hidden","lgUp","implementation","selectListData","createSelector","state","SmartListReducer","mapDispatchToProps","dispatch","payload","mapStateToProps","createStructuredSelector","withErrorBoundary","connect"],"mappings":"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","file":"static/js/SmartList.a5affddd.chunk.js","sourcesContent":["/*\r\n    set equal height \r\n*/\r\n\r\nexport const setEqualHeight = (topDiv, botDivQuery) => {\r\n  if (topDiv) {\r\n    const botArea = topDiv.querySelectorAll(botDivQuery);\r\n    if (botArea) {\r\n      botArea.forEach((el) => { el.style.height = ''; });\r\n      // Get height list\r\n      const heights = Array.prototype.slice.call(botArea).map(function (botArea) {\r\n        return [botArea, botArea.offsetHeight];\r\n      });\r\n      // Get higest height from botArea\r\n      const maxHeight = Math.max.apply(null, heights.map(function (botArea) {\r\n        return botArea[1];\r\n      }));\r\n      botArea.forEach((el) => { el.style.height = maxHeight + 'px'; });\r\n    }\r\n  }\r\n};\r\n","// This method returns card category tags in the order of the keys provided by the dictionary\r\n// We pick the key from dictionary and extract the tag from api card data\r\n// Each page is having different keys and its order that comes from dictionary service dynamically generated using page contentType\r\nexport const getCardCategoryTags = (item, dictionaryTags) => {\r\n  const tags = [];\r\n  dictionaryTags = dictionaryTags && dictionaryTags.split(',');\r\n  dictionaryTags &&\r\n    dictionaryTags.length > 0 &&\r\n    dictionaryTags.forEach(tag => {\r\n      if (item[tag] && item[tag].length > 0) {\r\n        item[tag][0] && tags.push(item[tag][0]);\r\n        //tags.push(item[tag][getRandomIndex(item[tag].length)]);\r\n      }\r\n    });\r\n  return tags;\r\n};\r\n\r\n// const getRandomIndex = arrayLength => {\r\n//   return Math.floor(Math.random() * arrayLength);\r\n// };\r\n","// This method returns card category tags in the order of the keys provided by the dictionary\r\n// We pick the key from dictionary and extract the tag from api card data\r\n// Each page is having different keys and its order that comes from dictionary service dynamically generated using page contentType\r\nexport const getPriceRange = (expenseValues = '') => {\r\n  let expenseRange = '';\r\n  if (expenseValues && expenseValues.length > 0) {\r\n    const expenseRangeParam = [\r\n      [1, 200],\r\n      [201, 500],\r\n      [501],\r\n    ];\r\n    const expenseRangeSigns = [\r\n      '$',\r\n      '$$',\r\n      '$$$',\r\n    ];\r\n    const eachHighestNumb = [];\r\n    expenseValues.forEach(value => {\r\n      const breakVal = value.split(/[\\ \\-]/);\r\n      const numbers = [];\r\n\r\n      breakVal.forEach(val => {\r\n        let isNumVal = parseInt(val);\r\n        if (isNumVal) {\r\n          // check if val has a + sign\r\n          if (val.indexOf('+') > -1) {\r\n            isNumVal++;\r\n          }\r\n          numbers.push(isNumVal)\r\n        }\r\n      });\r\n      eachHighestNumb.push(Math.max(...numbers));\r\n    });\r\n    const overAllHighest = Math.max(...eachHighestNumb);\r\n    expenseRangeParam.forEach((range, index) => {\r\n      if (!range[1]) {\r\n        if (overAllHighest >= range[0]) {\r\n          expenseRange = expenseRangeSigns[index];\r\n        }\r\n      } else {\r\n        if (overAllHighest >= range[0] && overAllHighest <= range[1]) {\r\n          expenseRange = expenseRangeSigns[index];\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return expenseRange;\r\n};\r\n","import { canUseDOM } from './canUseDOM';\r\nimport { getDictionaryText } from './getDictionaryText';\r\n\r\nexport const getRedirectionUrl = (item, language) => {\r\n  const eventListingPageUrl = getDictionaryText('eventListingPageUrl');\r\n  let redirectionUrl;\r\n  if (canUseDOM && window && window.location) {\r\n    redirectionUrl = `${\r\n      window.location.origin\r\n      }/${language.toLowerCase()}${eventListingPageUrl}/${item.urlSlug ? item.urlSlug : ''}`;\r\n  } else {\r\n    redirectionUrl = `/${language.toLowerCase()}${eventListingPageUrl}/${item.urlSlug ? item.urlSlug : ''}`;\r\n  }\r\n  return redirectionUrl;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\nimport {\r\n  EVENT_TYPE,\r\n  SIMILAR_SEARCH_EVENT_TAG_COLOR,\r\n} from '../../../../constants/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: pxToRem(48),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginBottom: pxToRem(64),\r\n    },\r\n    '& h2': {\r\n      fontFamily: theme.typography.fontFamily.secondaryBoldCapt,\r\n      letterSpacing: pxToRem(0),\r\n      [theme.breakpoints.up('lg')]: {\r\n        letterSpacing: pxToRem(-0.8),\r\n      },\r\n    },\r\n    '& .card-description': {\r\n      borderBottom: '0',\r\n      boxShadow: theme.shadows[4],\r\n    },\r\n    '& .seeAllBtn .MuiButton-endIcon': {\r\n      backgroundColor: ({ pageContentType }) =>\r\n        pageContentType === EVENT_TYPE && SIMILAR_SEARCH_EVENT_TAG_COLOR,\r\n    },\r\n  },\r\n  spacing: {\r\n    margin: `0 ${theme.spacing(-1.5)}`,\r\n    width: 'auto',\r\n    '& .MuiGrid-grid-lg-4': {\r\n      padding: `0 ${theme.spacing(1.5)}`,\r\n      marginBottom: theme.spacing(3),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: '0 0 83.333333%',\r\n        maxWidth: '83.33%',\r\n        padding: `0 ${theme.spacing(2)}`,\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      flexWrap: 'nowrap',\r\n      overflowX: 'auto',\r\n      margin: `0 ${theme.spacing(-3)}`,\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n      ...theme.mixins.paddingLR(theme.spacing(1), theme.spacing(3)),\r\n    },\r\n  },\r\n  alignRight: {\r\n    textAlign: theme.mixins.textRight('right'),\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  bottomSpacing: {\r\n    marginBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  '@global': {\r\n    'html:lang(ar) .smart-list-wrapper .MuiChip-root': {\r\n      whiteSpace: 'unset',\r\n      height: 'auto',\r\n    },\r\n    'html:lang(ar) .smart-list-wrapper .MuiChip-root .MuiChip-label': {\r\n      whiteSpace: 'unset',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Button from '../../../components/atoms/Button';\r\nimport CarouselCard from '../../../components/molecules/CarouselCard';\r\nimport { get } from 'lodash';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport useStyles from './style';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport { canUseDOM } from '../../../utils/canUseDOM';\r\nimport { setEqualHeight } from '../../../utils/setEqualHeight';\r\nimport { pushAnaylyticsData } from '../../../../../src/utils/analytics';\r\nimport { analyticsData } from '../../../../../src/constants/Analytics/analytics-data';\r\nimport { EVENT_TYPE, LISTING_TYPE, TAGS } from '../../../../constants/index';\r\nimport { getCardCategoryTags } from '../../../utils/getCardCategoryTags';\r\nimport { getRedirectionUrl } from '../../../utils/getRedirectionUrl';\r\nimport { getCurrentLanguage } from '../../../utils/getCurrentLanguage';\r\nimport { getDictionaryText } from '../../../utils/getDictionaryText';\r\nimport { getPriceRange } from '../../../utils/getPriceRange';\r\nimport {\r\n  getPageName,\r\n  getComponentName,\r\n} from '../../../utils/getPageComponentInfo';\r\nimport { createDynamicLabels } from '../../../../utils/analytics';\r\n\r\nconst SmartList = props => {\r\n  const {\r\n    getSmartListStart,\r\n    updateMultipleFiltersData,\r\n    resetSmartList,\r\n    contentListData,\r\n    fields,\r\n    sitecoreContext,\r\n  } = props;\r\n  const { appConfig = {} } = props;\r\n  let pageContentType = get(\r\n    sitecoreContext,\r\n    'route.fields.contentType.fields.taxonomyKey.value',\r\n    ''\r\n  ).toLowerCase();\r\n  const smartListWrapper = useRef(null);\r\n  const classes = useStyles({ pageContentType });\r\n  const [identifier, setIdentifier] = useState('');\r\n  const { title, filterType, seeMore, contentType, limit, disableSmartList, result } = fields;\r\n  const sitecoreResults = result && result.results;\r\n  const isSitecoreResultsAvailable = sitecoreResults && sitecoreResults.length > 0;\r\n  const randomIntFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  let defaultGooglePlaceId = sitecoreContext &&\r\n    sitecoreContext.route &&\r\n    sitecoreContext.route.fields &&\r\n    sitecoreContext.route.fields.googlePlaceId;\r\n  let isEditor;\r\n\r\n  const previewMode =\r\n    sitecoreContext &&\r\n    sitecoreContext.pageState &&\r\n    sitecoreContext.pageState.toLowerCase();\r\n\r\n  if (isExperienceEditorActive() || previewMode === 'preview') {\r\n    isEditor = true;\r\n  } else {\r\n    isEditor = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sitecoreContext.language && !isSitecoreResultsAvailable && fields && (disableSmartList && !disableSmartList.value)) {\r\n      const uid = `smartList${randomIntFromInterval(100, 10000)}`;\r\n      resetSmartList && resetSmartList();\r\n      const queryObject = () => {\r\n        const filterArray =\r\n          filterType &&\r\n          filterType.length > 0 &&\r\n          filterType.map(filter => {\r\n            return {\r\n              key: get(filter, 'fields.taxonomyKey.value', ''),\r\n              value: get(filter, 'fields.searchKey.value', ''),\r\n            };\r\n          });\r\n\r\n        if (category) {\r\n          filterArray &&\r\n            filterArray.push({\r\n              key: get(category, 'taxonomyKey.value', ''),\r\n              value: get(category, 'searchKey.value', ''),\r\n            });\r\n        }\r\n        return {\r\n          contentType: get(contentType, 'fields.taxonomyKey.value', ''),\r\n          language: sitecoreContext && sitecoreContext.language,\r\n          facetFields: [],\r\n          limit: parseInt(get(limit, 'value', '')),\r\n          offset: 0,\r\n          filters: filterArray,\r\n          isPreviewMode: isEditor,\r\n        };\r\n      };\r\n      getSmartListStart(queryObject(), uid);\r\n      setIdentifier(uid);\r\n    }\r\n  }, [sitecoreContext.language]);\r\n\r\n  useEffect(() => {\r\n    if (canUseDOM) {\r\n      const seeAllBtn = document.querySelectorAll('.seeAllBtn');\r\n      seeAllBtn &&\r\n        seeAllBtn.forEach(btn =>\r\n          btn.addEventListener('click', () => {\r\n            window.scroll({\r\n              top: '0',\r\n              left: '0',\r\n              behavior: 'smooth',\r\n            });\r\n          })\r\n        );\r\n\r\n      // Make sure address aligns with it self throughtout cards.\r\n      setEqualHeight(smartListWrapper.current, '.bot-area');\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (canUseDOM) {\r\n      window.addEventListener('resize', () => {\r\n        // Make sure address aligns with it self throughtout cards.\r\n        setEqualHeight(smartListWrapper.current, '.bot-area');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (!fields) {\r\n    return null;\r\n  }\r\n  const category = get(sitecoreContext, 'route.fields.category.fields', '');\r\n  let cardKeys = getDictionaryText(pageContentType).split(',');\r\n\r\n  const ratingOutOf = getDictionaryText('outOf5');\r\n  const language = getCurrentLanguage({ sitecoreContext });\r\n\r\n  const addAnalyticsInfo = () => {\r\n    const obj = {\r\n      ...get(analyticsData, 'pageBodyInteraction.arrowClick'),\r\n      ...{\r\n        label: createDynamicLabels([\r\n          getPageName(props),\r\n          getComponentName(props),\r\n          `${title && title.value} - ${get(seeMore, 'value.text')}`,\r\n        ]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n\r\n  const consolidateData =\r\n    contentListData &&\r\n    contentListData.data.filter(function (data) {\r\n      return data.id === identifier;\r\n    });\r\n  const data = (sitecoreResults && sitecoreResults) || get(consolidateData[0], 'data.data.results', '');\r\n  const totalResults = (sitecoreResults && sitecoreResults.length) || get(consolidateData[0], 'data.data.totalResults', '');\r\n  let showViewAll = result && result.totalResults\r\n    ? parseInt(result.totalResults) > parseInt(get(limit, 'value', ''))\r\n    : false;\r\n  if (!showViewAll) {\r\n    showViewAll = data && totalResults\r\n      ? parseInt(totalResults) > parseInt(get(limit, 'value', ''))\r\n      : false;\r\n  }\r\n  const getResults = () => {\r\n    addAnalyticsInfo();\r\n    const filterArray =\r\n      filterType &&\r\n      filterType.length > 0 &&\r\n      filterType.map(filter => {\r\n        return {\r\n          key: get(filter, 'fields.taxonomyKey.value', ''),\r\n          value: get(filter, 'fields.searchKey.value', ''),\r\n        };\r\n      });\r\n    updateMultipleFiltersData(filterArray);\r\n  };\r\n\r\n  const getAdditionalCardAttributes = item => {\r\n    let other = {};\r\n    let featuredEvent;\r\n    if (pageContentType === EVENT_TYPE) {\r\n      if (item.isFeatured) {\r\n        featuredEvent = getDictionaryText('featuredText') || '';\r\n      }\r\n      other = {\r\n        startDate: item.startDate,\r\n        endDate: item.endDate,\r\n        openTime: item.openTime,\r\n        closeTime: item.closeTime,\r\n        umbrellaEventCount: item.umbrellaEventCount,\r\n        isEventListing: true,\r\n        peopleInterested:\r\n          item.interestedCount &&\r\n          `${item.interestedCount} ${getDictionaryText('interestedText')}`,\r\n        eventType: {\r\n          featured: featuredEvent,\r\n          isPaid: item.eventType,\r\n        },\r\n        locationTitle:\r\n          get(item, 'location_Titles.length') > 0 && item.location_Titles[0],\r\n        region:\r\n          get(item, 'location_Regions.length') > 0 && item.location_Regions[0],\r\n        language,\r\n        urlSlug: item.urlSlug,\r\n      };\r\n    }\r\n    return other;\r\n  };\r\n\r\n  let tags;\r\n  if (totalResults > 0) {\r\n    return (\r\n      <div\r\n        className={`${classes.root} smart-list-wrapper`}\r\n        data-locator={COMPONENT_NAME}\r\n        ref={smartListWrapper}\r\n      >\r\n        <Grid container classes={{ root: classes.bottomSpacing }}>\r\n          {totalResults > 0 && (\r\n            <Grid item xs={12} lg={8}>\r\n              <Typography variant=\"h5Bold\" component=\"h2\">\r\n                {title && <Text field={title} />}\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          {showViewAll && (\r\n            <Grid item lg={4} classes={{ root: classes.alignRight }}>\r\n              <Button\r\n                component=\"span\"\r\n                buttonType=\"primary\"\r\n                hasBorder={false}\r\n                size=\"small\"\r\n                onClick={getResults}\r\n                className=\"seeAllBtn\"\r\n              >\r\n                {get(seeMore, 'value.text', '')}\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Grid container classes={{ root: classes.spacing }}>\r\n          {data &&\r\n            data.map((item, i) => {\r\n              // This function will return category tags associated with corresponding page\r\n              tags = getCardCategoryTags(\r\n                item,\r\n                getDictionaryText(`${pageContentType}${TAGS}`)\r\n              );\r\n              let priceTagData = getPriceRange(item.priceTags);\r\n\r\n              let dymnamicProps = [];\r\n              if (cardKeys && cardKeys.length > 0) {\r\n                cardKeys.forEach(key => {\r\n                  dymnamicProps[key] = get(item, key, '');\r\n                });\r\n              }\r\n              const thumbnailSrc = {\r\n                src: get(item, 'thumbnailImage', ''),\r\n                alt: get(item, 'name', ''),\r\n                '3x2-card': {\r\n                  'large': get(item, 'thumbnailImage', ''),\r\n                },\r\n              };\r\n              const thumbnailImage = {\r\n                value:\r\n                  pageContentType === EVENT_TYPE\r\n                    ? thumbnailSrc\r\n                    : get(item, 'thumbnailImage', ''),\r\n              };\r\n              return (\r\n                <Grid item lg={4} key={i}>\r\n                  <CarouselCard\r\n                    title={get(item, 'name', '')}\r\n                    desktopImage={thumbnailImage}\r\n                    mobileImage={thumbnailImage}\r\n                    aspectRatioNeeded={contentType !== EVENT_TYPE}\r\n                    imageCtaUrl={\r\n                      pageContentType === EVENT_TYPE\r\n                        ? getRedirectionUrl(item, language)\r\n                        : get(item, 'itemUrl', '')\r\n                    }\r\n                    ctaLink={tags}\r\n                    cardType={\r\n                      pageContentType === EVENT_TYPE ? EVENT_TYPE : LISTING_TYPE\r\n                    }\r\n                    ratingOutOf={ratingOutOf}\r\n                    sectionTitle={title}\r\n                    pageName={getPageName(props)}\r\n                    componentName={getComponentName(props)}\r\n                    {...dymnamicProps}\r\n                    {...getAdditionalCardAttributes(item)}\r\n                    expenseRange={priceTagData}\r\n                    viewsCount={get(item, 'viewsCount', '')}\r\n                    num_reviews={get(item, 'tripAdvisorNumberOfReviews', '')}\r\n                    rating_image_url={get(item, 'tripAdvisorRatingImageURL', '')}\r\n                    googlePlaceId={get(item, 'googlePlaceId', '')}\r\n                    defaultGooglePlaceId={defaultGooglePlaceId}\r\n                    language={language}\r\n                    appConfig={appConfig}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n        {showViewAll && (\r\n          <Hidden lgUp implementation=\"css\">\r\n            <Button\r\n              buttonType=\"primary\"\r\n              hasBorder={false}\r\n              size=\"small\"\r\n              onClick={getResults}\r\n              className=\"seeAllBtn\"\r\n            >\r\n              {get(seeMore, 'value.text', '')}\r\n            </Button>\r\n          </Hidden>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport default withSitecoreContext()(withNamespaces()(SmartList));\r\n\r\nexport { SmartList };\r\n","export const COMPONENT_NAME = 'SmartList';\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getContentListData = state => {\r\n  return state;\r\n};\r\n\r\nexport const selectListData = createSelector(\r\n  getContentListData,\r\n  data => data.SmartListReducer\r\n);\r\n","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SmartList from './SmartList';\r\nimport { updateMultipleFiltersData } from '../Filters/redux/actions';\r\nimport { getSmartListStart, resetSmartList } from './redux/actions';\r\nimport { selectListData } from './redux/selectors';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\n\r\nconst SmartListContainer = props => {\r\n  return <SmartList {...props} />;\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSmartListStart: (payload, id) =>\r\n      dispatch(getSmartListStart(payload, id)),\r\n    updateMultipleFiltersData: payload =>\r\n      dispatch(updateMultipleFiltersData(payload)),\r\n    resetSmartList: () => dispatch(resetSmartList()),\r\n  };\r\n};\r\n\r\nexport const mapStateToProps = createStructuredSelector({\r\n  contentListData: selectListData,\r\n});\r\n\r\nexport default withErrorBoundary(connect(mapStateToProps, mapDispatchToProps)(SmartListContainer));\r\n","import get from 'lodash/get';\r\nexport const getCurrentLanguage = props => {\r\n  return get(props, 'sitecoreContext.language', '');\r\n}"],"sourceRoot":""}