{"version":3,"sources":["global/containers/common/GlobalSearchSubLayout/redux/selectors.js","global/containers/common/GlobalSearchSubLayout/redux/actions.js","global/components/organism/PopularSearch/style.js","global/components/organism/PopularSearch/index.js","global/containers/common/NoSearchResult/style.js","global/containers/common/NoSearchResult/index.js","global/containers/common/NoSearchResult/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Box/index.js","global/utils/decodeHTML/index.js","global/components/atoms/RichText/style.js","global/components/atoms/RichText/index.js","global/components/atoms/Avatar/index.js","global/components/molecules/IconWithText/style.js","global/components/molecules/IconWithText/index.js"],"names":["searchTermData","createSelector","state","data","SearchTermDataReducer","updateSearchTermData","payload","type","actionTypes","useStyles","makeStyles","theme","marginLR","mixins","pagesLinkSection","display","flexDirection","breakpoints","up","flexWrap","pageLinks","color","AbuDhabiRed","marginBottom","pxToRem","flexBasis","backgroundColor","animationName","animationDuration","animationIterationCount","White","width","height","marginTop","transform","translateX","PopularSearch","forwardRef","props","ref","popularSearch","pageName","componentName","classes","fields","listItems","title","onLinkClick","e","cta","text","obj","get","analyticsData","label","createDynamicLabels","value","pushAnaylyticsData","addAnalyticsInfo","popTitleElem","useRef","popLinksWrapper","useImperativeHandle","Grid","item","Typography","className","subTitle","variant","component","gutterBottom","noWrap","animateSettings","selfTrigger","willAnimate","rotateReversed","duration","field","length","map","link","index","linkValue","Link","key","onClick","IconWithText","iconType","iconWithCircle","isAnimate","renderPopularLinks","displayName","paddingLR","margin","noSearchWrapper","paddingTop","paddingBottom","contentPart","richTextSection","typography","h5Bold","body1","popularSearchSection","mapDispatchToProps","dispatch","params","mapStateToProps","createStructuredSelector","withErrorBoundary","connect","getPageName","getComponentName","heading","description","headingToDisplay","data-locator","RichText","innerHTML","onPopularSeachClick","canUseDOM","selectedValue","query","queryString","stringify","searchTerm","window","history","replaceState","turbolinks","location","pathname","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","root","marginLeft","spacing","marginRight","container","boxSizing","zeroMinWidth","minWidth","alignItems","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","keys","reduce","accumulator","globalStyles","size","Math","round","flexGrow","maxWidth","Object","assign","generateGrid","name","styleFunction","css","compose","borders","flexbox","positions","palette","shadows","sizing","Box","styled","decodeHTML","encodedHTML","richTextWrap","h1","h2","h3","h4","h5","body1Regular","darkGrey","common","fontFamily","primaryBold","isEditor","isExperienceEditorActive","htmlWithoutStyle","clsx","dangerouslySetInnerHTML","__html","CustomAvatar","children","other","objectFit","textThenIcon","background","iconThenText","avatarClassName","isTextThenIcon","iconImage","Picture","media","image","mobileImage","renditionNeeded","fallbackBackgroundNeeded","isParalax","defaultTypes"],"mappings":"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","file":"static/js/NoSearchResult.0a3c0336.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst getData = state => {\r\n  return state;\r\n};\r\n\r\nexport const searchTermData = createSelector(\r\n  getData,\r\n  data => data.SearchTermDataReducer\r\n);\r\n","import * as actionTypes from './actionTypes';\r\n\r\n/**\r\n * actions for fetching filters data\r\n */\r\nexport const updateSearchTermData = payload => {\r\n  return {\r\n    type: actionTypes.SET_SEARCH_TERM_DATA,\r\n    payload,\r\n  };\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  const { marginLR } = theme.mixins;\r\n  return {\r\n    pagesLinkSection: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      [theme.breakpoints.up('lg')]: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n      },\r\n    },\r\n    pageLinks: {\r\n      color: theme.mixins.AbuDhabiRed(),\r\n      marginBottom: pxToRem(12),\r\n      flexBasis: '100%',\r\n      [theme.breakpoints.up('lg')]: {\r\n        flexBasis: '50%',\r\n        '&:hover': {\r\n          color: theme.mixins.AbuDhabiRed(500),\r\n          '& .MuiAvatar-root': {\r\n            backgroundColor: theme.mixins.AbuDhabiRed(),\r\n            '& .animateIcon': {\r\n              animationName: '$arrowMove',\r\n              animationDuration: '.5s',\r\n              animationIterationCount: '1',\r\n            },\r\n          },\r\n          '& .MuiSvgIcon-root': {\r\n            color: theme.mixins.White(),\r\n          },\r\n        },\r\n      },\r\n      '& .MuiAvatar-root': {\r\n        width: pxToRem(32),\r\n        height: pxToRem(32),\r\n        ...marginLR(0, pxToRem(8)),\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n        color: theme.mixins.AbuDhabiRed(),\r\n        marginTop: 2,\r\n        width: pxToRem(20),\r\n        height: pxToRem(20),\r\n      },\r\n    },\r\n    '@keyframes arrowMove': {\r\n      '0%': { transform: 'translateX(0)' },\r\n      '50%': { transform: `translateX(${theme.mixins.translateX(130)}%)` },\r\n      '51%': { transform: `translateX(${theme.mixins.translateX(-130)}%)` },\r\n      '100%': { transform: 'translateX(0)' },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useRef, useImperativeHandle, forwardRef } from 'react';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport get from 'lodash/get';\r\n\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Link from '../../atoms/Link';\r\nimport useStyles from './style';\r\nimport Typography from '../../atoms/Typography';\r\nimport IconWithText from '../../molecules/IconWithText';\r\nimport {\r\n  pushAnaylyticsData,\r\n  createDynamicLabels,\r\n} from '../../../../utils/analytics';\r\nimport { analyticsData } from '../../../../constants/Analytics/analytics-data';\r\n\r\nconst PopularSearch = forwardRef((props, ref) => {\r\n  let {\r\n    popularSearch,\r\n    // onPopularSeachClick,\r\n    pageName,\r\n    componentName,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const { listItems, title } = popularSearch && popularSearch.fields;\r\n\r\n  const addAnalyticsInfo = text => {\r\n    const obj = {\r\n      ...get(analyticsData, 'pageBodyInteraction.arrowClick'),\r\n      ...{\r\n        label: createDynamicLabels([\r\n          pageName,\r\n          componentName,\r\n          `${title && title.value} - ${text}`,\r\n        ]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n\r\n  const onLinkClick = (e, cta) => {\r\n    addAnalyticsInfo(get(cta, 'value.text', ''));\r\n    // e.preventDefault();\r\n    // onPopularSeachClick(cta);\r\n  };\r\n\r\n  const popTitleElem = useRef(null),\r\n    popLinksWrapper = useRef(null);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    popTitleElem,\r\n    popLinksWrapper,\r\n  }));\r\n\r\n  const renderPopularLinks = listItems => {\r\n    return listItems.map((link, index) => {\r\n      const { cta } = link.fields || '';\r\n      const linkValue = get(cta, 'value.text', '');\r\n      return linkValue ? (\r\n        <Link\r\n          key={index}\r\n          className={classes.pageLinks}\r\n          link={cta}\r\n          onClick={e => onLinkClick(e, cta)}\r\n        >\r\n          <IconWithText\r\n            iconType=\"ArrowForwardSharpIcon\"\r\n            iconWithCircle={false}\r\n            isAnimate={true}\r\n          >\r\n            <Typography\r\n              component=\"div\"\r\n              variant=\"body2Bold\"\r\n              animateSettings={{\r\n                selfTrigger: false,\r\n                willAnimate: false,\r\n                duration: '250ms',\r\n              }}>\r\n              <Text field={{ value: linkValue }} />\r\n            </Typography>\r\n          </IconWithText>\r\n        </Link>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      {title && (\r\n        <Typography\r\n          className={classes.subTitle}\r\n          variant=\"h5Bold\"\r\n          component=\"h2\"\r\n          gutterBottom={true}\r\n          noWrap\r\n          ref={popTitleElem}\r\n          animateSettings={{\r\n            selfTrigger: false,\r\n            willAnimate: true,\r\n            rotateReversed: true,\r\n            duration: '300ms',\r\n          }}\r\n        >\r\n          <Text field={title} />\r\n        </Typography>\r\n      )}\r\n      <Grid item className={classes.pagesLinkSection} ref={popLinksWrapper}>\r\n        {listItems && listItems.length > 0 && renderPopularLinks(listItems)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nPopularSearch.displayName = 'PopularSearch';\r\n\r\nexport default PopularSearch;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  const { paddingLR } = theme.mixins;\r\n  return {\r\n    title: {\r\n      margin: 0,\r\n    },\r\n    noSearchWrapper: {\r\n      paddingTop: pxToRem(32),\r\n      paddingBottom: pxToRem(32),\r\n      [theme.breakpoints.up('lg')]: {\r\n        paddingTop: pxToRem(40),\r\n        paddingBottom: pxToRem(72),\r\n      },\r\n    },\r\n    contentPart: {\r\n      paddingTop: pxToRem(32),\r\n    },\r\n    richTextSection: {\r\n      '& p': {\r\n        ...theme.typography.h5Bold,\r\n\r\n        [theme.breakpoints.up('lg')]: {\r\n          marginTop: pxToRem(55),\r\n          marginBottom: pxToRem(24),\r\n        },\r\n      },\r\n      '& ul': {\r\n        ...theme.typography.body1,\r\n        ...paddingLR(pxToRem(23), 0),\r\n        [theme.breakpoints.up('lg')]: {\r\n          ...paddingLR(pxToRem(40), 0),\r\n        },\r\n        '& li': {\r\n          marginBottom: pxToRem(16),\r\n          [theme.breakpoints.up('lg')]: {\r\n            marginBottom: pxToRem(32),\r\n          },\r\n        },\r\n      },\r\n    },\r\n    popularSearchSection: {\r\n      paddingTop: pxToRem(24),\r\n\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: '40%',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport queryString from 'query-string';\r\nimport { connect } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport PopularSearch from '../../../components/organism/PopularSearch';\r\nimport { updateSearchTermData } from '../GlobalSearchSubLayout/redux/actions';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport useStyles from './style';\r\nimport RichText from '../../../components/atoms/RichText';\r\nimport { searchTermData } from '../GlobalSearchSubLayout/redux/selectors';\r\nimport { canUseDOM } from '../../../utils/canUseDOM';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport {\r\n  getPageName,\r\n  getComponentName,\r\n} from '../../../utils/getPageComponentInfo';\r\n\r\nconst NoSearchResult = props => {\r\n  const classes = useStyles();\r\n  const pageName = getPageName(props);\r\n  const componentName = getComponentName(props);\r\n  const { heading, description, popularSearch } = props.fields;\r\n  const { searchTermData } = props;\r\n  let headingToDisplay = '';\r\n\r\n  if (heading && heading.value && searchTermData && searchTermData.data) {\r\n    headingToDisplay = {\r\n      value: `${heading.value} \"${searchTermData.data}\"`,\r\n    };\r\n  } else {\r\n    headingToDisplay = {\r\n      value: heading && heading.value,\r\n    };\r\n  }\r\n\r\n  const onPopularSeachClick = link => {\r\n    if (canUseDOM) {\r\n      const selectedValue = get(link, 'value.text', '');\r\n      const query = queryString.stringify({ searchTerm: selectedValue });\r\n      window.history.replaceState(\r\n        { turbolinks: {} },\r\n        '',\r\n        `${window.location.pathname}?${query}`\r\n      );\r\n      props.updateSearchTermData(selectedValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.noSearchWrapper} data-locator={COMPONENT_NAME}>\r\n      {headingToDisplay && headingToDisplay.value && (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h2\"\r\n          component=\"h1\"\r\n          gutterBottom={true}\r\n        >\r\n          <Text field={headingToDisplay} />\r\n        </Typography>\r\n      )}\r\n      <Grid item className={classes.contentPart}>\r\n        <Grid item className={classes.richTextSection}>\r\n          {description && description.value && (\r\n            <RichText innerHTML={description} />\r\n          )}\r\n        </Grid>\r\n        {popularSearch && popularSearch.fields && (\r\n          <Grid item className={classes.popularSearchSection}>\r\n            <PopularSearch\r\n              popularSearch={popularSearch}\r\n              onPopularSeachClick={onPopularSeachClick}\r\n              pageName={pageName}\r\n              componentName={componentName}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateSearchTermData: params => dispatch(updateSearchTermData(params)),\r\n  };\r\n};\r\n\r\nexport const mapStateToProps = createStructuredSelector({\r\n  searchTermData: searchTermData,\r\n});\r\nexport default withErrorBoundary(\r\n  connect(mapStateToProps, mapDispatchToProps)(NoSearchResult)\r\n);\r\n","export const COMPONENT_NAME = 'NoSearchResult';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import {\r\n  borders,\r\n  compose,\r\n  display,\r\n  flexbox,\r\n  palette,\r\n  positions,\r\n  shadows,\r\n  sizing,\r\n  spacing,\r\n  typography,\r\n  css,\r\n} from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\n\r\nexport const styleFunction = css(\r\n  compose(\r\n    borders,\r\n    display,\r\n    flexbox,\r\n    positions,\r\n    palette,\r\n    shadows,\r\n    sizing,\r\n    spacing,\r\n    typography\r\n  )\r\n);\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst Box = styled('div')(styleFunction, { name: 'MuiBox' });\r\n\r\nexport default Box;\r\n","/* \r\n    This method remove \"\\\" from html string\r\n    Accept params: encoded html\r\n    Return: decode html\r\n*/\r\nexport const decodeHTML = encodedHTML => encodedHTML.replace(/\\\\/g, '');\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\nconst useStyles = makeStyles(theme => ({\r\n  richTextWrap: {\r\n    '& h1': {\r\n      ...theme.typography.h1,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h2,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h3,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h4,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.h5,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& h6': {\r\n      ...theme.typography.body1Regular,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& p': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.text.darkGrey,\r\n      margin: `0 0 ${theme.spacing(2)}`,\r\n    },\r\n    '& ul': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& ol': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& a': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.common.AbuDhabiRed,\r\n    },\r\n    '& strong, & b': {\r\n      fontFamily: theme.typography.fontFamily.primaryBold,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { decodeHTML } from '../../../utils/decodeHTML';\r\nimport { RichText as RichTextSitecore } from '@sitecore-jss/sitecore-jss-react';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport clsx from 'clsx';\r\nimport useStyles from './style';\r\n\r\nconst RichText = ({ innerHTML, className }) => {\r\n  const classes = useStyles();\r\n  const isEditor = isExperienceEditorActive();\r\n  const htmlWithoutStyle =\r\n    innerHTML &&\r\n    innerHTML.value &&\r\n    innerHTML.value.replace(/\\s*style=([\"'])(.*?)\\1/g, '');\r\n\r\n  if (isEditor) {\r\n    return (\r\n      <RichTextSitecore\r\n        className={clsx(\r\n          classes.richTextWrap,\r\n          className ? className : '',\r\n          'richText',\r\n          'richTextSitecore'\r\n        )}\r\n        field={innerHTML}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (innerHTML && innerHTML.value) {\r\n    return (\r\n      <div\r\n        className={`${classes.richTextWrap} ${\r\n          className ? className : ''\r\n        } richText`}\r\n        dangerouslySetInnerHTML={{\r\n          __html: decodeHTML(htmlWithoutStyle),\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default RichText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst CustomAvatar = props => {\r\n  const { className, children, ...other } = props;\r\n  return (\r\n    <Avatar className={className} {...other}>\r\n      {children}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nCustomAvatar.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CustomAvatar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    '.hightlight-icon': {\r\n      '& img': {\r\n        width: 'inherit',\r\n        maxWidth: '100%',\r\n        objectFit: 'contain',\r\n      },\r\n      '& .MuiAvatar-root': {\r\n        width: 'auto',\r\n        height: 'auto',\r\n      },\r\n    },\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    transform: iconWithCircle => !iconWithCircle && 'translateX(-10px)',\r\n  },\r\n  textThenIcon: {\r\n    '& .MuiAvatar-root': {\r\n      ...theme.mixins.marginLeft(pxToRem(10)),\r\n      background: iconWithCircle => !iconWithCircle && 'transparent',\r\n    },\r\n  },\r\n  iconThenText: {\r\n    '& .MuiAvatar-root': {\r\n      ...theme.mixins.marginRight(pxToRem(10)),\r\n      background: iconWithCircle => !iconWithCircle && 'transparent',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport get from 'lodash/get';\r\nimport Box from '../Box';\r\nimport CustomAvatar from '../../atoms/Avatar';\r\nimport Picture from '../../atoms/Picture';\r\nimport DctSvgIcon from '../../atoms/Svg';\r\nimport useStyles from './style';\r\n\r\nconst IconWithText = props => {\r\n  const {\r\n    className,\r\n    iconType = 'FallbackCheckIcon', // fallback check icon\r\n    avatarClassName,\r\n    children,\r\n    isTextThenIcon,\r\n    iconWithCircle,\r\n    iconImage,\r\n    isAnimate,\r\n    ...other\r\n  } = props;\r\n  const TextThenIcon = () => {\r\n    return (\r\n      <Box className={clsx(classes.root, classes.textThenIcon, className)}>\r\n        {children}\r\n        <CustomAvatar className={avatarClassName} {...other}>\r\n          {get(iconImage, 'value.src', '').length > 1 ? ( // Sometimes only '/' comes in src, hence handled that case here also\r\n            <Picture\r\n              media={{\r\n                image: iconImage,\r\n                mobileImage: iconImage,\r\n                renditionNeeded: false,\r\n                fallbackBackgroundNeeded: false,\r\n              }}\r\n              isParalax={false}\r\n            />\r\n          ) : isAnimate ? (\r\n            <span className=\"animateIcon\">\r\n              <DctSvgIcon name={iconType} />\r\n            </span>\r\n          ) : (\r\n            <DctSvgIcon name={iconType} />\r\n          )}\r\n        </CustomAvatar>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const IconThenText = () => {\r\n    return (\r\n      <Box className={clsx(classes.root, classes.iconThenText, className)}>\r\n        <CustomAvatar className={avatarClassName} {...other}>\r\n          {get(iconImage, 'value.src', '').length > 1 ? (\r\n            <Picture\r\n              media={{\r\n                image: iconImage,\r\n                mobileImage: iconImage,\r\n                renditionNeeded: false,\r\n                fallbackBackgroundNeeded: false,\r\n              }}\r\n              isParalax={false}\r\n            />\r\n          ) : isAnimate ? (\r\n            <span className=\"animateIcon\">\r\n              <DctSvgIcon name={iconType} />\r\n            </span>\r\n          ) : (\r\n            <DctSvgIcon name={iconType} />\r\n          )}\r\n        </CustomAvatar>\r\n        {children}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles(iconWithCircle);\r\n  return isTextThenIcon ? TextThenIcon() : IconThenText();\r\n};\r\n\r\nIconWithText.propTypes = {\r\n  className: PropTypes.string,\r\n  iconType: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  isTextThenIcon: PropTypes.bool,\r\n  iconWithCircle: PropTypes.bool,\r\n  iconImage: PropTypes.object,\r\n};\r\n\r\nIconWithText.defaultTypes = {\r\n  className: '',\r\n  isTextThenIcon: false,\r\n  iconWithCircle: true,\r\n  isAnimate: false,\r\n  iconImage: '',\r\n};\r\n\r\nexport default IconWithText;\r\n"],"sourceRoot":""}