{"version":3,"sources":["global/components/molecules/ImageTileWithTextOnTop/style.js","global/components/molecules/ImageTileWithTextOnTop/index.js","global/components/organism/CategoryCardComponent/style.js","global/components/organism/CategoryCardComponent/index.js","global/containers/common/CategoryListing/style.js","global/containers/common/CategoryListing/index.js","global/containers/common/CategoryListing/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Box/index.js","global/components/atoms/Title/Title.style.js","global/components/atoms/Title/index.js","global/utils/AspectRatios/index.js"],"names":["useStyles","makeStyles","theme","overlay","overflow","position","transition","height","backgroundColor","props","bgColor","borderBottom","stripColor","boxShadow","mixins","Black","transform","background","cardPicture","display","width","content","top","left","zIndex","cardContentWrapper","right","textAlign","padding","spacing","breakpoints","up","ImageTileWithTextOnTop","media","pictureClass","title","titleClass","titleVariant","titleComponent","count","countVariant","countClass","segmentHeading","subTitle","strip","isPriceCard","pageName","componentName","disableHover","get","classes","imgTileWrapper","useRef","imgTxtTitle","imgTxtSubTitle","imgTxtCount","useEffect","gsap","registerPlugin","ScrollTrigger","current","haveAnimatedOnce","setTimeout","timeline","scrollTrigger","trigger","start","end","window","innerHeight","scrub","once","onUpdate","self","progress","animYPlay","animYReverse","Box","onClick","obj","analyticsData","pageBodyInteraction","tileClick","label","createDynamicLabels","value","pushAnaylyticsData","addTileAnalyticsInfo","className","clsx","ref","Picture","alternateAltText","Typography","variant","component","root","cardTitle","animateSettings","selfTrigger","willAnimate","animateType","field","cardCount","defaultProps","flexGrow","down","paddingTop","heading","palette","common","ellipsis","marginBottom","pxToRem","titleTextLinkWrap","color","secondary","main","isEditor","primaryCTAWrap","paddingBottom","withSitecoreContext","withNamespaces","tileData","segmentTitle","description","primaryCTA","aspectRatio","isExperienceEditorActive","subTitleElem","titleElem","catCardComp","pause","animPlay","animReverse","renderTiles","map","index","fields","blank","isEmpty","Component","Link","Grid","item","xs","lg","key","imageTextLink","image","mobileImage","addAnalyticsInfo","arrowClick","container","alignItems","TextRotateAnimation","condition","duration","Title","text","classNameChild","wordBreak","Hidden","mdDown","implementation","Button","buttonType","srText","lgUp","shape","componentSpacing","darkGrey","marginTop","withErrorBoundary","sitecoreContext","categoryListingTitle","categoryListingDescription","categoryList","customCategoryList","length","href","data-locator","CategoryCardComponent","aspectRatios","getPageName","getComponentName","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","marginLeft","marginRight","boxSizing","flexWrap","margin","zeroMinWidth","minWidth","flexDirection","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","maxWidth","Object","assign","generateGrid","name","styleFunction","css","compose","borders","flexbox","positions","shadows","sizing","typography","styled","bottom","mobile","desktop"],"mappings":"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","file":"static/js/CategoryListing.b4a38ecd.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    overlay: {\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n      transition: 'all 1s ease',\r\n      height: '100%',\r\n      backgroundColor: props => props.bgColor,\r\n      borderBottom: props => `4px solid ${props.stripColor}`,\r\n      '& .img-to-animate-wrapper': {\r\n        transition: 'all 1s ease',\r\n      },\r\n      '&:hover': {\r\n        boxShadow: `0px 2px 20px 0px ${theme.mixins.Black(800)}`,\r\n        '& :not(.img-to-animate-wrapper) picture, & .img-to-animate-wrapper': {\r\n          transform: 'scale(1.1, 1.1)',\r\n          '&::before': {\r\n            background: theme.mixins.Black(800),\r\n          },\r\n        },\r\n      },\r\n      '&.disableHover': {\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    cardPicture: {\r\n      transition: 'all 1s ease',\r\n      display: 'block',\r\n      height: '100%',\r\n      '&::before': {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        content: \"''\",\r\n        display: 'inline',\r\n        transition: 'all 1s ease',\r\n        background: theme.mixins.Black(600),\r\n        top: '0',\r\n        left: '0',\r\n        zIndex: '10',\r\n      },\r\n    },\r\n    cardContentWrapper: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      textAlign: 'center',\r\n      zIndex: '11',\r\n      padding: `0 ${theme.spacing(4)}`,\r\n      [theme.breakpoints.up('lg')]: {\r\n        padding: `0 ${theme.spacing(7)}`,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport Picture from '../../../components/atoms/Picture';\r\nimport Box from '../Box';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport { pushAnaylyticsData } from '../../../../../src/utils/analytics';\r\nimport { analyticsData } from '../../../../../src/constants/Analytics/analytics-data';\r\nimport { createDynamicLabels } from '../../../../../src/utils/analytics';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\nimport useStyles from './style';\r\nimport { get } from 'lodash';\r\n\r\nconst ImageTileWithTextOnTop = props => {\r\n  const {\r\n    media,\r\n    pictureClass,\r\n    title,\r\n    titleClass,\r\n    titleVariant,\r\n    titleComponent,\r\n    count,\r\n    countVariant,\r\n    countClass,\r\n    segmentHeading,\r\n    subTitle,\r\n    background,\r\n    strip,\r\n    isPriceCard,\r\n    pageName,\r\n    componentName,\r\n    disableHover,\r\n  } = props;\r\n\r\n  const bgColor = get(background, 'fields.colorCode.value');\r\n  const stripColor = get(strip, 'fields.colorCode.value');\r\n\r\n  const classes = useStyles({ bgColor, stripColor });\r\n\r\n  const addTileAnalyticsInfo = () => {\r\n    const obj = {\r\n      ...analyticsData.pageBodyInteraction.tileClick,\r\n      ...{\r\n        label: createDynamicLabels([\r\n          pageName,\r\n          componentName,\r\n          `${segmentHeading && segmentHeading.value} - ${title && title.value}`,\r\n        ]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n\r\n  const imgTileWrapper = useRef(),\r\n    imgTxtTitle = useRef(),\r\n    imgTxtSubTitle = useRef(),\r\n    imgTxtCount = useRef();\r\n  useEffect(() => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    if (imgTileWrapper.current) {\r\n      let haveAnimatedOnce = false;\r\n      setTimeout(() => {\r\n        gsap.timeline({\r\n          scrollTrigger: {\r\n            trigger: imgTileWrapper.current,\r\n            start: 'top bottom',\r\n            end: `+=${window.innerHeight * 0.2}px bottom`,\r\n            scrub: true,\r\n            once: true,\r\n            onUpdate: self => {\r\n              if (self.progress > 0.5) {\r\n                imgTxtTitle && imgTxtTitle.current && imgTxtTitle.current.animYPlay();\r\n                imgTxtSubTitle && imgTxtSubTitle.current && imgTxtSubTitle.current.animYPlay();\r\n                imgTxtCount && imgTxtCount.current && imgTxtCount.current.animYPlay();\r\n                haveAnimatedOnce = true;\r\n              } else if (haveAnimatedOnce) {\r\n                imgTxtTitle && imgTxtTitle.current && imgTxtTitle.current.animYReverse();\r\n                imgTxtSubTitle && imgTxtSubTitle.current && imgTxtSubTitle.current.animYReverse();\r\n                imgTxtCount && imgTxtCount.current && imgTxtCount.current.animYReverse();\r\n              }\r\n            },\r\n          },\r\n        });\r\n      }, 2000);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      onClick={() => addTileAnalyticsInfo()}\r\n      className={clsx(classes.overlay, { disableHover: disableHover })}\r\n      ref={imgTileWrapper}\r\n    >\r\n      {!isPriceCard && media && (\r\n        <Box>\r\n          <Picture\r\n            media={media}\r\n            className={`${classes.cardPicture} ${pictureClass}`}\r\n            alternateAltText={title && title.value}\r\n          />\r\n        </Box>\r\n      )}\r\n      <Box className={classes.cardContentWrapper}>\r\n        {title && (\r\n          <Typography\r\n            variant={titleVariant}\r\n            component={titleComponent}\r\n            classes={{ root: `${classes.cardTitle} ${titleClass}` }}\r\n            ref={imgTxtTitle}\r\n            animateSettings={{\r\n              selfTrigger: false,\r\n              willAnimate: true,\r\n              animateType: 'y',\r\n            }}\r\n          >\r\n            <Text field={title} />\r\n          </Typography>\r\n        )}\r\n        {subTitle && (\r\n          <Typography\r\n            variant=\"body2Bold\"\r\n            component=\"div\"\r\n            classes={{ root: 'fare' }}\r\n            ref={imgTxtSubTitle}\r\n            animateSettings={{\r\n              selfTrigger: false,\r\n              willAnimate: true,\r\n              animateType: 'y',\r\n            }}\r\n          >\r\n            <Text field={subTitle} />\r\n          </Typography>\r\n        )}\r\n        {count && (\r\n          <Typography\r\n            variant={countVariant}\r\n            component=\"span\"\r\n            classes={{ root: `${classes.cardCount} ${countClass}` }}\r\n            ref={imgTxtCount}\r\n            animateSettings={{\r\n              selfTrigger: false,\r\n              willAnimate: true,\r\n              animateType: 'y',\r\n            }}\r\n          >\r\n            <Text field={count} />\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nImageTileWithTextOnTop.propTypes = {\r\n  media: PropTypes.shape({\r\n    image: PropTypes.shape({\r\n      value: {\r\n        src: PropTypes.string,\r\n        alt: PropTypes.string,\r\n        width: PropTypes.number,\r\n        height: PropTypes.number,\r\n      },\r\n    }),\r\n    mobileImage: PropTypes.shape({\r\n      value: {\r\n        src: PropTypes.string,\r\n        alt: PropTypes.string,\r\n        width: PropTypes.number,\r\n        height: PropTypes.number,\r\n      },\r\n    }),\r\n  }),\r\n  pictureClass: PropTypes.string,\r\n  title: PropTypes.shape({\r\n    value: '',\r\n  }).isRequired,\r\n  titleClass: PropTypes.string,\r\n  titleVariant: PropTypes.string,\r\n  titleComponent: PropTypes.string,\r\n  count: PropTypes.shape({\r\n    value: '',\r\n  }),\r\n  segmentHeading: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  countVariant: PropTypes.string,\r\n  countClass: PropTypes.string,\r\n};\r\nImageTileWithTextOnTop.defaultProps = {\r\n  pictureClass: '',\r\n  titleClass: '',\r\n  titleVariant: 'h4',\r\n  titleComponent: 'h3',\r\n  countVariant: 'body1',\r\n  countClass: '',\r\n  segmentHeading: '',\r\n};\r\n\r\nexport default ImageTileWithTextOnTop;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: '1',\r\n      '& .btnWithBorder': {\r\n        [theme.breakpoints.down('md')]: {\r\n          paddingTop: theme.spacing(3),\r\n        },\r\n      },\r\n    },\r\n    heading: {\r\n      ...theme.palette.common.ellipsis(),\r\n      marginBottom: theme.spacing(4),\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: pxToRem(910),\r\n        ...theme.palette.common.ellipsis(1),\r\n        marginBottom: ({ isPriceCard }) =>\r\n          isPriceCard ? theme.spacing(5) : theme.spacing(3),\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: '100%',\r\n      },\r\n    },\r\n    titleTextLinkWrap: {\r\n      color: `${theme.palette.secondary.main}`,\r\n      height: props => !props.isEditor && '100%',\r\n      display: 'block',\r\n    },\r\n    primaryCTAWrap: {\r\n      paddingBottom: theme.spacing(5),\r\n    },\r\n  };\r\n});\r\nexport default useStyles;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport get from 'lodash/get';\r\nimport PropTypes from 'prop-types';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport Title from '../../../components/atoms/Title';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Button from '../../../components/atoms/Button';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Link from '../../../components/atoms/Link';\r\nimport ImageTileWithTextOnTop from '../../../components/molecules/ImageTileWithTextOnTop';\r\nimport { pushAnaylyticsData } from '../../../../../src/utils/analytics';\r\nimport { analyticsData } from '../../../../../src/constants/Analytics/analytics-data';\r\nimport clsx from 'clsx';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport TextRotateAnimation from '../../../components/atoms/TextRotateAnimation';\r\n\r\nimport { createDynamicLabels } from '../../../../utils/analytics';\r\nimport useStyles from './style';\r\n\r\nconst CategoryCardComponent = ({\r\n  tileData,\r\n  segmentTitle,\r\n  segmentHeading,\r\n  description,\r\n  primaryCTA,\r\n  aspectRatio,\r\n  isPriceCard,\r\n  pageName,\r\n  componentName,\r\n  disableHover,\r\n}) => {\r\n  const isEditor = isExperienceEditorActive();\r\n\r\n  const classes = useStyles({ isEditor, isPriceCard });\r\n\r\n  const subTitleElem = useRef(null),\r\n    titleElem = useRef(null),\r\n    catCardComp = useRef(null);\r\n\r\n  useEffect(() => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n\r\n    setTimeout(() => {\r\n      const catCardCompAnim = gsap.timeline();\r\n      // catCardCompAnim.fromTo(\r\n      //   [\r\n      //     pictureElem.current,\r\n      //     rowWrapperBefore.current,\r\n      //     rowWrapperAfter.current,\r\n      //   ],\r\n      //   {\r\n      //     opacity: 0,\r\n      //     ease: 'power1.out',\r\n      //     y: '16px',\r\n      //     paused: true,\r\n      //     duration: '500ms',\r\n      //   },\r\n      //   {\r\n      //     skewY: '0deg',\r\n      //     y: '0px',\r\n      //     opacity: 1,\r\n      //   }\r\n      // );\r\n      catCardCompAnim.pause();\r\n\r\n      let haveAnimatedOnce = false;\r\n      gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: catCardComp.current,\r\n          start: 'top bottom',\r\n          end: `+=${window.innerHeight * 0.2}px bottom`,\r\n          scrub: true,\r\n          once: true,\r\n          onUpdate: self => {\r\n            if (self.progress > 0.15) {\r\n              // catCardCompAnim.play();\r\n              subTitleElem && subTitleElem.current && subTitleElem.current.animPlay();\r\n              titleElem && titleElem.current && titleElem.current.animPlay();\r\n              haveAnimatedOnce = true;\r\n            } else if (haveAnimatedOnce) {\r\n              // catCardCompAnim.reverse();\r\n              subTitleElem && subTitleElem.current && subTitleElem.current.animReverse();\r\n              titleElem && titleElem.current && titleElem.current.animReverse();\r\n            }\r\n          },\r\n        },\r\n      });\r\n    }, 100);\r\n  });\r\n\r\n  const renderTiles =\r\n    tileData &&\r\n    tileData.map(({ fields }, index) => {\r\n      const blank = isEmpty(get(fields, 'image.value', ''));\r\n      const Component = disableHover ? 'div' : Link;\r\n      return (\r\n        <Grid item xs={12} lg={4} key={index}>\r\n          <Component\r\n            field={!disableHover && fields && fields.imageTextLink}\r\n            className={clsx(\r\n              classes.titleTextLinkWrap,\r\n              isPriceCard ? 'price-card' : '',\r\n            )}\r\n          >\r\n            <ImageTileWithTextOnTop\r\n              title={fields && fields.title}\r\n              segmentHeading={segmentHeading}\r\n              subTitle={fields && fields.subTitle}\r\n              titleClass={isPriceCard ? 'price-card-title' : ''}\r\n              titleVariant={isPriceCard ? 'cardTitle1' : 'h5Bold'}\r\n              background={fields.backgroundColor}\r\n              strip={isPriceCard ? fields.stripColor : {}}\r\n              isPriceCard={isPriceCard}\r\n              media={\r\n                !blank\r\n                  ? {\r\n                    image: fields && fields.image,\r\n                    mobileImage: fields && fields.mobileImage,\r\n                    aspectRatio,\r\n                  }\r\n                  : ''\r\n              }\r\n              pageName={pageName}\r\n              componentName={componentName}\r\n              disableHover={disableHover}\r\n            />\r\n          </Component>\r\n        </Grid>\r\n      );\r\n    });\r\n  const addAnalyticsInfo = () => {\r\n    const obj = {\r\n      ...analyticsData.pageBodyInteraction.arrowClick,\r\n      ...{\r\n        label: createDynamicLabels([pageName, componentName, `${segmentHeading && segmentHeading.value} - ${get(\r\n          primaryCTA,\r\n          'value.text'\r\n        )}`]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n  return (\r\n    <Grid className={classes.root} ref={catCardComp}>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        classes={{ root: `${classes.root}` }}\r\n        alignItems=\"center\"\r\n      >\r\n        {segmentTitle && (\r\n          <Grid item xs={12} className='segment-title'>\r\n            <TextRotateAnimation\r\n              condition={true}\r\n              animateSettings={{\r\n                willAnimate: true,\r\n                selfTrigger: true,\r\n                duration: '250ms',\r\n              }}\r\n              ref={subTitleElem}\r\n            >\r\n              <Title text={segmentTitle} />\r\n            </TextRotateAnimation>\r\n          </Grid>\r\n        )}\r\n        {segmentHeading && (\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant={isPriceCard ? 'h4' : 'h2'}\r\n              component=\"h2\"\r\n              classNameChild={clsx(classes.heading, 'heading')}\r\n              wordBreak\r\n              ref={titleElem}\r\n              animateSettings={{\r\n                willAnimate: true,\r\n                selfTrigger: true,\r\n              }}\r\n            >\r\n              <Text field={segmentHeading} />\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        {description && (\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              classes={{ root: 'listingDescription' }}\r\n            >\r\n              <Text field={description} />\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={0}>\r\n            {primaryCTA && (\r\n              <Hidden mdDown implementation=\"css\">\r\n                <Grid item xs={12} className={classes.primaryCTAWrap}>\r\n                  <Button\r\n                    onClick={() => addAnalyticsInfo()}\r\n                    component=\"div\"\r\n                    buttonType=\"primary\"\r\n                    field={primaryCTA}\r\n                    srText={get(primaryCTA, 'value.text', '')}\r\n                  />\r\n                </Grid>\r\n              </Hidden>\r\n            )}\r\n            {tileData && (\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  {renderTiles}\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {primaryCTA && (\r\n              <Hidden lgUp implementation=\"css\">\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    onClick={() => addAnalyticsInfo()}\r\n                    component=\"div\"\r\n                    buttonType=\"primary\"\r\n                    field={primaryCTA}\r\n                    srText={get(primaryCTA, 'value.text', '')}\r\n                  />\r\n                </Grid>\r\n              </Hidden>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCategoryCardComponent.propTypes = {\r\n  tileData: PropTypes.array,\r\n  segmentTitle: PropTypes.shape({\r\n    value: PropTypes.string,\r\n  }),\r\n  segmentHeading: PropTypes.shape({\r\n    value: PropTypes.string,\r\n  }),\r\n  primaryCTA: PropTypes.oneOfType([PropTypes.shape({\r\n    href: PropTypes.string,\r\n    text: PropTypes.string,\r\n    anchor: PropTypes.string,\r\n    linktype: PropTypes.string,\r\n    class: PropTypes.string,\r\n    title: PropTypes.string,\r\n    querystring: PropTypes.string,\r\n  }), PropTypes.string]),\r\n  aspectRatio: PropTypes.shape({\r\n    mobile: PropTypes.string,\r\n    desktop: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default withSitecoreContext()(withNamespaces()(CategoryCardComponent));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      ...theme.shape.componentSpacing,\r\n      '& .heading': {\r\n        [theme.breakpoints.up('lg')]: {\r\n          marginBottom: theme.spacing(5),\r\n        },\r\n      },\r\n      '& .listingDescription': {\r\n        color: theme.palette.text.darkGrey,\r\n        marginBottom: theme.spacing(3),\r\n        [theme.breakpoints.down('md')]: {\r\n          marginTop: theme.spacing(-2),\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport CategoryCardComponent from '../../../components/organism/CategoryCardComponent/';\r\nimport useStyles from './style';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport get from 'lodash/get';\r\nimport aspectRatios from '../../../utils/AspectRatios';\r\nimport {\r\n  getPageName,\r\n  getComponentName,\r\n} from '../../../utils/getPageComponentInfo';\r\n\r\nconst CategoryListing = props => {\r\n  const { fields, sitecoreContext } = props;\r\n  const classes = useStyles();\r\n  const categoryListingTitle = get(\r\n    sitecoreContext,\r\n    'route.fields.categoryListingTitle',\r\n    ''\r\n  );\r\n  const categoryListingDescription = get(\r\n    sitecoreContext,\r\n    'route.fields.categoryListingDescription',\r\n    ''\r\n  );\r\n  //For running this component locally, use mockJSON file to import the props.\r\n\r\n  const { categoryList } = fields;\r\n\r\n  const customCategoryList =\r\n    categoryList &&\r\n    categoryList.length > 0 &&\r\n    categoryList.map(item => {\r\n      return {\r\n        fields: {\r\n          title: {\r\n            value: item.title,\r\n          },\r\n          imageTextLink: {\r\n            value: {\r\n              href: item.imageTextLink,\r\n            },\r\n          },\r\n          image: { ...item.image },\r\n          mobileImage: { ...item.mobileImage },\r\n        },\r\n      };\r\n    });\r\n\r\n  return !isEmpty(fields) ? (\r\n    <div className={classes.root} data-locator={COMPONENT_NAME}>\r\n      <CategoryCardComponent\r\n        tileData={customCategoryList}\r\n        description={categoryListingDescription}\r\n        segmentHeading={categoryListingTitle}\r\n        aspectRatio={aspectRatios['2x1']}\r\n        pageName={getPageName(props)}\r\n        componentName={getComponentName(props)}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(CategoryListing))\r\n);\r\n","export const COMPONENT_NAME = 'CategoryListing';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import {\r\n  borders,\r\n  compose,\r\n  display,\r\n  flexbox,\r\n  palette,\r\n  positions,\r\n  shadows,\r\n  sizing,\r\n  spacing,\r\n  typography,\r\n  css,\r\n} from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\n\r\nexport const styleFunction = css(\r\n  compose(\r\n    borders,\r\n    display,\r\n    flexbox,\r\n    positions,\r\n    palette,\r\n    shadows,\r\n    sizing,\r\n    spacing,\r\n    typography\r\n  )\r\n);\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst Box = styled('div')(styleFunction, { name: 'MuiBox' });\r\n\r\nexport default Box;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '&.MuiTypography-root': {\r\n      paddingBottom: theme.spacing(1),\r\n      position: 'relative',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      width: theme.spacing(3),\r\n      height: '1px',\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      ...theme.mixins.left(0),\r\n      backgroundColor: theme.mixins.Black(),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\n\r\nimport Typography from '../Typography';\r\nimport useStyles from './Title.style';\r\n\r\nconst Title = props => {\r\n  const { text, className, variant } = props;\r\n  const classes = useStyles();\r\n\r\n  return text && text.value ? (\r\n    <Typography\r\n      variant={variant}\r\n      component=\"div\"\r\n      classes={{\r\n        root: `${classes.root} ${className}`,\r\n      }}\r\n    >\r\n      <Text field={text} />\r\n    </Typography>\r\n  ) : null;\r\n};\r\n\r\nTitle.propTypes = {\r\n  variant: PropTypes.string,\r\n  text: PropTypes.shape({\r\n    value: '',\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nTitle.defaultProps = {\r\n  className: '',\r\n  variant: 'body2',\r\n};\r\n\r\nexport default Title;\r\n","const aspectRatios = {\r\n  '1x1': {\r\n    mobile: '1x1',\r\n    desktop: '1x1',\r\n  },\r\n  '2x1': {\r\n    mobile: '2x1',\r\n    desktop: '2x1',\r\n  },\r\n  '3x2': {\r\n    mobile: '3x2',\r\n    desktop: '3x2',\r\n  },\r\n  '3x2-m': {\r\n    mobile: '3x2-m',\r\n    desktop: '3x2-m',\r\n  },\r\n  '3x2-card': {\r\n    mobile: '3x2-card',\r\n    desktop: '3x2-card',\r\n  },\r\n  '4x5': {\r\n    mobile: '4x5',\r\n    desktop: '4x5',\r\n  },\r\n  '4x5-m': {\r\n    mobile: '4x5-m',\r\n    desktop: '4x5-m',\r\n  },\r\n  '16x9': {\r\n    mobile: '16x9',\r\n    desktop: '16x9',\r\n  },\r\n  '16x9-m': {\r\n    mobile: '16x9-m',\r\n    desktop: '16x9-m',\r\n  },\r\n  '16x6': {\r\n    mobile: '16x9',\r\n    desktop: '16x6',\r\n  },\r\n};\r\n\r\nexport default aspectRatios;\r\n"],"sourceRoot":""}