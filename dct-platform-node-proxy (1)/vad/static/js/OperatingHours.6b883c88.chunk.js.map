{"version":3,"sources":["global/utils/checkForPropsValue.js","global/containers/common/OperatingHours/style.js","global/containers/common/OperatingHours/index.js","global/containers/common/OperatingHours/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/utils/getDictionaryText.js","utils/urls.js"],"names":["checkForPropsValue","componentField","pageLevelField","dictionaryField","value","length","useStyles","makeStyles","theme","root","shape","componentSpacing","content","display","flexWrap","alignItems","marginTop","spacing","breakpoints","up","mixins","marginLeft","backgroundColor","padding","color","palette","text","primary","height","width","table","Grey","borderRadius","pxToRem","tableBody","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","iconButton","cursor","gridContainer","flexDirection","HtmlTooltip","withStyles","tooltipBorder","tooltip","maxWidth","overflow","border","borderColor","background","default","popperArrow","borderLeft","borderTop","marginBottom","White","borderRight","between","Tooltip","withErrorBoundary","withSitecoreContext","withNamespaces","props","heading","getDictionaryText","operatingHours_days","operatingHours_time","placeId","get","language","classes","appConfig","useState","isIconVisible","tooltipMenuItems","openingObj","setOpeningObj","useEffect","queryParam","canUseDOM","fetchService","url","modifyApi","GOOGLE_PLACES_API","then","response","data","handleResponseData","result","catch","err","console","error","React","open","setOpen","handleTooltipClose","res","weekDaysHours","currentDay","Date","getDay","slice","business_status","openingHoursText","opening_hours","open_now","operationalStatus","substring","indexOf","toLocaleLowerCase","split","firstText","remainingText","NoSsr","Grid","className","data-locator","container","item","Typography","variant","component","ClickAwayListener","onClickAway","onClose","disableHoverListener","disableTouchListener","placement","arrow","title","Fragment","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","i","first","rest","join","key","getDaysInTable","onClick","name","aria-label","INFO_ICON_TEXT","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","marginRight","boxSizing","margin","zeroMinWidth","minWidth","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","reduce","accumulator","globalStyles","Math","round","flexBasis","flexGrow","Object","assign","generateGrid","fieldName","i18next","t","getAppConfig","urlString","paramobj","apiPath"],"mappings":"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","file":"static/js/OperatingHours.6b883c88.chunk.js","sourcesContent":["const checkForPropsValue = (\r\n  componentField,\r\n  pageLevelField,\r\n  dictionaryField\r\n) => {\r\n  if (componentField && componentField.value && componentField.value.length) {\r\n    return componentField;\r\n  } else if (pageLevelField && pageLevelField.value && pageLevelField.value.length) {\r\n    return pageLevelField;\r\n  }\r\n  return dictionaryField;\r\n};\r\n\r\nexport default checkForPropsValue;","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: theme.spacing(1),\r\n      ...theme.mixins.marginLeft(theme.spacing(5)),\r\n    },\r\n    '& .MuiIconButton-root:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '& .MuiIconButton-root': {\r\n      padding: 0,\r\n      ...theme.mixins.marginLeft(theme.spacing(1.5)),\r\n      [theme.breakpoints.up('lg')]: {\r\n        ...theme.mixins.marginLeft(theme.spacing(3)),\r\n      },\r\n      '& svg': {\r\n        color: theme.palette.text.primary,\r\n        height: theme.spacing(3.5),\r\n        width: theme.spacing(3.5),\r\n      },\r\n    },\r\n  },\r\n  table: {\r\n    '& .header': {\r\n      backgroundColor: theme.mixins.Grey(60),\r\n\r\n      '& th': {\r\n        padding: `${theme.spacing(1.5)} ${theme.spacing(3)}`,\r\n        '&:first-child': {\r\n          borderRadius: `${pxToRem(3)} 0 0 0`,\r\n        },\r\n        '&:last-child': {\r\n          borderRadius: `0 ${pxToRem(3)} 0 0`,\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n          padding: `${theme.spacing(3)} ${theme.spacing(5)}`,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  tableBody: {\r\n    '& .MuiTableCell-root': {\r\n      borderBottom: 0,\r\n    },\r\n    '& td, & td:last-child': {\r\n      padding: `${theme.spacing(2.5)} ${theme.spacing(3)}`,\r\n      [theme.breakpoints.up('lg')]: {\r\n        paddingLeft: `${theme.spacing(5)}`,\r\n        paddingRight: `${theme.spacing(5)}`,\r\n      },\r\n    },\r\n    '& tr:first-child td': {\r\n      paddingTop: theme.spacing(2.5),\r\n      [theme.breakpoints.up('lg')]: {\r\n        paddingTop: theme.spacing(5),\r\n      },\r\n    },\r\n    '& tr:last-child td': {\r\n      paddingBottom: theme.spacing(2.5),\r\n      [theme.breakpoints.up('lg')]: {\r\n        paddingBottom: theme.spacing(5),\r\n      },\r\n    },\r\n  },\r\n  iconButton: {\r\n    cursor: 'pointer',\r\n    ...theme.mixins.marginLeft(theme.spacing(1.5)),\r\n    [theme.breakpoints.up('lg')]: {\r\n      ...theme.mixins.marginLeft(theme.spacing(3)),\r\n    },\r\n    '& svg': {\r\n      color: theme.palette.text.primary,\r\n      height: theme.spacing(3.5),\r\n      width: theme.spacing(3.5),\r\n    },\r\n  },\r\n  gridContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport useStyles from './style';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport fetchService from '../../../../services/FetchService';\r\nimport { modifyApi } from '../../../../utils/urls';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import Button from '../../../components/atoms/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { canUseDOM } from '../../../utils/canUseDOM';\r\nimport DctSvgIcon from '../../../components/atoms/Svg';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\nimport get from 'lodash/get';\r\nimport checkForPropsValue from '../../../utils/checkForPropsValue';\r\nimport { getDictionaryText } from '../../../utils/getDictionaryText';\r\nimport { INFO_ICON_TEXT } from '../../../../constants';\r\nimport { NoSsr } from '@material-ui/core';\r\n\r\nconst HtmlTooltip = withStyles(theme => {\r\n  const tooltipBorder = `${pxToRem(1)} solid ${theme.mixins.Grey(200)}`;\r\n\r\n  return {\r\n    tooltip: {\r\n      backgroundColor: 'transparent',\r\n      maxWidth: 'none',\r\n      '& .MuiTableContainer-root': {\r\n        overflow: 'hidden',\r\n        border: tooltipBorder,\r\n      },\r\n      '& .MuiTableCell-root': {\r\n        borderColor: theme.mixins.Grey(200),\r\n      },\r\n      '& .MuiTooltip-arrow': {\r\n        width: pxToRem(34),\r\n        height: pxToRem(24),\r\n        color: theme.palette.background.default,\r\n      },\r\n      '&.MuiTooltip-touch': {\r\n        padding: `${pxToRem(4)} ${pxToRem(8)}`,\r\n      },\r\n    },\r\n\r\n    popperArrow: {\r\n      '&[x-placement*=\"bottom\"] .MuiTooltip-arrow': {\r\n        marginTop: pxToRem(-19),\r\n        '&:before': {\r\n          borderLeft: tooltipBorder,\r\n          borderTop: tooltipBorder,\r\n        },\r\n      },\r\n      '&[x-placement*=\"top\"] .MuiTooltip-arrow': {\r\n        marginBottom: pxToRem(-19),\r\n        color: theme.mixins.White(),\r\n        '&:before': {\r\n          borderBottom: tooltipBorder,\r\n          borderRight: tooltipBorder,\r\n        },\r\n      },\r\n      [theme.breakpoints.between('lg', 1439)]: {\r\n        '&[x-placement*=\"bottom\"] .MuiTooltip-arrow': {\r\n          marginTop: `${pxToRem(-18)} !important`,\r\n        },\r\n        '&[x-placement*=\"top\"] .MuiTooltip-arrow': {\r\n          marginBottom: `${pxToRem(-18)} !important`,\r\n        },\r\n      },\r\n    },\r\n  };\r\n})(Tooltip);\r\n\r\nconst OperatingHours = props => {\r\n  // const heading = checkForPropsValue(\r\n  //   get(props, 'fields.operatingHoursHeading', ''),\r\n  //   get(props, 'sitecoreContext.route.fields.operatingHoursHeading', '')\r\n  // );\r\n  let heading = getDictionaryText('OperatingHoursHeading');\r\n  let operatingHours_days = getDictionaryText('operatingHours_days');\r\n  let operatingHours_time = getDictionaryText('operatingHours_time');\r\n  let placeId = get(props, 'sitecoreContext.route.fields.googlePlaceId', '');\r\n  let language = get(props, 'sitecoreContext.language');\r\n  const classes = useStyles();\r\n  const { appConfig = {} } = props;\r\n\r\n  const [openingObj, setOpeningObj] = useState({\r\n    isIconVisible: true,\r\n    text: '',\r\n    tooltipMenuItems: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    heading = getDictionaryText('OperatingHoursHeading');\r\n    operatingHours_days = getDictionaryText('operatingHours_days');\r\n    operatingHours_time = getDictionaryText('operatingHours_time');\r\n\r\n    placeId = get(props, 'sitecoreContext.route.fields.googlePlaceId', '');\r\n    language = get(props, 'sitecoreContext.language');\r\n    const queryParam = language ? `?language=${language}` : '';\r\n    if (canUseDOM && placeId) {\r\n      fetchService({\r\n        url: modifyApi(appConfig.GOOGLE_PLACES_API, {\r\n          placeId: `${placeId.value}${queryParam}`,\r\n        }),\r\n      })\r\n        .then(response => {\r\n          const { data } = response;\r\n          handleResponseData(data && data.result);\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [\r\n    get(props, 'sitecoreContext.route.fields.googlePlaceId', ''),\r\n    get(props, 'sitecoreContext.language'),\r\n  ]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleTooltipClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTooltipOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleResponseData = res => {\r\n    let weekDaysHours = get(res, 'opening_hours.weekday_text');\r\n    if (get(res, 'business_status') || weekDaysHours) {\r\n      let currentDay = new Date().getDay();\r\n      weekDaysHours = weekDaysHours && [\r\n        ...weekDaysHours.slice(currentDay - 1, 7),\r\n        ...weekDaysHours.slice(0, currentDay - 1),\r\n      ];\r\n\r\n      const business_status =\r\n        res.business_status === 'CLOSED_TEMPORARILY'\r\n          ? getDictionaryText('closedTemporarily')\r\n          : res.business_status === 'CLOSED_PERMANENTLY'\r\n            ? getDictionaryText('closedPermanently')\r\n            : '';\r\n\r\n      const openingHoursText =\r\n        res.opening_hours && res.opening_hours.open_now\r\n          ? getDictionaryText('openNow')\r\n          : getDictionaryText('closedNow');\r\n\r\n      const operationalStatus =\r\n        openingHoursText === getDictionaryText('openNow')\r\n          ? `${openingHoursText} | ${weekDaysHours &&\r\n          weekDaysHours[0]\r\n            .substring(weekDaysHours[0].indexOf(' '))\r\n            .toLocaleLowerCase()}`\r\n          : `${openingHoursText} |`;\r\n\r\n      setOpeningObj({\r\n        isIconVisible: !business_status,\r\n        text: business_status === '' ? operationalStatus : business_status,\r\n        tooltipMenuItems: weekDaysHours,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getDaysInTable = (item, i) => {\r\n    let [first, ...rest] = item.split(':');\r\n    rest = rest.join(':');\r\n    return (\r\n      <TableRow key={`week-item-${i}`}>\r\n        <TableCell align=\"left\">\r\n          <Typography variant={i === 0 ? 'body1Bold' : 'body1'} component=\"p\">\r\n            {first}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          <Typography variant={i === 0 ? 'body1Bold' : 'body1'} component=\"p\">\r\n            {rest}\r\n          </Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  const { text, tooltipMenuItems, isIconVisible } = openingObj || {};\r\n  const [firstText, ...remainingText] = text && text.split('|');\r\n  if (openingObj && text && (!isIconVisible || tooltipMenuItems)) {\r\n    return (\r\n      <NoSsr>\r\n        <Grid className={classes.root} data-locator={COMPONENT_NAME}>\r\n          <Grid container alignItems=\"center\" className={classes.gridContainer}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                {heading}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item className={classes.content}>\r\n              <Typography variant=\"body1Bold\" component=\"p\">\r\n                <span className=\"operationStatus\">{firstText}</span>\r\n                {openingObj.isIconVisible && (\r\n                  <span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                )}\r\n                {remainingText}\r\n              </Typography>\r\n              {openingObj.isIconVisible && (\r\n                <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                  <div>\r\n                    <HtmlTooltip\r\n                      onClose={handleTooltipClose}\r\n                      open={open}\r\n                      disableHoverListener\r\n                      disableTouchListener\r\n                      placement=\"top\"\r\n                      arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <TableContainer component={Paper}>\r\n                            <Table size=\"small\" className={classes.table}>\r\n                              <TableHead className=\"header current\">\r\n                                <TableRow>\r\n                                  <TableCell align=\"left\">\r\n                                    <Typography variant=\"body1Bold\" component=\"p\">\r\n                                      {operatingHours_days}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                    <Typography variant=\"body1Bold\" component=\"p\">\r\n                                      {operatingHours_time}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody className={classes.tableBody}>\r\n                                {tooltipMenuItems.map((item, i) =>\r\n                                  getDaysInTable(item, i)\r\n                                )}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                        </React.Fragment>\r\n                      }\r\n                    >\r\n                      <div\r\n                        className={classes.iconButton}\r\n                        onClick={handleTooltipOpen}\r\n                      >\r\n                        <DctSvgIcon\r\n                          name=\"InfoOutlinedIcon\"\r\n                          aria-label={INFO_ICON_TEXT}\r\n                        />\r\n                      </div>\r\n                    </HtmlTooltip>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </NoSsr>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(OperatingHours))\r\n);\r\n","export const COMPONENT_NAME = 'OperatingHours';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import i18next from 'i18next';\r\nexport const getDictionaryText = fieldName => {\r\n  return i18next.t && i18next.t(fieldName) || '';\r\n}","import getAppConfig from '../global/utils/getAppConfig';\r\n\r\nconst config = getAppConfig();\r\nconst urls = {};\r\n\r\nexport default urls;\r\n\r\nexport const getFieldType = fieldUrl => {\r\n  return fieldUrl && fieldUrl.substring(fieldUrl.lastIndexOf('/') + 1);\r\n};\r\nexport const generatelayoutServicePath = (item, lang) => {\r\n  return `${config.sitecoreApiHost}/sitecore/api/layout/render/jss?item=${item}&sc_lang=${lang}&sc_apikey=${config.sitecoreApiKey}`;\r\n};\r\n\r\n//Used for modying API static values with dynamic ones\r\n// urlString- > 'trip-adviser/v1/api/partner/2.0/location/{location}?lang={language}`,\r\n//paramObj = { location: '1234',language: 'en'}\r\n//O/P -> 'trip-adviser/v1/api/partner/2.0/location/1234?lang='en'`,\r\nexport const modifyApi = (urlString, paramobj) => {\r\n  let apiPath = urlString;\r\n  if (paramobj) {\r\n    for (let key in paramobj) {\r\n      apiPath = apiPath.replace(`{${key}}`, paramobj[key]);\r\n    }\r\n  }\r\n  return apiPath;\r\n};\r\nexport const parseQueryParams = pathname => {\r\n  const search = pathname.split('?')[1];\r\n  if (search) {\r\n    const queryList = search.split('&');\r\n    return queryList.reduce((accu, curr) => {\r\n      const [key, value] = curr.split('=');\r\n      return { ...accu, [key]: value.split('#')[0] };\r\n    }, {});\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const getUrlParam = param => {\r\n  if (typeof window === 'undefined') return '';\r\n  const params = new URL(window.location).searchParams;\r\n  return params.get(param);\r\n};\r\n\r\nexport const createUrlSearchParams = (query = {}, urlEncoded = false) => {\r\n  const queryParams = [];\r\n  const keys = Object.keys(query);\r\n  for (let i = 0, l = keys.length; i < l; i += 1) {\r\n    const qs = `${query[keys[i]]}`;\r\n    const qsencoded = urlEncoded ? encodeURIComponent(qs) : qs;\r\n    queryParams.push(`${keys[i]}=${qsencoded}`);\r\n  }\r\n  return queryParams.join('&');\r\n};\r\n\r\nexport const buildUrl = options => {\r\n  if (typeof options === 'object') {\r\n    const { pathname, query, urlEncoded } = options;\r\n    let url = pathname;\r\n    if (typeof query === 'object') {\r\n      url += `?${createUrlSearchParams(query, urlEncoded)}`;\r\n    }\r\n    return url;\r\n  }\r\n  return options;\r\n};\r\n"],"sourceRoot":""}