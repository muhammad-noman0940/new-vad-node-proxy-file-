{"version":3,"sources":["global/containers/common/EditorialText/style.js","global/containers/common/EditorialText/index.js","global/containers/common/EditorialText/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Container/index.js","global/components/molecules/Container/Container.style.js","global/utils/decodeHTML/index.js","global/components/atoms/RichText/style.js","global/components/atoms/RichText/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["useStyles","makeStyles","theme","root","shape","componentSpacing","EditorialText","props","description","get","classes","value","Container","data-locator","className","Grid","Typography","component","variant","RichText","innerHTML","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","marginLeft","spacing","marginRight","breakpoints","up","container","boxSizing","display","flexWrap","width","item","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","Object","assign","generateGrid","name","React","forwardRef","ref","Component","fixed","useContainer","overflowHidden","other","clsx","capitalize","children","paddingLeft","paddingRight","values","acc","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","overflow","decodeHTML","encodedHTML","richTextWrap","typography","h1","marginTop","pxToRem","marginBottom","h2","h3","h4","h5","body1Regular","body1","color","palette","text","darkGrey","common","AbuDhabiRed","fontFamily","primaryBold","isEditor","isExperienceEditorActive","htmlWithoutStyle","field","dangerouslySetInnerHTML","__html","arguments","length","undefined","concat","_props$alignContent","_props$alignItems","classNameProp","_props$component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","_objectWithoutProperties","_extends"],"mappings":"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","file":"static/js/EditorialText.66068e07.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\n\r\nimport RichText from '../../../components/atoms/RichText';\r\nimport Container from '../../../components/molecules/Container';\r\nimport Grid from '../../../components/molecules/Grid';\r\n\r\nimport * as locators from './locators';\r\nimport useStyles from './style';\r\nimport Typography from '../../../components/atoms/Typography';\r\n\r\nconst EditorialText = props => {\r\n  const description = get(props, 'fields.description', '');\r\n  const classes = useStyles();\r\n  return description && description.value ? (\r\n    <Container data-locator={locators.COMPONENT_NAME} className={classes.root}>\r\n      <Grid>\r\n        <Typography component=\"div\" variant=\"body1\">\r\n          <RichText innerHTML={description} />\r\n        </Typography>\r\n      </Grid>\r\n    </Container>\r\n  ) : null;\r\n};\r\n\r\nexport default EditorialText;\r\n","export const COMPONENT_NAME = 'EditorialText';","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport capitalize from '@material-ui/core/utils/capitalize';\r\nimport { styles } from './Container.style';\r\n\r\nconst Container = React.forwardRef(function Container(props, ref) {\r\n  const {\r\n    classes,\r\n    className = '',\r\n    component: Component = 'div',\r\n    fixed = false,\r\n    maxWidth = 'xl',\r\n    useContainer = true,\r\n    overflowHidden = false,\r\n    ...other\r\n  } = props;\r\n\r\n  const container = (\r\n    <Component\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.fixed]: fixed,\r\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]:\r\n            maxWidth !== false,\r\n        },\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...other}\r\n    />\r\n  );\r\n\r\n  if (!useContainer) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.overflowHidden]: overflowHidden,\r\n      })}\r\n    >\r\n      {container}\r\n    </section>\r\n  );\r\n});\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Set the max-width to match the min-width of the current breakpoint.\r\n   * This is useful if you'd prefer to design for a fixed set of sizes\r\n   * instead of trying to accommodate a fully fluid viewport.\r\n   * It's fluid by default.\r\n   */\r\n  fixed: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the container.\r\n   * The container width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\r\n\r\n  useContainer: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\r\n","export const styles = theme => {\r\n  const paddings = {};\r\n\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      width: '100%',\r\n      marginLeft: 'auto',\r\n      boxSizing: 'border-box',\r\n      marginRight: 'auto',\r\n      paddingLeft: '0',\r\n      paddingRight: '0',\r\n    },\r\n    ...paddings,\r\n    /* Styles applied to the root element if `fixed={true}`. */\r\n    fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\r\n      const value = theme.breakpoints.values[breakpoint];\r\n\r\n      if (value !== 0) {\r\n        acc[theme.breakpoints.up(breakpoint)] = {\r\n          maxWidth: value,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {}),\r\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\r\n    maxWidthXs: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\r\n    maxWidthSm: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: theme.breakpoints.values.sm,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\r\n    maxWidthMd: {\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: theme.breakpoints.values.md,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\r\n    maxWidthLg: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\r\n    maxWidthXl: {\r\n      [theme.breakpoints.up('xl')]: {\r\n        // maxWidth: theme.breakpoints.values.xl,\r\n        maxWidth: '100%',\r\n      },\r\n    },\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n  };\r\n};\r\n","/* \r\n    This method remove \"\\\" from html string\r\n    Accept params: encoded html\r\n    Return: decode html\r\n*/\r\nexport const decodeHTML = encodedHTML => encodedHTML.replace(/\\\\/g, '');\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\nconst useStyles = makeStyles(theme => ({\r\n  richTextWrap: {\r\n    '& h1': {\r\n      ...theme.typography.h1,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h2,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h3,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h4,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.h5,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& h6': {\r\n      ...theme.typography.body1Regular,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& p': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.text.darkGrey,\r\n      margin: `0 0 ${theme.spacing(2)}`,\r\n    },\r\n    '& ul': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& ol': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& a': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.common.AbuDhabiRed,\r\n    },\r\n    '& strong, & b': {\r\n      fontFamily: theme.typography.fontFamily.primaryBold,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { decodeHTML } from '../../../utils/decodeHTML';\r\nimport { RichText as RichTextSitecore } from '@sitecore-jss/sitecore-jss-react';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport clsx from 'clsx';\r\nimport useStyles from './style';\r\n\r\nconst RichText = ({ innerHTML, className }) => {\r\n  const classes = useStyles();\r\n  const isEditor = isExperienceEditorActive();\r\n  const htmlWithoutStyle =\r\n    innerHTML &&\r\n    innerHTML.value &&\r\n    innerHTML.value.replace(/\\s*style=([\"'])(.*?)\\1/g, '');\r\n\r\n  if (isEditor) {\r\n    return (\r\n      <RichTextSitecore\r\n        className={clsx(\r\n          classes.richTextWrap,\r\n          className ? className : '',\r\n          'richText',\r\n          'richTextSitecore'\r\n        )}\r\n        field={innerHTML}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (innerHTML && innerHTML.value) {\r\n    return (\r\n      <div\r\n        className={`${classes.richTextWrap} ${\r\n          className ? className : ''\r\n        } richText`}\r\n        dangerouslySetInnerHTML={{\r\n          __html: decodeHTML(htmlWithoutStyle),\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default RichText;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}