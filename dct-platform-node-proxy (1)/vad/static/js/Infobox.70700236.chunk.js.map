{"version":3,"sources":["global/containers/common/Infobox/style.js","global/containers/common/Infobox/index.js","global/containers/common/Infobox/locators.js","global/containers/common/Infobox/constants.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Box/index.js","global/components/atoms/Title/Title.style.js","global/components/atoms/Title/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["useStyles","makeStyles","theme","root","position","overflow","marginTop","pxToRem","marginBottom","breakpoints","down","paddingTop","paddingBottom","padding","display","top","pointerEvents","width","height","backgroundColor","props","get","palette","common","SeashellWhite","zIndex","mixins","right","left","maxWidth","paddingLeft","fontSize","lineHeight","borderBottom","borders","divider","transform","translateX","actionBlock","marginRight","up","withErrorBoundary","withSitecoreContext","withNamespaces","fields","segmentText","title","image","contentType","toLowerCase","componentList","componentLength","length","lastComponentObject","lastComponent","componentName","getComponentName","classes","totalLinks","Object","keys","filter","propertyName","indexOf","ctaElements","arr","i","push","links","showImage","value","src","infoBox","useRef","pictureElem","rowWrapperBefore","rowWrapperAfter","useEffect","gsap","registerPlugin","ScrollTrigger","setTimeout","infoBoxAnimation","timeline","infoBoxElementsToAnim","current","fromTo","opacity","ease","y","paused","duration","skewY","pause","haveAnimatedOnce","scrollTrigger","trigger","start","end","window","innerHeight","scrub","once","onUpdate","self","progress","play","reverse","className","data-locator","ref","Grid","container","alignItems","spacing","item","xs","sm","md","lg","xl","pictureWrap","Picture","media","disableLazyLoad","isParalax","TextRotateAnimation","condition","animateSettings","willAnimate","selfTrigger","Title","text","Typography","variant","component","gutterBottom","border","field","Box","map","key","Button","onClick","obj","analyticsData","pageBodyInteraction","arrowClick","label","createDynamicLabels","getPageName","pushAnaylyticsData","addAnalyticsInfo","buttonInfoBox","buttonType","hasBorder","themeColor","EVENTS_THEME_COLOR","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","marginLeft","boxSizing","flexWrap","margin","zeroMinWidth","minWidth","flexDirection","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","assign","generateGrid","name","styleFunction","css","compose","flexbox","positions","shadows","sizing","typography","styled","content","bottom","Black","defaultProps","arguments","undefined","concat","React","_props$alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","_props$xs","_props$zeroMinWidth","other","_objectWithoutProperties","clsx","_extends"],"mappings":"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","file":"static/js/Infobox.70700236.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { get } from 'lodash';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\n// TODO: Use react-truncate package when available\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    marginTop: pxToRem(78),\r\n    marginBottom: pxToRem(78),\r\n    [theme.breakpoints.down('md')]: {\r\n      marginTop: pxToRem(48),\r\n      marginBottom: pxToRem(48),\r\n    },\r\n    '& .rowWrapper': {\r\n      paddingTop: pxToRem(69),\r\n      paddingBottom: pxToRem(69),\r\n      position: 'relative',\r\n      [theme.breakpoints.down('md')]: {\r\n        padding: pxToRem(0),\r\n        marginTop: pxToRem(0),\r\n        marginBottom: pxToRem(0),\r\n      },\r\n      '& .rowWrapper-before, & .rowWrapper-after': {\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: pxToRem(0),\r\n        pointerEvents: 'none',\r\n        width: '100vw',\r\n        height: '100%',\r\n        backgroundColor: props =>\r\n          get(\r\n            props,\r\n            'fields.backgroundColor.fields.colorCode.value',\r\n            theme.palette.common.SeashellWhite\r\n          ) === '' ? theme.palette.common.SeashellWhite : get(\r\n            props,\r\n            'fields.backgroundColor.fields.colorCode.value',\r\n            theme.palette.common.SeashellWhite\r\n          ),\r\n        zIndex: -1,\r\n      },\r\n      '& .rowWrapper-before': {\r\n        ...theme.mixins.right(`calc(66.66% + ${pxToRem(100)})`),\r\n        [theme.breakpoints.down('md')]: {\r\n          ...theme.mixins.right(pxToRem(-12)),\r\n          top: pxToRem(77),\r\n        },\r\n      },\r\n      '& .rowWrapper-after': {\r\n        ...theme.mixins.left('100%'),\r\n        [theme.breakpoints.down('lg')]: {\r\n          ...theme.mixins.left(`calc(100% + ${pxToRem(15)})`),\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n    '& .imageWrapper': {\r\n      // height: pxToRem(174),\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n      // [theme.breakpoints.up('lg')]: {\r\n      //   height: pxToRem(244),\r\n      // },\r\n      [theme.breakpoints.down('md')]: {\r\n        marginBottom: pxToRem(20),\r\n      },\r\n    },\r\n    '& .display-picture': {\r\n      position: 'relative',\r\n      '& img': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '& .txt-wrap': {\r\n      maxWidth: pxToRem(664),\r\n      position: 'relative',\r\n      ...theme.mixins.paddingLeft(pxToRem(24)),\r\n      [theme.breakpoints.down('md')]: {\r\n        ...theme.mixins.paddingLeft(pxToRem(0)),\r\n        paddingBottom: pxToRem(36),\r\n      },\r\n    },\r\n    '& .segment-title': {\r\n      [theme.breakpoints.down('md')]: {\r\n        marginBottom: pxToRem(10),\r\n      },\r\n    },\r\n    '& .sec-title': {\r\n      fontSize: pxToRem(72),\r\n      lineHeight: pxToRem(80),\r\n      paddingBottom: pxToRem(24),\r\n      marginBottom: pxToRem(24),\r\n      '&:not(.no-css-border)': {\r\n        borderBottom: theme.borders.divider,\r\n      },\r\n      [theme.breakpoints.down('md')]: {\r\n        fontSize: pxToRem(32),\r\n        lineHeight: pxToRem(40),\r\n        paddingBottom: pxToRem(10),\r\n        marginBottom: pxToRem(16),\r\n      },\r\n    },\r\n    '&.has-no-image': {\r\n      '& .txt-wrap': {\r\n        ...theme.mixins.paddingLeft(pxToRem(0)),\r\n        maxWidth: 'none',\r\n      },\r\n      '& .rowWrapper': {\r\n        ...theme.mixins.right(pxToRem(0)),\r\n\r\n        '& .rowWrapper-before': {\r\n          ...theme.mixins.right('50%'),\r\n          transform: `translateX(${theme.mixins.translateX(50)}%)`,\r\n        },\r\n        '& .rowWrapper-after': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      [theme.breakpoints.down('md')]: {\r\n        '& .imageWrapper': {\r\n          display: 'none',\r\n        },\r\n        '& .rowWrapper': {\r\n          paddingTop: pxToRem(36),\r\n          paddingBottom: pxToRem(36),\r\n          '& .rowWrapper-before': {\r\n            top: pxToRem(0),\r\n          },\r\n        },\r\n        '& .txt-wrap': {\r\n          paddingBottom: pxToRem(0),\r\n        },\r\n      },\r\n    },\r\n  },\r\n  actionBlock: {\r\n    ...theme.mixins.marginRight(pxToRem(-22)),\r\n    [theme.breakpoints.up('md')]: {\r\n      ...theme.mixins.marginRight(pxToRem(-30)),\r\n      marginBottom: pxToRem(-30),\r\n    },\r\n    '& .btn-link': {\r\n      ...theme.mixins.marginRight(pxToRem(30)),\r\n      marginBottom: pxToRem(30),\r\n      display: 'inline-block',\r\n      [theme.breakpoints.down('md')]: {\r\n        marginBottom: pxToRem(8),\r\n        ...theme.mixins.marginRight(pxToRem(22)),\r\n      },\r\n      '&:last-child': {\r\n        // ...theme.mixins.marginRight(pxToRem(0)),\r\n        marginBottom: pxToRem(0),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useEffect, useRef, createRef } from 'react';\r\nimport Button from '../../../components/atoms/Button';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Box from '../../../components/molecules/Box';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Title from '../../../components/atoms/Title';\r\nimport Picture from '../../../components/atoms/Picture';\r\nimport { get } from 'lodash';\r\nimport useStyles from './style';\r\nimport { COMPONENT_NAME } from './locators';\r\nimport {\r\n  pushAnaylyticsData,\r\n  createDynamicLabels,\r\n} from '../../../../../src/utils/analytics';\r\nimport { analyticsData } from '../../../../../src/constants/Analytics/analytics-data';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport { EVENT_LIST_TEMPLATE_NAME } from './constants';\r\nimport { EVENTS_THEME_COLOR } from '../../../../constants';\r\nimport {\r\n  getComponentName,\r\n  getPageName,\r\n} from '../../../utils/getPageComponentInfo';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport TextRotateAnimation from '../../../components/atoms/TextRotateAnimation';\r\n\r\nconst Infobox = props => {\r\n  const { segmentText, title, image } = props.fields;\r\n  const contentType = get(\r\n    props,\r\n    'sitecoreContext.route.fields.contentType.fields.taxonomyKey.value',\r\n    ''\r\n  ).toLowerCase();\r\n\r\n  const componentList = get(\r\n    props,\r\n    'sitecoreContext.route.placeholders[\"vad-main\"][0].placeholders[no-search-result]',\r\n    '[]'\r\n  );\r\n\r\n  const componentLength = componentList && componentList.length;\r\n\r\n  const lastComponentObject =\r\n    componentList &&\r\n    componentList.length > 0 &&\r\n    componentList[componentLength - 1];\r\n\r\n  let lastComponent = get(props, 'appConfig.lastComponent', '');\r\n  const componentName = getComponentName(props);\r\n\r\n  if (\r\n    lastComponent &&\r\n    lastComponent.toLowerCase() === 'globalsearchsublayout'\r\n  ) {\r\n    lastComponent = lastComponentObject && lastComponentObject.componentName;\r\n  }\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const addAnalyticsInfo = text => {\r\n    const obj = {\r\n      ...analyticsData.pageBodyInteraction.arrowClick,\r\n      ...{\r\n        label: createDynamicLabels([\r\n          getPageName(props),\r\n          getComponentName(props),\r\n          `${title && title.value} - ${text}`,\r\n        ]),\r\n      },\r\n    };\r\n    pushAnaylyticsData(obj);\r\n  };\r\n\r\n  const totalLinks = Object.keys(props && props.fields).filter(\r\n    propertyName => propertyName.indexOf('link') === 0\r\n  );\r\n\r\n  const links = () => {\r\n    let arr = [];\r\n    for (let i = 1; i <= totalLinks.length; i++) {\r\n      arr.push(get(props, `fields[link${i}]`));\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const ctaElements = links();\r\n  const showImage = (image && image.value && image.value.src) ? true : false;\r\n\r\n  const infoBox = useRef(null),\r\n    pictureElem = useRef(null),\r\n    rowWrapperBefore = useRef([]),\r\n    rowWrapperAfter = useRef([]);\r\n\r\n  useEffect(() => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n\r\n    setTimeout(() => {\r\n      const infoBoxAnimation = gsap.timeline();\r\n      if (showImage) {\r\n        const infoBoxElementsToAnim = [];\r\n        pictureElem && pictureElem.current && infoBoxElementsToAnim.push(pictureElem.current);\r\n        rowWrapperBefore && rowWrapperBefore.current && infoBoxElementsToAnim.push(rowWrapperBefore.current);\r\n        rowWrapperAfter && rowWrapperAfter.current && infoBoxElementsToAnim.push(rowWrapperAfter.current);\r\n        if (infoBoxElementsToAnim.length > 0) {\r\n          infoBoxAnimation.fromTo(\r\n            infoBoxElementsToAnim,\r\n            {\r\n              opacity: 0,\r\n              ease: 'power1.out',\r\n              y: '16px',\r\n              paused: true,\r\n              duration: '500ms',\r\n            },\r\n            {\r\n              skewY: '0deg',\r\n              y: '0px',\r\n              opacity: 1,\r\n            }\r\n          );\r\n          infoBoxAnimation.pause();\r\n        }\r\n      }\r\n\r\n      let haveAnimatedOnce = false;\r\n      gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: infoBox.current,\r\n          start: 'top bottom',\r\n          end: `+=${window.innerHeight * 0.2}px bottom`,\r\n          scrub: true,\r\n          once: true,\r\n          onUpdate: self => {\r\n            if (self.progress > 0.15) {\r\n              infoBoxAnimation && infoBoxAnimation.play();\r\n              haveAnimatedOnce = true;\r\n            } else if (haveAnimatedOnce) {\r\n              infoBoxAnimation && infoBoxAnimation.reverse();\r\n            }\r\n          },\r\n        },\r\n      });\r\n    }, 100);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.root} ${lastComponent === componentName ? 'marginBottom-0' : ''\r\n        } ${!showImage ? 'has-no-image' : ''}`}\r\n      data-locator={COMPONENT_NAME}\r\n      ref={infoBox}\r\n    >\r\n      <Grid>\r\n        <Grid container className=\"rowWrapper\" alignItems=\"center\" spacing={3}>\r\n          <i className={'rowWrapper-before'} ref={rowWrapperBefore} />\r\n          {showImage ? (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={12}\r\n              lg={5}\r\n              xl={4}\r\n              className=\"imageWrapper\"\r\n            >\r\n              <div className={classes.pictureWrap} ref={pictureElem}>\r\n                <Picture\r\n                  media={{\r\n                    image: image,\r\n                    disableLazyLoad: true,\r\n                  }}\r\n                  className={'display-picture'}\r\n                  isParalax={false}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          ) : ''}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={12}\r\n            lg={image ? 7 : 12}\r\n            xl={image ? 8 : 12}\r\n            className=\"textWrapper\"\r\n          >\r\n            <div className={'txt-wrap'}>\r\n              {segmentText && (\r\n                <TextRotateAnimation\r\n                  condition={true}\r\n                  animateSettings={{\r\n                    willAnimate: true,\r\n                    selfTrigger: true,\r\n                    duration: '250ms',\r\n                  }}\r\n                >\r\n                  <Title text={segmentText} className=\"segment-title\" />\r\n                </TextRotateAnimation>\r\n              )}\r\n              {title && (\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  component=\"h2\"\r\n                  gutterBottom={false}\r\n                  className={'sec-title no-css-border'}\r\n                  border={'divider'}\r\n                >\r\n                  <Text field={title} />\r\n                </Typography>\r\n              )}\r\n              {ctaElements && (\r\n                <Box className={classes.actionBlock}>\r\n                  {ctaElements.map(\r\n                    (item, i) =>\r\n                      item.value &&\r\n                      item.value.text && (\r\n                        <div className={'btn-link'} key={i}>\r\n                          <Button\r\n                            onClick={() =>\r\n                              addAnalyticsInfo(get(item, 'value.text', ''))\r\n                            }\r\n                            className={classes.buttonInfoBox}\r\n                            component=\"span\"\r\n                            buttonType=\"primary\"\r\n                            field={item}\r\n                            hasBorder={false}\r\n                            themeColor={\r\n                              contentType === EVENT_LIST_TEMPLATE_NAME\r\n                                ? EVENTS_THEME_COLOR\r\n                                : ''\r\n                            }\r\n                          />\r\n                        </div>\r\n                      )\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <i className={'rowWrapper-after'} ref={rowWrapperAfter} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(Infobox))\r\n);\r\n","export const COMPONENT_NAME = 'Infobox';\r\n","export const EVENT_LIST_TEMPLATE_NAME = 'event';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import {\r\n  borders,\r\n  compose,\r\n  display,\r\n  flexbox,\r\n  palette,\r\n  positions,\r\n  shadows,\r\n  sizing,\r\n  spacing,\r\n  typography,\r\n  css,\r\n} from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\n\r\nexport const styleFunction = css(\r\n  compose(\r\n    borders,\r\n    display,\r\n    flexbox,\r\n    positions,\r\n    palette,\r\n    shadows,\r\n    sizing,\r\n    spacing,\r\n    typography\r\n  )\r\n);\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst Box = styled('div')(styleFunction, { name: 'MuiBox' });\r\n\r\nexport default Box;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '&.MuiTypography-root': {\r\n      paddingBottom: theme.spacing(1),\r\n      position: 'relative',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      width: theme.spacing(3),\r\n      height: '1px',\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      ...theme.mixins.left(0),\r\n      backgroundColor: theme.mixins.Black(),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\n\r\nimport Typography from '../Typography';\r\nimport useStyles from './Title.style';\r\n\r\nconst Title = props => {\r\n  const { text, className, variant } = props;\r\n  const classes = useStyles();\r\n\r\n  return text && text.value ? (\r\n    <Typography\r\n      variant={variant}\r\n      component=\"div\"\r\n      classes={{\r\n        root: `${classes.root} ${className}`,\r\n      }}\r\n    >\r\n      <Text field={text} />\r\n    </Typography>\r\n  ) : null;\r\n};\r\n\r\nTitle.propTypes = {\r\n  variant: PropTypes.string,\r\n  text: PropTypes.shape({\r\n    value: '',\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nTitle.defaultProps = {\r\n  className: '',\r\n  variant: 'body2',\r\n};\r\n\r\nexport default Title;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}