{"version":3,"sources":["global/containers/common/HappinessWidget/index.js"],"names":["withErrorBoundary","fields","widgetLink","userVisitCount","displayTimeInMins","isWidgetActive","pageCount","parseInt","value","displayTimeInMS","useEffect","canUseDOM","timerStart","timeSpentOnSite","getTimeSpentOnSite","getSessionStorage","isNaN","Date","now","setInterval","setSessionStorage","script","document","createElement","src","async","attrObj","id","key","setAttribute"],"mappings":"6FAAA,qDA4EeA,uBApES,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEvBC,EAKED,EALFC,WACAC,EAIEF,EAJFE,eACAC,EAGEH,EAHFG,kBAEAC,EACEJ,EADFI,eAGIC,EAAYC,SAASJ,GAAkBA,EAAeK,OAEtDC,EACqD,GAAzDF,SAASH,GAAqBA,EAAkBI,OAAc,IAqDhE,OAnDAE,qBAAU,WACR,GAAIC,KAAaN,GAAkBA,EAAeG,MAAO,CACvD,IAAII,EACAC,EAAkBC,IAEtB,SAASA,IAGP,OAFAD,EAAkBN,SAASQ,YAAkB,oBAC7CF,EAAkBG,MAAMH,GAAmB,EAAIA,EAuBjD,GAlBED,EAAaK,KAAKC,MAClBC,aAAY,WACVN,EAAkBC,KAAwBG,KAAKC,MAAQN,GACvDQ,YAAkB,kBAAmBP,GACrCD,EAAaL,SAASU,KAAKC,SAC1B,KAIkC,OAAnCH,YAAkB,aACpBK,YAAkB,YAAa,GAE/BA,YACE,YACAb,SAASQ,YAAkB,cAAgB,GAK7CA,YAAkB,cAAgBT,GAClCS,YAAkB,oBAAsBN,EACxC,CACA,IAAMY,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAMtB,GAAcA,EAAWM,MACtCa,EAAOI,OAAQ,EACf,IAAMC,EAAU,CACd,YAAa,YACb,YAAa,uCACbC,GAAI,2BACJ,YAAa,OAEf,IAAK,IAAIC,KAAOF,EACdL,EAAOQ,aAAaD,EAAKF,EAAQE,QAKtC,IAEI","file":"static/js/HappinessWidget.becf37ca.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  setSessionStorage,\r\n  getSessionStorage,\r\n} from '../../../../utils/sessionStorage';\r\nimport { canUseDOM } from '../../../utils/canUseDOM';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\n\r\nconst HappinessWidget = ({ fields }) => {\r\n  const {\r\n    widgetLink,\r\n    userVisitCount,\r\n    displayTimeInMins,\r\n    //widgetSource,\r\n    isWidgetActive,\r\n  } = fields;\r\n\r\n  const pageCount = parseInt(userVisitCount && userVisitCount.value);\r\n\r\n  const displayTimeInMS =\r\n    parseInt(displayTimeInMins && displayTimeInMins.value) * 60 * 1000;\r\n\r\n  useEffect(() => {\r\n    if (canUseDOM && isWidgetActive && isWidgetActive.value) {\r\n      let timerStart;\r\n      let timeSpentOnSite = getTimeSpentOnSite();\r\n\r\n      function getTimeSpentOnSite() {\r\n        timeSpentOnSite = parseInt(getSessionStorage('timeSpentOnSite'));\r\n        timeSpentOnSite = isNaN(timeSpentOnSite) ? 0 : timeSpentOnSite;\r\n        return timeSpentOnSite;\r\n      }\r\n\r\n      function startCounting() {\r\n        timerStart = Date.now();\r\n        setInterval(function() {\r\n          timeSpentOnSite = getTimeSpentOnSite() + (Date.now() - timerStart);\r\n          setSessionStorage('timeSpentOnSite', timeSpentOnSite);\r\n          timerStart = parseInt(Date.now());\r\n        }, 1000);\r\n      }\r\n      startCounting();\r\n\r\n      if (getSessionStorage('pageCount') === null) {\r\n        setSessionStorage('pageCount', 1);\r\n      } else {\r\n        setSessionStorage(\r\n          'pageCount',\r\n          parseInt(getSessionStorage('pageCount')) + 1\r\n        );\r\n      }\r\n\r\n      if (\r\n        getSessionStorage('pageCount') >= pageCount ||\r\n        getSessionStorage('timeSpentOnSite') >= displayTimeInMS\r\n      ) {\r\n        const script = document.createElement('script');\r\n        script.src = widgetLink && widgetLink.value;\r\n        script.async = true;\r\n        const attrObj = {\r\n          'data-user': 'VADApp001',\r\n          'data-pass': '7c9e6679-7425-40de-944b-e07fc1f90ae7',\r\n          id: 'happinessIndicatorScript',\r\n          'data-code': '100',\r\n        };\r\n        for (let key in attrObj) {\r\n          script.setAttribute(key, attrObj[key]);\r\n        }\r\n        //document.body.appendChild(script);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default withErrorBoundary(HappinessWidget);\r\n"],"sourceRoot":""}