{"version":3,"sources":["global/components/atoms/Accordion/index.js","global/containers/common/BusinessFacility/style.js","global/containers/common/BusinessFacility/index.js","global/containers/common/BusinessFacility/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Box/index.js","global/components/molecules/Container/index.js","global/components/molecules/Container/Container.style.js","global/utils/decodeHTML/index.js","global/components/atoms/RichText/style.js","global/components/atoms/RichText/index.js","global/components/atoms/Avatar/index.js","global/components/molecules/IconWithText/style.js","global/components/molecules/IconWithText/index.js"],"names":["Accordion","props","className","tabIdentifier","handleChange","expanded","container","classes","root","item","onChange","expandIcon","name","aria-controls","id","children","useStyles","makeStyles","theme","shape","componentSpacing","accordion","borderTop","borders","dropDownBorder","borderBottom","margin","spacing","breakpoints","up","width","padding","minHeight","color","mixins","Black","paddingBottom","display","boxShadow","AbuDhabiRed","maxWidth","height","labelContact","palette","text","tertiary","marginBottom","iconWrapper","flexDirection","paddingTop","down","transform","iconWithText","alignItems","marginRight","pxToRem","position","top","contactInfo","textDecoration","contactPerson","email","secondary","primary","main","highlightsLabel","description","darkGrey","facilitiesTable","marginTop","shadows","border","divider","typography","body2Bold","textAlign","textLeft","paddingLeft","body2","paddingLR","left","right","withErrorBoundary","withSitecoreContext","withNamespaces","useState","setExpanded","t","personOfContactLabel","fields","emailId","heading","businessHighlights","phoneNumber","isContactInfoPresent","length","value","Container","data-locator","Grid","panel","event","isExpanded","Typography","component","variant","field","Fragment","get","Link","data-id","analyticsData","data-link","createDynamicLabels","getPageName","getComponentName","isCustom","customHref","createPhoneLink","clsx","highlightSection","xs","lg","slice","map","iconItem","index","direction","key","IconWithText","iconImage","iconWithCircle","RichText","innerHTML","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","marginLeft","boxSizing","flexWrap","zeroMinWidth","minWidth","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","Object","assign","generateGrid","styleFunction","css","compose","flexbox","positions","sizing","Box","styled","React","forwardRef","ref","Component","fixed","useContainer","overflowHidden","other","capitalize","paddingRight","values","acc","maxWidthXs","max","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","maxWidthXl","overflow","decodeHTML","encodedHTML","richTextWrap","h1","h2","h3","h4","h5","body1Regular","body1","common","fontFamily","primaryBold","isEditor","isExperienceEditorActive","htmlWithoutStyle","dangerouslySetInnerHTML","__html","CustomAvatar","objectFit","textThenIcon","background","iconThenText","iconType","avatarClassName","isTextThenIcon","isAnimate","Picture","media","image","mobileImage","renditionNeeded","fallbackBackgroundNeeded","isParalax","defaultTypes"],"mappings":"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","file":"static/js/BusinessFacility.ce1d814d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n\r\nimport DctSvgIcon from '../Svg';\r\nimport Grid from '../../molecules/Grid';\r\n\r\nconst Accordion = props => {\r\n  const { className, tabIdentifier, handleChange, expanded } = props;\r\n\r\n  return (\r\n    <Grid container classes={{ root: className }}>\r\n      <Grid item>\r\n        <ExpansionPanel\r\n          expanded={expanded === tabIdentifier}\r\n          onChange={handleChange(tabIdentifier)}\r\n        >\r\n          <ExpansionPanelSummary\r\n            expandIcon={<DctSvgIcon name=\"ExpandMoreIcon\" />}\r\n            aria-controls={`panel${tabIdentifier}-content`}\r\n            id={`panel${tabIdentifier}-header`}\r\n          >\r\n            {props.children[0]}\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>{props.children[1]}</ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n  },\r\n  accordion: {\r\n    borderTop: theme.borders.dropDownBorder,\r\n    borderBottom: theme.borders.dropDownBorder,\r\n    '& .MuiExpansionPanelSummary-content': {\r\n      margin: `${theme.spacing(3)} 0`,\r\n      [theme.breakpoints.up('lg')]: {\r\n        margin: `${theme.spacing(5)} 0`,\r\n      },\r\n      '&.Mui-expanded': {\r\n        margin: `${theme.spacing(3)} 0`,\r\n        [theme.breakpoints.up('lg')]: {\r\n          margin: `${theme.spacing(5)} 0`,\r\n        },\r\n      },\r\n    },\r\n    '& .MuiGrid-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiExpansionPanelSummary-root': {\r\n      padding: 0,\r\n      minHeight: 'auto',\r\n      '& .MuiExpansionPanelSummary-expandIcon > span': {\r\n        color: theme.mixins.Black(),\r\n      },\r\n    },\r\n    '& .MuiCollapse-container.MuiCollapse-entered': {\r\n      paddingBottom: `${theme.spacing(4)}`,\r\n      [theme.breakpoints.up('lg')]: {\r\n        paddingBottom: `${theme.spacing(7)}`,\r\n      },\r\n    },\r\n    '& .MuiExpansionPanelDetails-root': {\r\n      display: 'block',\r\n      padding: 0,\r\n    },\r\n    '& .MuiPaper-elevation1': {\r\n      boxShadow: 'none',\r\n    },\r\n    '& .MuiIconButton-label': {\r\n      color: theme.mixins.AbuDhabiRed(),\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      maxWidth: theme.spacing(5),\r\n    },\r\n    '& svg': {\r\n      height: theme.spacing(4),\r\n      width: theme.spacing(4),\r\n      [theme.breakpoints.up('lg')]: {\r\n        height: theme.spacing(5),\r\n        width: theme.spacing(5),\r\n      },\r\n    },\r\n  },\r\n  labelContact: {\r\n    color: theme.palette.text.tertiary,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  iconWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'row',\r\n      '&.MuiGrid-grid-lg-7': {\r\n        paddingTop: 0,\r\n      },\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      marginBottom: 0,\r\n      '& > div > div': {\r\n        transform: 'none',\r\n      },\r\n    },\r\n  },\r\n  iconWithText: {\r\n    alignItems: 'flex-start',\r\n    marginBottom: theme.spacing(1),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginBottom: theme.spacing(7),\r\n    },\r\n    '&.hightlight-icon': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .MuiAvatar-root': {\r\n      ...theme.mixins.marginRight(pxToRem(14)),\r\n      [theme.breakpoints.up('lg')]: {\r\n        ...theme.mixins.marginRight(pxToRem(20)),\r\n      },\r\n      '& svg': {\r\n        position: 'relative',\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        [theme.breakpoints.up('lg')]: {\r\n          top: theme.spacing(-0.5),\r\n          width: theme.spacing(4),\r\n          height: theme.spacing(4),\r\n        },\r\n      },\r\n    },\r\n  },\r\n  contactInfo: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'row',\r\n      marginBottom: theme.spacing(5),\r\n    },\r\n    '& a': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  contactPerson: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      ...theme.mixins.marginRight(theme.spacing(4)),\r\n    },\r\n  },\r\n  email: {\r\n    color: theme.palette.text.secondary,\r\n    textDecoration: 'none!important',\r\n    [theme.breakpoints.up('lg')]: {\r\n      ...theme.mixins.marginRight(theme.spacing(4)),\r\n      '&:hover': {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'underline!important',\r\n      },\r\n    },\r\n  },\r\n  highlightsLabel: {\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingBottom: '0',\r\n    },\r\n  },\r\n  description: {\r\n    color: theme.palette.text.darkGrey,\r\n    paddingBottom: theme.spacing(4),\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingBottom: theme.spacing(11),\r\n    },\r\n  },\r\n  facilitiesTable: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: '0',\r\n    },\r\n    '& table': {\r\n      margin: '0',\r\n      boxShadow: theme.shadows[1],\r\n      width: '100%',\r\n      '& thead': {\r\n        border: theme.borders.divider,\r\n        [theme.breakpoints.down('md')]: {\r\n          border: 'none',\r\n        },\r\n      },\r\n      '& th': {\r\n        ...theme.typography.body2Bold,\r\n        textAlign: theme.mixins.textLeft(),\r\n        [theme.breakpoints.up('lg')]: {\r\n          '&:first-child': {\r\n            ...theme.mixins.paddingLeft(theme.spacing(5)),\r\n          },\r\n        },\r\n      },\r\n      '& td': {\r\n        ...theme.typography.body2,\r\n        textAlign: theme.mixins.textLeft(),\r\n        [theme.breakpoints.down('md')]: {\r\n          ...theme.mixins.paddingLR('50%', pxToRem(10)),\r\n          '&:before': {\r\n            ...theme.typography.body2Bold,\r\n            ...theme.mixins.left(theme.spacing(4)),\r\n            ...theme.mixins.right('auto'),\r\n            ...theme.mixins.paddingLR(0, pxToRem(10)),\r\n          },\r\n          '&:first-child': {\r\n            ...theme.mixins.paddingLeft(theme.spacing(4), pxToRem(10)),\r\n          },\r\n        },\r\n        '&:first-child': {\r\n          [theme.breakpoints.down('md')]: {\r\n            ...theme.typography.body2Bold,\r\n          },\r\n          [theme.breakpoints.up('lg')]: {\r\n            ...theme.mixins.paddingLeft(theme.spacing(5)),\r\n          },\r\n        },\r\n      },\r\n      '& tbody tr': {\r\n        [theme.breakpoints.down('md')]: {\r\n          border: 'none',\r\n          '&:first-child': {\r\n            borderTop: theme.borders.divider,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport get from 'lodash/get';\r\nimport clsx from 'clsx';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport IconWithText from '../../../components/molecules/IconWithText';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport Link from '../../../components/atoms/Link';\r\nimport RichText from '../../../components/atoms/RichText';\r\nimport Container from '../../../components/molecules/Container';\r\nimport { createPhoneLink } from '../../../../utils/utility';\r\nimport Typography from '../../../components/atoms/Typography';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport * as locators from './locators';\r\nimport useStyles from './style';\r\nimport Accordion from '../../../components/atoms/Accordion';\r\nimport { analyticsData } from '../../../../constants/Analytics/analytics-data';\r\nimport {\r\n  getComponentName,\r\n  getPageName,\r\n} from '../../../utils/getPageComponentInfo';\r\nimport { createDynamicLabels } from '../../../../../src/utils/analytics';\r\nconst BusinessFacility = props => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(1);\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const highlightsLabel = props && props.t && props.t('highlightsLabel');\r\n  const personOfContactLabel =\r\n    props && props.t && props.t('personOfContactLabel');\r\n  const {\r\n    contactPerson,\r\n    description,\r\n    emailId,\r\n    heading,\r\n    businessHighlights,\r\n    phoneNumber,\r\n    facilitiesTable,\r\n  } = props.fields;\r\n\r\n  const isContactInfoPresent = contactPerson || emailId || phoneNumber;\r\n\r\n  if (\r\n    !heading &&\r\n    (!businessHighlights || businessHighlights.length === 0) &&\r\n    !isContactInfoPresent &&\r\n    !description &&\r\n    !(facilitiesTable && facilitiesTable.value)\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root} data-locator={locators.COMPONENT_NAME}>\r\n      <Grid>\r\n        <Accordion\r\n          className={classes.accordion}\r\n          tabIdentifier={0}\r\n          expanded={expanded}\r\n          handleChange={handleChange}\r\n        >\r\n          {heading && (\r\n            <Typography component=\"h2\" variant=\"h4\">\r\n              <Text field={heading} />\r\n            </Typography>\r\n          )}\r\n          <React.Fragment>\r\n            {contactPerson &&\r\n              contactPerson.value &&\r\n              personOfContactLabel &&\r\n              isContactInfoPresent && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"div\"\r\n                  className={classes.labelContact}\r\n                >\r\n                  {personOfContactLabel}\r\n                </Typography>\r\n              )}\r\n            {isContactInfoPresent && (\r\n              <div className={classes.contactInfo}>\r\n                {contactPerson && contactPerson.value && (\r\n                  <Typography\r\n                    variant=\"body1Bold\"\r\n                    component=\"span\"\r\n                    className={classes.contactPerson}\r\n                  >\r\n                    <Text field={contactPerson} />\r\n                  </Typography>\r\n                )}\r\n                {emailId && get(emailId, 'value.text', '') && (\r\n                  <Link\r\n                    data-id={get(\r\n                      analyticsData,\r\n                      'dataIds.pageBodyNavLinkClick',\r\n                      ''\r\n                    )}\r\n                    data-link={createDynamicLabels([\r\n                      getPageName(props),\r\n                      getComponentName(props),\r\n                      get(analyticsData, 'dataLinksText.contactByEmail'),\r\n                    ])}\r\n                    isCustom={true}\r\n                    customHref={get(emailId, 'value.href', '')}\r\n                    className={classes.email}\r\n                  >\r\n                    <Typography variant=\"body2\" component=\"span\">\r\n                      <Text field={{ value: get(emailId, 'value.text', '') }} />\r\n                    </Typography>\r\n                  </Link>\r\n                )}\r\n                {phoneNumber && phoneNumber.value && (\r\n                  <Link\r\n                    data-id={get(analyticsData, 'dataIds.pageBodyNavLinkClick')}\r\n                    data-link={createDynamicLabels([\r\n                      getPageName(props),\r\n                      getComponentName(props),\r\n                      get(analyticsData, 'dataLinksText.contactByPhone'),\r\n                    ])}\r\n                    isCustom={true}\r\n                    customHref={createPhoneLink(phoneNumber.value)}\r\n                    className={clsx('no-flip', classes.email)}\r\n                  >\r\n                    <Typography variant=\"body2\" component=\"span\">\r\n                      <Text field={phoneNumber} />\r\n                    </Typography>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            )}\r\n            {description && description.value && (\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                className={classes.description}\r\n              >\r\n                <Text field={description} />\r\n              </Typography>\r\n            )}\r\n            <Grid container className={classes.highlightSection}>\r\n              {businessHighlights && businessHighlights.length > 0 && (\r\n                <>\r\n                  <Grid item xs={12} lg={3}>\r\n                    <Typography\r\n                      className={classes.highlightsLabel}\r\n                      component=\"h5\"\r\n                      variant=\"h5Bold\"\r\n                    >\r\n                      <Text field={{ value: highlightsLabel }} />\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} lg={9}>\r\n                    <Grid container className={classes.iconWrapper}>\r\n                      {businessHighlights.slice(0, 6).map((iconItem, index) => {\r\n                        return (\r\n                          <Grid item xs={12} lg={4} direction=\"row\" key={index}>\r\n                            <IconWithText\r\n                              iconImage={get(\r\n                                iconItem,\r\n                                'fields.highlightType.fields.icon',\r\n                                ''\r\n                              )}\r\n                              iconWithCircle={false}\r\n                              className={clsx(\r\n                                classes.iconWithText,\r\n                                'hightlight-icon'\r\n                              )}\r\n                              variant=\"square\"\r\n                            >\r\n                              <Typography variant=\"body1\" component=\"span\">\r\n                                <Text field={iconItem.fields.text} />\r\n                              </Typography>\r\n                            </IconWithText>\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              <RichText\r\n                className={classes.facilitiesTable}\r\n                innerHTML={facilitiesTable}\r\n              />\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Accordion>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(BusinessFacility))\r\n);\r\n","export const COMPONENT_NAME = 'BusinessFacility';","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import {\r\n  borders,\r\n  compose,\r\n  display,\r\n  flexbox,\r\n  palette,\r\n  positions,\r\n  shadows,\r\n  sizing,\r\n  spacing,\r\n  typography,\r\n  css,\r\n} from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\n\r\nexport const styleFunction = css(\r\n  compose(\r\n    borders,\r\n    display,\r\n    flexbox,\r\n    positions,\r\n    palette,\r\n    shadows,\r\n    sizing,\r\n    spacing,\r\n    typography\r\n  )\r\n);\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst Box = styled('div')(styleFunction, { name: 'MuiBox' });\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport capitalize from '@material-ui/core/utils/capitalize';\r\nimport { styles } from './Container.style';\r\n\r\nconst Container = React.forwardRef(function Container(props, ref) {\r\n  const {\r\n    classes,\r\n    className = '',\r\n    component: Component = 'div',\r\n    fixed = false,\r\n    maxWidth = 'xl',\r\n    useContainer = true,\r\n    overflowHidden = false,\r\n    ...other\r\n  } = props;\r\n\r\n  const container = (\r\n    <Component\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.fixed]: fixed,\r\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]:\r\n            maxWidth !== false,\r\n        },\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...other}\r\n    />\r\n  );\r\n\r\n  if (!useContainer) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.overflowHidden]: overflowHidden,\r\n      })}\r\n    >\r\n      {container}\r\n    </section>\r\n  );\r\n});\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Set the max-width to match the min-width of the current breakpoint.\r\n   * This is useful if you'd prefer to design for a fixed set of sizes\r\n   * instead of trying to accommodate a fully fluid viewport.\r\n   * It's fluid by default.\r\n   */\r\n  fixed: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the container.\r\n   * The container width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\r\n\r\n  useContainer: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\r\n","export const styles = theme => {\r\n  const paddings = {};\r\n\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      width: '100%',\r\n      marginLeft: 'auto',\r\n      boxSizing: 'border-box',\r\n      marginRight: 'auto',\r\n      paddingLeft: '0',\r\n      paddingRight: '0',\r\n    },\r\n    ...paddings,\r\n    /* Styles applied to the root element if `fixed={true}`. */\r\n    fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\r\n      const value = theme.breakpoints.values[breakpoint];\r\n\r\n      if (value !== 0) {\r\n        acc[theme.breakpoints.up(breakpoint)] = {\r\n          maxWidth: value,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {}),\r\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\r\n    maxWidthXs: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\r\n    maxWidthSm: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: theme.breakpoints.values.sm,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\r\n    maxWidthMd: {\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: theme.breakpoints.values.md,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\r\n    maxWidthLg: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\r\n    maxWidthXl: {\r\n      [theme.breakpoints.up('xl')]: {\r\n        // maxWidth: theme.breakpoints.values.xl,\r\n        maxWidth: '100%',\r\n      },\r\n    },\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n  };\r\n};\r\n","/* \r\n    This method remove \"\\\" from html string\r\n    Accept params: encoded html\r\n    Return: decode html\r\n*/\r\nexport const decodeHTML = encodedHTML => encodedHTML.replace(/\\\\/g, '');\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\nconst useStyles = makeStyles(theme => ({\r\n  richTextWrap: {\r\n    '& h1': {\r\n      ...theme.typography.h1,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h2,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h3,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h4,\r\n      marginTop: pxToRem(32),\r\n      marginBottom: pxToRem(32),\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.h5,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& h6': {\r\n      ...theme.typography.body1Regular,\r\n      marginBottom: pxToRem(16),\r\n    },\r\n    '& p': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.text.darkGrey,\r\n      margin: `0 0 ${theme.spacing(2)}`,\r\n    },\r\n    '& ul': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& ol': {\r\n      color: theme.palette.text.darkGrey,\r\n    },\r\n    '& a': {\r\n      ...theme.typography.body1,\r\n      color: theme.palette.common.AbuDhabiRed,\r\n    },\r\n    '& strong, & b': {\r\n      fontFamily: theme.typography.fontFamily.primaryBold,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { decodeHTML } from '../../../utils/decodeHTML';\r\nimport { RichText as RichTextSitecore } from '@sitecore-jss/sitecore-jss-react';\r\nimport { isExperienceEditorActive } from '@sitecore-jss/sitecore-jss';\r\nimport clsx from 'clsx';\r\nimport useStyles from './style';\r\n\r\nconst RichText = ({ innerHTML, className }) => {\r\n  const classes = useStyles();\r\n  const isEditor = isExperienceEditorActive();\r\n  const htmlWithoutStyle =\r\n    innerHTML &&\r\n    innerHTML.value &&\r\n    innerHTML.value.replace(/\\s*style=([\"'])(.*?)\\1/g, '');\r\n\r\n  if (isEditor) {\r\n    return (\r\n      <RichTextSitecore\r\n        className={clsx(\r\n          classes.richTextWrap,\r\n          className ? className : '',\r\n          'richText',\r\n          'richTextSitecore'\r\n        )}\r\n        field={innerHTML}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (innerHTML && innerHTML.value) {\r\n    return (\r\n      <div\r\n        className={`${classes.richTextWrap} ${\r\n          className ? className : ''\r\n        } richText`}\r\n        dangerouslySetInnerHTML={{\r\n          __html: decodeHTML(htmlWithoutStyle),\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default RichText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst CustomAvatar = props => {\r\n  const { className, children, ...other } = props;\r\n  return (\r\n    <Avatar className={className} {...other}>\r\n      {children}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nCustomAvatar.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CustomAvatar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    '.hightlight-icon': {\r\n      '& img': {\r\n        width: 'inherit',\r\n        maxWidth: '100%',\r\n        objectFit: 'contain',\r\n      },\r\n      '& .MuiAvatar-root': {\r\n        width: 'auto',\r\n        height: 'auto',\r\n      },\r\n    },\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    transform: iconWithCircle => !iconWithCircle && 'translateX(-10px)',\r\n  },\r\n  textThenIcon: {\r\n    '& .MuiAvatar-root': {\r\n      ...theme.mixins.marginLeft(pxToRem(10)),\r\n      background: iconWithCircle => !iconWithCircle && 'transparent',\r\n    },\r\n  },\r\n  iconThenText: {\r\n    '& .MuiAvatar-root': {\r\n      ...theme.mixins.marginRight(pxToRem(10)),\r\n      background: iconWithCircle => !iconWithCircle && 'transparent',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport get from 'lodash/get';\r\nimport Box from '../Box';\r\nimport CustomAvatar from '../../atoms/Avatar';\r\nimport Picture from '../../atoms/Picture';\r\nimport DctSvgIcon from '../../atoms/Svg';\r\nimport useStyles from './style';\r\n\r\nconst IconWithText = props => {\r\n  const {\r\n    className,\r\n    iconType = 'FallbackCheckIcon', // fallback check icon\r\n    avatarClassName,\r\n    children,\r\n    isTextThenIcon,\r\n    iconWithCircle,\r\n    iconImage,\r\n    isAnimate,\r\n    ...other\r\n  } = props;\r\n  const TextThenIcon = () => {\r\n    return (\r\n      <Box className={clsx(classes.root, classes.textThenIcon, className)}>\r\n        {children}\r\n        <CustomAvatar className={avatarClassName} {...other}>\r\n          {get(iconImage, 'value.src', '').length > 1 ? ( // Sometimes only '/' comes in src, hence handled that case here also\r\n            <Picture\r\n              media={{\r\n                image: iconImage,\r\n                mobileImage: iconImage,\r\n                renditionNeeded: false,\r\n                fallbackBackgroundNeeded: false,\r\n              }}\r\n              isParalax={false}\r\n            />\r\n          ) : isAnimate ? (\r\n            <span className=\"animateIcon\">\r\n              <DctSvgIcon name={iconType} />\r\n            </span>\r\n          ) : (\r\n            <DctSvgIcon name={iconType} />\r\n          )}\r\n        </CustomAvatar>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const IconThenText = () => {\r\n    return (\r\n      <Box className={clsx(classes.root, classes.iconThenText, className)}>\r\n        <CustomAvatar className={avatarClassName} {...other}>\r\n          {get(iconImage, 'value.src', '').length > 1 ? (\r\n            <Picture\r\n              media={{\r\n                image: iconImage,\r\n                mobileImage: iconImage,\r\n                renditionNeeded: false,\r\n                fallbackBackgroundNeeded: false,\r\n              }}\r\n              isParalax={false}\r\n            />\r\n          ) : isAnimate ? (\r\n            <span className=\"animateIcon\">\r\n              <DctSvgIcon name={iconType} />\r\n            </span>\r\n          ) : (\r\n            <DctSvgIcon name={iconType} />\r\n          )}\r\n        </CustomAvatar>\r\n        {children}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles(iconWithCircle);\r\n  return isTextThenIcon ? TextThenIcon() : IconThenText();\r\n};\r\n\r\nIconWithText.propTypes = {\r\n  className: PropTypes.string,\r\n  iconType: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  isTextThenIcon: PropTypes.bool,\r\n  iconWithCircle: PropTypes.bool,\r\n  iconImage: PropTypes.object,\r\n};\r\n\r\nIconWithText.defaultTypes = {\r\n  className: '',\r\n  isTextThenIcon: false,\r\n  iconWithCircle: true,\r\n  isAnimate: false,\r\n  iconImage: '',\r\n};\r\n\r\nexport default IconWithText;\r\n"],"sourceRoot":""}