{"version":3,"sources":["global/containers/common/TwoColumnSubLayout/style.js","global/containers/common/TwoColumnSubLayout/index.js","global/containers/common/TwoColumnSubLayout/locators.js","global/components/molecules/Grid/Grid.style.js","global/components/molecules/Grid/index.js","global/components/molecules/Container/index.js","global/components/molecules/Container/Container.style.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["useStyles","makeStyles","theme","root","shape","componentSpacing","borderBottom","borders","divider","paddingBottom","pxToRem","breakpoints","up","display","marginBottom","leftTwoColumnSubLayoutSection","mixins","marginRight","flexBasis","props","get","spacing","margin","rightTwoColumnSubLayoutSection","marginLeft","parseInt","withErrorBoundary","withSitecoreContext","withNamespaces","classes","Container","data-locator","Grid","item","className","name","rendering","appConfig","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","StyledGrid","withStyles","container","boxSizing","flexWrap","width","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexGrow","maxWidth","Object","assign","generateGrid","React","forwardRef","ref","component","Component","fixed","useContainer","overflowHidden","other","clsx","capitalize","children","paddingLeft","paddingRight","values","acc","value","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","overflow","arguments","length","undefined","concat","_props$alignContent","_props$alignItems","classNameProp","_props$component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","_objectWithoutProperties","_extends"],"mappings":"0MAwCeA,EApCGC,aAAW,SAAAC,GAAK,gBAAK,CACrCC,KAAK,2BACAD,EAAME,MAAMC,kBADb,OAEFC,aAAcJ,EAAMK,QAAQC,QAC5BC,cAAeC,YAAQ,KAHrB,cAIDR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,OACTJ,cAAeC,YAAQ,MANvB,cAQF,wCAAyC,CACvCI,aAAc,IATd,IAYJC,8BAA8B,2BACzBb,EAAMc,OAAOC,YAAY,IADD,uBAE1Bf,EAAMS,YAAYC,GAAG,MAFK,aAGzBM,UAAW,SAAAC,GAAK,gBAAOC,IAAID,EAAO,yBAA0B,IAA5C,OACbjB,EAAMc,OAAOC,YAAYf,EAAMmB,QAAQ,MAJjB,cAM3B,+BAAgC,CAC9BC,OAAQ,IAPiB,IAU7BC,+BAA+B,2BAC1BrB,EAAMc,OAAOQ,WAAW,IADC,uBAE3BtB,EAAMS,YAAYC,GAAG,MAFM,aAG1BM,UAAW,SAAAC,GAAK,gBACX,IAAMM,SAASL,IAAID,EAAO,yBAA0B,KADzC,OAEbjB,EAAMc,OAAOQ,WAAWtB,EAAMmB,QAAQ,MALf,cAO5B,+BAAgC,CAC9BC,OAAQ,IARkB,Q,SCUjBI,sBACbC,gCAAsBC,eA3BG,SAAAT,GACzB,IAAMU,EAAU7B,EAAUmB,GAC1B,OACE,kBAACW,EAAA,EAAD,CAAWC,eCde,sBDexB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAMC,MAAI,EAACC,UAAWL,EAAQ1B,MAC5B,kBAAC6B,EAAA,EAAD,CACEC,MAAI,EACJC,UAAWL,EAAQd,8BACnBgB,eCnBgB,iCDqBhB,kBAAC,cAAD,CAAaI,KAAK,eAAeC,UAAWjB,EAAMiB,UAAWC,UAAWlB,EAAMkB,aAEhF,kBAACL,EAAA,EAAD,CACEC,MAAI,EACJC,UAAWL,EAAQN,+BACnBQ,eCzBiB,kCD2BjB,kBAAC,cAAD,CAAaI,KAAK,gBAAgBC,UAAWjB,EAAMiB,UAAWC,UAAWlB,EAAMkB,sB,4DE7B9EC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA+C5E,SAASC,EAAUC,GAAe,IAAVC,EAAS,uDAAH,EACtBC,EAAQC,WAAWH,GACzB,MAAM,GAAN,OAAUE,EAAQD,GAAlB,OAAwBG,OAAOJ,GAAKK,QAAQD,OAAOF,GAAQ,KAAO,MA+B7D,I,SC7EDI,E,MAAaC,ID6EG,SAAA9C,GAAK,gCAEzBC,KAAK,aACHqB,WAAYtB,EAAMmB,QAAQ,GAC1BJ,YAAaf,EAAMmB,QAAQ,IAC1BnB,EAAMS,YAAYC,GAAG,MAAQ,CAC5BY,WAAY,OACZP,YAAa,SAIjBgC,UAAW,CACTC,UAAW,aACXrC,QAAS,OACTsC,SAAU,OACVC,MAAO,OACP5B,WAAY,IACZP,YAAa,KAGfgB,KAAM,CACJiB,UAAW,aACX5B,OAAQ,KAGV+B,aAAc,CACZC,SAAU,GAGZ,sBAAuB,CACrBC,cAAe,UAGjB,8BAA+B,CAC7BA,cAAe,kBAGjB,2BAA4B,CAC1BA,cAAe,eAGjB,iBAAkB,CAChBJ,SAAU,UAGZ,uBAAwB,CACtBA,SAAU,gBAGZ,wBAAyB,CACvBK,WAAY,UAGd,4BAA6B,CAC3BA,WAAY,cAGd,0BAA2B,CACzBA,WAAY,YAGd,0BAA2B,CACzBA,WAAY,YAGd,0BAA2B,CACzBC,aAAc,UAGhB,8BAA+B,CAC7BA,aAAc,cAGhB,4BAA6B,CAC3BA,aAAc,YAGhB,iCAAkC,CAChCA,aAAc,iBAGhB,gCAAiC,CAC/BA,aAAc,gBAGhB,oBAAqB,CACnBC,eAAgB,UAGlB,sBAAuB,CACrBA,eAAgB,YAGlB,2BAA4B,CAC1BA,eAAgB,iBAGlB,0BAA2B,CACzBA,eAAgB,gBAGlB,0BAA2B,CACzBA,eAAgB,iBAlIpB,SAAwBxD,EAAOyD,GAC7B,IAAMC,EAAS,GAkBf,OAhBAtB,EAASuB,SAAQ,SAAAxC,GACf,IAAMyC,EAAe5D,EAAMmB,QAAQA,GAEd,IAAjByC,IAIJF,EAAO,WAAD,OAAYD,EAAZ,YAA0BtC,IAAa,CAC3CC,OAAO,IAAD,OAAMkB,EAAUsB,EAAc,IACpCV,MAAM,eAAD,OAAiBZ,EAAUsB,GAA3B,KACL,YAAa,CACXC,QAASvB,EAAUsB,EAAc,SAKhCF,EAiHJI,CAAe9D,EAAO,OACtBA,EAAMS,YAAYsD,KAAKC,QAAO,SAACC,EAAaC,GAG7C,OA1LJ,SAAsBC,EAAcnE,EAAOyD,GACzC,IAAMC,EAAS,GAEfrB,EAAWsB,SAAQ,SAAAS,GACjB,IAAMF,EAAG,eAAWT,EAAX,YAAyBW,GAElC,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAMlB,EAAK,UAAMmB,KAAKC,MAAOF,EAAO,GAAM,KAAQ,IAAvC,KAIXV,EAAOQ,GAAO,CACZlD,UAAWkC,EACXqB,SAAU,EACVC,SAAUtB,QAhBVQ,EAAOQ,GAAO,CACZlD,UAAW,OACXuD,SAAU,EACVC,SAAU,aAZZd,EAAOQ,GAAO,CACZlD,UAAW,EACXuD,SAAU,EACVC,SAAU,WA2BG,OAAff,EACFgB,OAAOC,OAAOP,EAAcT,GAE5BS,EAAanE,EAAMS,YAAYC,GAAG+C,IAAeC,EAgJjDiB,CAAaV,EAAajE,EAAOkE,GAC1BD,IACN,OC1LiC,CAAEhC,KAAM,WAA3Ba,CAAwChB,KAC5Ce,O,8GCETjB,EAAYgD,IAAMC,YAAW,SAAmB5D,EAAO6D,GAAM,IAAD,EAE9DnD,EAQEV,EARFU,QAF8D,EAU5DV,EAPFe,iBAH8D,MAGlD,GAHkD,IAU5Df,EANF8D,UAAWC,OAJmD,MAIvC,MAJuC,IAU5D/D,EALFgE,aAL8D,WAU5DhE,EAJFuD,gBAN8D,MAMnD,KANmD,IAU5DvD,EAHFiE,oBAP8D,WAU5DjE,EAFFkE,sBAR8D,SAS3DC,EAT2D,YAU5DnE,EAV4D,wFAY1D8B,EACJ,kBAACiC,EAAD,eACEhD,UAAWqD,YACT1D,EAAQ1B,MADK,mBAGV0B,EAAQsD,MAAQA,GAHN,cAIVtD,EAAQ,WAAD,OAAY2D,IAAW3C,OAAO6B,OACvB,IAAbA,GALS,GAObxC,GAEF8C,IAAKA,GACDM,IAIR,OAAKF,EAKH,6BACElD,UAAWqD,YAAK1D,EAAQ1B,KAAT,eACZ0B,EAAQwD,eAAiBA,KAG3BpC,GATI9B,EAAMsE,YA+CFzC,iBCnFO,SAAA9C,GAGpB,OAAO,yBAELC,KAAM,CACJiD,MAAO,OACP5B,WAAY,OACZ0B,UAAW,aACXjC,YAAa,OACbyE,YAAa,IACbC,aAAc,MAVD,IAEjB,IAYER,MAAOR,OAAOV,KAAK/D,EAAMS,YAAYiF,QAAQ1B,QAAO,SAAC2B,EAAKlC,GACxD,IAAMmC,EAAQ5F,EAAMS,YAAYiF,OAAOjC,GAOvC,OALc,IAAVmC,IACFD,EAAI3F,EAAMS,YAAYC,GAAG+C,IAAe,CACtCe,SAAUoB,IAGPD,IACN,IAEHE,WAAW,eACR7F,EAAMS,YAAYC,GAAG,MAAQ,CAC5B8D,SAAUH,KAAKyB,IAAI9F,EAAMS,YAAYiF,OAAOK,GAAI,OAIpDC,WAAW,eACRhG,EAAMS,YAAYC,GAAG,MAAQ,CAC5B8D,SAAUxE,EAAMS,YAAYiF,OAAOO,KAIvCC,WAAW,eACRlG,EAAMS,YAAYC,GAAG,MAAQ,CAC5B8D,SAAUxE,EAAMS,YAAYiF,OAAOS,KAIvCC,WAAW,eACRpG,EAAMS,YAAYC,GAAG,MAAQ,CAC5B8D,SAAUxE,EAAMS,YAAYiF,OAAOW,KAIvCC,WAAW,eACRtG,EAAMS,YAAYC,GAAG,MAAQ,CAE5B8D,SAAU,SAGdW,eAAgB,CACdoB,SAAU,cD0BkB,CAAEtE,KAAM,gBAA3Ba,CAA6ClB,I,iCEnF5D,kDAiBIQ,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMgE,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1E/D,EAAQC,WAAWH,GACvB,MAAO,GAAGoE,OAAOlE,EAAQD,GAAKmE,OAAOhE,OAAOJ,GAAKK,QAAQD,OAAOF,GAAQ,KAAO,MA6B1E,IA6HHX,EAAoB8C,cAAiB,SAAc3D,EAAO6D,GAC5D,IAAI8B,EAAsB3F,EAAMsC,aAC5BA,OAAuC,IAAxBqD,EAAiC,UAAYA,EAC5DC,EAAoB5F,EAAMqC,WAC1BA,OAAmC,IAAtBuD,EAA+B,UAAYA,EACxDlF,EAAUV,EAAMU,QAChBmF,EAAgB7F,EAAMe,UACtB+E,EAAmB9F,EAAM8D,UACzBC,OAAiC,IAArB+B,EAA8B,MAAQA,EAClDC,EAAmB/F,EAAM8B,UACzBA,OAAiC,IAArBiE,GAAsCA,EAClDC,EAAmBhG,EAAMiG,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAclG,EAAMc,KACpBA,OAAuB,IAAhBoF,GAAiCA,EACxCC,EAAiBnG,EAAMoG,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYrG,EAAMoF,GAClBA,OAAmB,IAAdiB,GAA+BA,EACpCC,EAAYtG,EAAMkF,GAClBA,OAAmB,IAAdoB,GAA+BA,EACpCC,EAAYvG,EAAMgF,GAClBA,OAAmB,IAAduB,GAA+BA,EACpCC,EAAiBxG,EAAME,QACvBA,OAA6B,IAAnBsG,EAA4B,EAAIA,EAC1CC,EAAczG,EAAM0G,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAY3G,EAAM4G,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAY7G,EAAM8E,GAClBA,OAAmB,IAAd+B,GAA+BA,EACpCC,EAAsB9G,EAAMkC,aAC5BA,OAAuC,IAAxB4E,GAAyCA,EACxD3C,EAAQ4C,YAAyB/G,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1Me,EAAYqD,YAAK1D,EAAQ1B,KAAM6G,EAAe/D,GAAa,CAACpB,EAAQoB,UAAuB,IAAZ5B,GAAiBQ,EAAQ,cAAcgF,OAAOhE,OAAOxB,MAAaY,GAAQJ,EAAQI,KAAMoB,GAAgBxB,EAAQwB,aAA4B,QAAd+D,GAAuBvF,EAAQ,gBAAgBgF,OAAOhE,OAAOuE,KAAuB,SAATS,GAAmBhG,EAAQ,WAAWgF,OAAOhE,OAAOgF,KAAwB,YAAfrE,GAA4B3B,EAAQ,kBAAkBgF,OAAOhE,OAAOW,KAAgC,YAAjBC,GAA8B5B,EAAQ,oBAAoBgF,OAAOhE,OAAOY,KAA6B,eAAZ8D,GAA4B1F,EAAQ,cAAcgF,OAAOhE,OAAO0E,MAAmB,IAAPtB,GAAgBpE,EAAQ,WAAWgF,OAAOhE,OAAOoD,MAAc,IAAPE,GAAgBtE,EAAQ,WAAWgF,OAAOhE,OAAOsD,MAAc,IAAPE,GAAgBxE,EAAQ,WAAWgF,OAAOhE,OAAOwD,MAAc,IAAPE,GAAgB1E,EAAQ,WAAWgF,OAAOhE,OAAO0D,MAAc,IAAPwB,GAAgBlG,EAAQ,WAAWgF,OAAOhE,OAAOkF,MACl2B,OAAoBjD,gBAAoBI,EAAWiD,YAAS,CAC1DjG,UAAWA,EACX8C,IAAKA,GACJM,OA+GDvC,EAAaC,aAnRG,SAAgB9C,GAClC,OAAOiI,YAAS,CAEdhI,KAAM,GAGN8C,UAAW,CACTC,UAAW,aACXrC,QAAS,OACTsC,SAAU,OACVC,MAAO,QAITnB,KAAM,CACJiB,UAAW,aACX5B,OAAQ,KAKV+B,aAAc,CACZC,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBJ,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBK,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBC,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnBC,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBxD,EAAOyD,GAC7B,IAAIC,EAAS,GAgBb,OAfAtB,EAASuB,SAAQ,SAAUxC,GACzB,IAAIyC,EAAe5D,EAAMmB,QAAQA,GAEZ,IAAjByC,IAIJF,EAAO,WAAWiD,OAAOlD,EAAY,KAAKkD,OAAOxF,IAAY,CAC3DC,OAAQ,IAAIuF,OAAOrE,EAAUsB,EAAc,IAC3CV,MAAO,eAAeyD,OAAOrE,EAAUsB,GAAe,KACtD,YAAa,CACXC,QAASvB,EAAUsB,EAAc,SAIhCF,EAgIJI,CAAe9D,EAAO,MAAOA,EAAMS,YAAYsD,KAAKC,QAAO,SAAUC,EAAaC,GAGnF,OApMJ,SAAsBC,EAAcnE,EAAOyD,GACzC,IAAIC,EAAS,GACbrB,EAAWsB,SAAQ,SAAUS,GAC3B,IAAIF,EAAM,QAAQyC,OAAOlD,EAAY,KAAKkD,OAAOvC,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIlB,EAAQ,GAAGyD,OAAOtC,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DV,EAAOQ,GAAO,CACZlD,UAAWkC,EACXqB,SAAU,EACVC,SAAUtB,QAfVQ,EAAOQ,GAAO,CACZlD,UAAW,OACXuD,SAAU,EACVC,SAAU,aAZZd,EAAOQ,GAAO,CACZlD,UAAW,EACXuD,SAAU,EACVC,SAAU,WAyBG,OAAff,EACFwE,YAAS9D,EAAcT,GAEvBS,EAAanE,EAAMS,YAAYC,GAAG+C,IAAeC,EA6JjDiB,CAAaV,EAAajE,EAAOkE,GAC1BD,IACN,OAwJ+B,CAClChC,KAAM,WADSa,CAEdhB,GAmBYe","file":"static/js/TwoColumnSubLayout.4228310e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport get from 'lodash/get';\r\nimport { pxToRem } from '../../../../styles/themes/vad/constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.shape.componentSpacing,\r\n    borderBottom: theme.borders.divider,\r\n    paddingBottom: pxToRem(48),\r\n    [theme.breakpoints.up('lg')]: {\r\n      display: 'flex',\r\n      paddingBottom: pxToRem(88),\r\n    },\r\n    '& .MuiContainer-root, & .MuiGrid-root': {\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  leftTwoColumnSubLayoutSection: {\r\n    ...theme.mixins.marginRight(0),\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexBasis: props => `${get(props, 'params.leftColumnWidth', '')}%`,\r\n      ...theme.mixins.marginRight(theme.spacing(1)),\r\n    },\r\n    '&.MuiGrid-root .MuiGrid-root': {\r\n      margin: 0,\r\n    },\r\n  },\r\n  rightTwoColumnSubLayoutSection: {\r\n    ...theme.mixins.marginLeft(0),\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexBasis: props =>\r\n        `${100 - parseInt(get(props, 'params.leftColumnWidth', ''))}%`,\r\n      ...theme.mixins.marginLeft(theme.spacing(1)),\r\n    },\r\n    '&.MuiGrid-root .MuiGrid-root': {\r\n      margin: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Placeholder } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withNamespaces } from 'react-i18next';\r\n\r\nimport { COMPONENT_NAME, LEFT_SECTION, RIGHT_SECTION } from './locators';\r\nimport Grid from '../../../components/molecules/Grid';\r\nimport Container from '../../../components/molecules/Container';\r\nimport useStyles from './style';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\n\r\nconst TwoColumnSubLayout = props => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Container data-locator={COMPONENT_NAME}>\r\n      <Grid>\r\n        <Grid item className={classes.root}>\r\n          <Grid\r\n            item\r\n            className={classes.leftTwoColumnSubLayoutSection}\r\n            data-locator={LEFT_SECTION}\r\n          >\r\n            <Placeholder name=\"vad-left-col\" rendering={props.rendering} appConfig={props.appConfig} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            className={classes.rightTwoColumnSubLayoutSection}\r\n            data-locator={RIGHT_SECTION}\r\n          >\r\n            <Placeholder name=\"vad-right-col\" rendering={props.rendering} appConfig={props.appConfig} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(\r\n  withSitecoreContext()(withNamespaces()(TwoColumnSubLayout))\r\n);\r\n","export const COMPONENT_NAME = 'TwoColumnSubLayout';\r\nexport const LEFT_SECTION = 'LeftTwoColumnSubLayoutSection';\r\nexport const RIGHT_SECTION = 'RightTwoColumnSubLayoutSection';\r\n","export const SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nexport const GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  GRID_SIZES.forEach(size => {\r\n    const key = `grid-${breakpoint}-${size}`;\r\n\r\n    if (size === true) {\r\n      // For the auto layouting\r\n      styles[key] = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (size === 'auto') {\r\n      styles[key] = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        maxWidth: 'none',\r\n      };\r\n      return;\r\n    }\r\n\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\r\n\r\n    // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n    styles[key] = {\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width,\r\n    };\r\n  });\r\n\r\n  // No need for a media query for the first size.\r\n  if (breakpoint === 'xs') {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction getOffset(val, div = 1) {\r\n  const parse = parseFloat(val);\r\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGutter(theme, breakpoint) {\r\n  const styles = {};\r\n\r\n  SPACINGS.forEach(spacing => {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing === 0) {\r\n      return;\r\n    }\r\n\r\n    styles[`spacing-${breakpoint}-${spacing}`] = {\r\n      margin: `-${getOffset(themeSpacing, 2)}`,\r\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n      '& > $item': {\r\n        padding: getOffset(themeSpacing, 2),\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n}\r\n\r\n// Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element */\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '5.5%',\r\n      marginRight: '5.5%',\r\n    },\r\n  },\r\n  /* Styles applied to the root element if `container={true}`. */\r\n  container: {\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    marginRight: '0',\r\n  },\r\n  /* Styles applied to the root element if `item={true}`. */\r\n  item: {\r\n    boxSizing: 'border-box',\r\n    margin: '0', // For instance, it's useful when used with a `figure` element.\r\n  },\r\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\r\n  zeroMinWidth: {\r\n    minWidth: 0,\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column\"`. */\r\n  'direction-xs-column': {\r\n    flexDirection: 'column',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\r\n  'direction-xs-column-reverse': {\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\r\n  'direction-xs-row-reverse': {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\r\n  'wrap-xs-nowrap': {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\r\n  'wrap-xs-wrap-reverse': {\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\r\n  'align-items-xs-center': {\r\n    alignItems: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\r\n  'align-items-xs-flex-start': {\r\n    alignItems: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\r\n  'align-items-xs-flex-end': {\r\n    alignItems: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\r\n  'align-items-xs-baseline': {\r\n    alignItems: 'baseline',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\r\n  'align-content-xs-center': {\r\n    alignContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\r\n  'align-content-xs-flex-start': {\r\n    alignContent: 'flex-start',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\r\n  'align-content-xs-flex-end': {\r\n    alignContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\r\n  'align-content-xs-space-between': {\r\n    alignContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\r\n  'align-content-xs-space-around': {\r\n    alignContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"center\"`. */\r\n  'justify-xs-center': {\r\n    justifyContent: 'center',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\r\n  'justify-xs-flex-end': {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\r\n  'justify-xs-space-between': {\r\n    justifyContent: 'space-between',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\r\n  'justify-xs-space-around': {\r\n    justifyContent: 'space-around',\r\n  },\r\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\r\n  'justify-xs-space-evenly': {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  ...generateGutter(theme, 'xs'),\r\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\r\n    // Use side effect over immutability for better performance.\r\n    generateGrid(accumulator, theme, key);\r\n    return accumulator;\r\n  }, {}),\r\n});\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { styles } from './Grid.style';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\r\nexport default StyledGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport capitalize from '@material-ui/core/utils/capitalize';\r\nimport { styles } from './Container.style';\r\n\r\nconst Container = React.forwardRef(function Container(props, ref) {\r\n  const {\r\n    classes,\r\n    className = '',\r\n    component: Component = 'div',\r\n    fixed = false,\r\n    maxWidth = 'xl',\r\n    useContainer = true,\r\n    overflowHidden = false,\r\n    ...other\r\n  } = props;\r\n\r\n  const container = (\r\n    <Component\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.fixed]: fixed,\r\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]:\r\n            maxWidth !== false,\r\n        },\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...other}\r\n    />\r\n  );\r\n\r\n  if (!useContainer) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.overflowHidden]: overflowHidden,\r\n      })}\r\n    >\r\n      {container}\r\n    </section>\r\n  );\r\n});\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Set the max-width to match the min-width of the current breakpoint.\r\n   * This is useful if you'd prefer to design for a fixed set of sizes\r\n   * instead of trying to accommodate a fully fluid viewport.\r\n   * It's fluid by default.\r\n   */\r\n  fixed: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the container.\r\n   * The container width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\r\n\r\n  useContainer: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\r\n","export const styles = theme => {\r\n  const paddings = {};\r\n\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      width: '100%',\r\n      marginLeft: 'auto',\r\n      boxSizing: 'border-box',\r\n      marginRight: 'auto',\r\n      paddingLeft: '0',\r\n      paddingRight: '0',\r\n    },\r\n    ...paddings,\r\n    /* Styles applied to the root element if `fixed={true}`. */\r\n    fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\r\n      const value = theme.breakpoints.values[breakpoint];\r\n\r\n      if (value !== 0) {\r\n        acc[theme.breakpoints.up(breakpoint)] = {\r\n          maxWidth: value,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {}),\r\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\r\n    maxWidthXs: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\r\n    maxWidthSm: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: theme.breakpoints.values.sm,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\r\n    maxWidthMd: {\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: theme.breakpoints.values.md,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\r\n    maxWidthLg: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n      },\r\n    },\r\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\r\n    maxWidthXl: {\r\n      [theme.breakpoints.up('xl')]: {\r\n        // maxWidth: theme.breakpoints.values.xl,\r\n        maxWidth: '100%',\r\n      },\r\n    },\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n  };\r\n};\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}