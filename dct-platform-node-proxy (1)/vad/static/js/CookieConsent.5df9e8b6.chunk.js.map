{"version":3,"sources":["global/utils/hooks/useScript.js","global/utils/hooks/useScriptCached.js","global/containers/common/CookieConsent/style.js","global/containers/common/CookieConsent/index.js","global/containers/common/CookieConsent/locators.js","global/utils/decodeHTML/index.js"],"names":["useScript","url","useEffect","script","isAsync","document","createElement","src","async","body","appendChild","createScript","removeChild","deleteScript","cachedScripts","useState","loaded","error","state","setState","includes","push","onScriptLoad","onScriptError","index","indexOf","splice","remove","addEventListener","removeEventListener","useStyles","makeStyles","theme","root","background","palette","lightGray","breakpoints","down","mixins","Black","withErrorBoundary","props","fields","codeSnippet","scriptURL","classes","snippet","value","decodeHTML","className","data-locator","dangerouslySetInnerHTML","__html","encodedHTML","replace"],"mappings":"6KA+BeA,EAVG,SAAAC,GAChBC,qBAAU,WACR,IAAMC,EAlBkB,SAACF,GAAyB,IAApBG,IAAmB,yDAEnD,IAAKH,EAAK,MAAO,GAEjB,IAAME,EAASE,SAASC,cAAc,UAKtC,OAJAH,EAAOI,IAAMN,EACbE,EAAOK,MAAQJ,EACfC,SAASI,KAAKC,YAAYP,GAEnBA,EASUQ,CAAaV,GAE5B,OAAO,YARiB,SAAAE,GAC1BA,GAAUE,SAASI,KAAKG,YAAYT,GAQhCU,CAAaV,MAEd,CAACF,K,SC1BFa,EAAgB,GAEL,SAASd,EAAUO,GAAK,MAEXQ,mBAAS,CACjCC,QAAQ,EACRC,OAAO,IAJ4B,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA4DrC,OArDAjB,qBACE,WAGE,IAAIY,EAAcM,SAASb,GAKpB,CACLO,EAAcO,KAAKd,GAGnB,IAAIJ,EAASE,SAASC,cAAc,UACpCH,EAAOI,IAAMA,EACbJ,EAAOK,OAAQ,EAGf,IAAMc,EAAe,WACnBH,EAAS,CACPH,QAAQ,EACRC,OAAO,KAILM,EAAgB,WAEpB,IAAMC,EAAQV,EAAcW,QAAQlB,GAChCiB,GAAS,GAAGV,EAAcY,OAAOF,EAAO,GAC5CrB,EAAOwB,SAEPR,EAAS,CACPH,QAAQ,EACRC,OAAO,KAWX,OAPAd,EAAOyB,iBAAiB,OAAQN,GAChCnB,EAAOyB,iBAAiB,QAASL,GAGjClB,SAASI,KAAKC,YAAYP,GAGnB,WACLA,EAAO0B,oBAAoB,OAAQP,GACnCnB,EAAO0B,oBAAoB,QAASN,IAzCtCJ,EAAS,CACPH,QAAQ,EACRC,OAAO,MA2Cb,CAACV,IAGI,CAACW,EAAMF,OAAQE,EAAMD,S,4ECjDfa,EAbGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,WAAYF,EAAMG,QAAQD,WAAWE,WAEvC,UAAW,CACT,wCAAwC,eACrCJ,EAAMK,YAAYC,KAAK,MAAQ,CAC9BJ,WAAW,GAAD,OAAKF,EAAMO,OAAOC,MAAM,KAAxB,sB,4BCqBHC,uBAtBO,SAAAC,GAAU,IAAD,EACMA,EAAMC,OAAjCC,EADqB,EACrBA,YAAaC,EADQ,EACRA,UACfC,EAAUhB,EAAUY,GAEpBK,EACJH,GACAA,EAAYI,OACZC,YAAWL,EAAYI,OAGzB,OADAhD,YAAU6C,GAAaA,EAAUG,OAC1BH,GAAaA,EAAUG,MAC5B,yBAAKE,UAAWJ,EAAQb,KAAMkB,eCnBJ,gBDmBkCC,wBAAyB,CAAEC,OAAQN,KAC7F,S,iCEpBN,kCAKO,IAAME,EAAa,SAAAK,GAAW,OAAIA,EAAYC,QAAQ,MAAO","file":"static/js/CookieConsent.5df9e8b6.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\n/* This hook will take javascript URL as parameter and load the script after component will mount asynchronously. \r\nIt will also remove the script on component unmount.*/\r\n\r\nexport const createScript = (url, isAsync = true) => {\r\n  // Return if url is undefined or not passed\r\n  if (!url) return '';\r\n\r\n  const script = document.createElement('script');\r\n  script.src = url;\r\n  script.async = isAsync;\r\n  document.body.appendChild(script);\r\n\r\n  return script;\r\n};\r\n\r\nexport const deleteScript = script => {\r\n  script && document.body.removeChild(script);\r\n};\r\n\r\nconst useScript = url => {\r\n  useEffect(() => {\r\n    const script = createScript(url);\r\n\r\n    return () => {\r\n      deleteScript(script);\r\n    };\r\n  }, [url]);\r\n};\r\n\r\nexport default useScript;\r\n","import { useState, useEffect } from 'react';\r\n\r\nlet cachedScripts = [];\r\n\r\nexport default function useScript(src) {\r\n  // Keeping track of script loaded and error state\r\n  const [state, setState] = useState({\r\n    loaded: false,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      // If cachedScripts array already includes src that means another instance ...\r\n      // ... of this hook already loaded this script, so no need to load again.\r\n      if (cachedScripts.includes(src)) {\r\n        setState({\r\n          loaded: true,\r\n          error: false,\r\n        });\r\n      } else {\r\n        cachedScripts.push(src);\r\n\r\n        // Create script\r\n        let script = document.createElement('script');\r\n        script.src = src;\r\n        script.async = true;\r\n\r\n        // Script event listener callbacks for load and error\r\n        const onScriptLoad = () => {\r\n          setState({\r\n            loaded: true,\r\n            error: false,\r\n          });\r\n        };\r\n\r\n        const onScriptError = () => {\r\n          // Remove from cachedScripts we can try loading again\r\n          const index = cachedScripts.indexOf(src);\r\n          if (index >= 0) cachedScripts.splice(index, 1);\r\n          script.remove();\r\n\r\n          setState({\r\n            loaded: true,\r\n            error: true,\r\n          });\r\n        };\r\n\r\n        script.addEventListener('load', onScriptLoad);\r\n        script.addEventListener('error', onScriptError);\r\n\r\n        // Add script to document body\r\n        document.body.appendChild(script);\r\n\r\n        // Remove event listeners on cleanup\r\n        return () => {\r\n          script.removeEventListener('load', onScriptLoad);\r\n          script.removeEventListener('error', onScriptError);\r\n        };\r\n      }\r\n    },\r\n    [src] // Only re-run effect if script src changes\r\n  );\r\n\r\n  return [state.loaded, state.error];\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: theme.palette.background.lightGray,\r\n  },\r\n  '@global': {\r\n    '#iubenda-cs-banner.iubenda-cs-visible': {\r\n      [theme.breakpoints.down('md')]: {\r\n        background: `${theme.mixins.Black(400)} !important`,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyles from './style';\r\nimport { useScript } from '../../../utils/hooks';\r\nimport PropTypes from 'prop-types';\r\nimport { decodeHTML } from '../../../utils/decodeHTML';\r\nimport withErrorBoundary from '../../../utils/HOCs/withErrorBoundary';\r\nimport { COMPONENT_NAME } from './locators';\r\n\r\nconst CookieConsent = props => {\r\n  const { codeSnippet, scriptURL } = props.fields;\r\n  const classes = useStyles(props);\r\n\r\n  const snippet =\r\n    codeSnippet &&\r\n    codeSnippet.value &&\r\n    decodeHTML(codeSnippet.value);\r\n\r\n  useScript(scriptURL && scriptURL.value);\r\n  return scriptURL && scriptURL.value ? (\r\n    <div className={classes.root} data-locator={COMPONENT_NAME} dangerouslySetInnerHTML={{ __html: snippet }} />\r\n  ) : null;\r\n};\r\n\r\nCookieConsent.propTypes = {\r\n  fields: PropTypes.shape({\r\n    codeSnippet: PropTypes.object,\r\n    scriptURL: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  }),\r\n};\r\n\r\nexport default withErrorBoundary(CookieConsent);\r\n\r\n","export const COMPONENT_NAME = 'CookieConsent';","/* \r\n    This method remove \"\\\" from html string\r\n    Accept params: encoded html\r\n    Return: decode html\r\n*/\r\nexport const decodeHTML = encodedHTML => encodedHTML.replace(/\\\\/g, '');\r\n"],"sourceRoot":""}